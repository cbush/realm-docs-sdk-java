{"path":"/io/realm/ImportFlag","root":{"type":"root","children":[{"type":"heading","children":[{"type":"text","value":"io.realm.ImportFlag"}],"depth":1},{"type":"html","value":"<a name=\"io_realm_ImportFlag\" ></a>","anchorName":"io_realm_ImportFlag","entity":{"canonicalName":"io.realm.ImportFlag","pageUri":"/io/realm/ImportFlag","data":{"category":"class","containingPackage":"io.realm","simpleTypeName":"ImportFlag","classType":"class"},"isExternal":false}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Superclass:"}]}]},{"type":"list","children":[{"type":"listItem","children":[{"type":"link","children":[{"type":"text","value":"java.lang.Enum"}],"targetCanonicalName":"java.lang.Enum","isPending":false,"linkText":"java.lang.Enum","url":"https://docs.oracle.com/javase/7/docs/api/java/lang/Enum.html","title":"java.lang.Enum","isExternal":true}]}],"ordered":false},{"type":"root","children":[{"type":"text","value":"This class describe how data is saved to Realm when saving whole objects.","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":74,"offset":73}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":74,"offset":73}}},{"type":"heading","children":[{"type":"text","value":"Enum Constant Summary"}],"depth":2},{"type":"table","children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Enum Constant"}]},{"type":"tableCell","children":[{"type":"text","value":"Description"}]}]},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"link","children":[{"type":"text","value":"CHECK_SAME_VALUES_BEFORE_SET"}],"targetCanonicalName":"io.realm.ImportFlag.CHECK_SAME_VALUES_BEFORE_SET","isPending":false,"linkText":"CHECK_SAME_VALUES_BEFORE_SET","url":"/io/realm/ImportFlag#io_realm_ImportFlag_CHECK_SAME_VALUES_BEFORE_SET","title":"CHECK_SAME_VALUES_BEFORE_SET","isExternal":false}]},{"type":"tableCell","children":[{"type":"paragraph","children":[{"type":"root","children":[{"type":"text","value":"With this flag enabled, fields will not be written to the Realm file if they contain the same value as the value already present in the Realm.","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":50,"offset":143}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":50,"offset":143}}}]}]}]}],"align":[null,null]},{"type":"heading","children":[{"type":"text","value":"Method Summary"}],"depth":2},{"type":"table","children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Modifier and Type"}]},{"type":"tableCell","children":[{"type":"text","value":"Method and Description"}]}]},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"public static"},{"type":"text","value":" "},{"type":"link","children":[{"type":"text","value":"ImportFlag"}],"url":"/io/realm/ImportFlag#io_realm_ImportFlag","title":"ImportFlag","linkText":"ImportFlag","targetCanonicalName":"io.realm.ImportFlag","isPending":false,"isExternal":false}]},{"type":"tableCell","children":[{"type":"paragraph","children":[{"type":"link","children":[{"type":"text","value":"values"}],"targetCanonicalName":"io.realm.ImportFlag.values(())","isPending":false,"linkText":"values","url":"/io/realm/ImportFlag#io_realm_ImportFlag_values____","title":"values","isExternal":false},{"type":"text","value":" "},{"type":"text","value":"("},{"type":"text","value":")"}]},{"type":"paragraph","children":[{"type":"root","children":[]}]}]}]},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"public static"},{"type":"text","value":" "},{"type":"link","children":[{"type":"text","value":"ImportFlag"}],"url":"/io/realm/ImportFlag#io_realm_ImportFlag","title":"ImportFlag","linkText":"ImportFlag","targetCanonicalName":"io.realm.ImportFlag","isPending":false,"isExternal":false}]},{"type":"tableCell","children":[{"type":"paragraph","children":[{"type":"link","children":[{"type":"text","value":"valueOf"}],"targetCanonicalName":"io.realm.ImportFlag.valueOf((String))","isPending":false,"linkText":"valueOf","url":"/io/realm/ImportFlag#io_realm_ImportFlag_valueOf__String__","title":"valueOf","isExternal":false},{"type":"text","value":" "},{"type":"text","value":"("},{"type":"link","children":[{"type":"text","value":"String"}],"targetCanonicalName":"java.lang.String","isPending":false,"linkText":"String","url":"https://docs.oracle.com/javase/7/docs/api/java/lang/String.html","title":"String","isExternal":true},{"type":"text","value":" name"},{"type":"text","value":")"}]},{"type":"paragraph","children":[{"type":"root","children":[]}]}]}]}],"align":[null,null]},{"type":"heading","children":[{"type":"text","value":"Enum Constant Detail"}],"depth":2},{"type":"html","value":"<a name=\"io_realm_ImportFlag_CHECK_SAME_VALUES_BEFORE_SET\" ></a>","anchorName":"io_realm_ImportFlag_CHECK_SAME_VALUES_BEFORE_SET","entity":{"canonicalName":"io.realm.ImportFlag.CHECK_SAME_VALUES_BEFORE_SET","pageUri":"/io/realm/ImportFlag","isExternal":false}},{"type":"heading","children":[{"type":"inlineCode","value":"CHECK_SAME_VALUES_BEFORE_SET"}],"depth":3},{"type":"paragraph","children":[{"type":"text","value":"public static final"},{"type":"text","value":" "},{"type":"link","children":[{"type":"text","value":"ImportFlag"}],"url":"/io/realm/ImportFlag#io_realm_ImportFlag","title":"ImportFlag","linkText":"ImportFlag","targetCanonicalName":"io.realm.ImportFlag","isPending":false,"isExternal":false}]},{"type":"paragraph","children":[{"type":"text","value":"With this flag enabled, fields will not be written to the Realm file if they contain the same\n value as the value already present in the Realm.\n <p>\n For local Realms this only has an impact on change listeners which will not report changes to\n those fields that was not written.\n <p>\n For synchronized Realms this also impacts the server, which will see improved performance as\n there is less changes to upload and merge into the server Realm.\n <p>\n It also impact how the server merges changes from different devices. Realm uses a\n last-write-wins approach when merging individual fields in an object, so if a field is not\n written it will be considered \"older\" than other fields modified.\n <p>\n E.g:\n <ol>\n     <li>\n         Server starts out with (Field A = 1, Field B = 1)\n     </li>\n     <li>\n         Device 1 writes (Field A = 2, Field B = 2).\n     </li>\n     <li>\n         Device 2 writes (Field A = 3, Field B = 1) but ignores (Field B = 1), because that is\n         the value in the Realm file at this point.\n     </li>\n     <li>\n         Device 1 uploads its changes to the server making the server (Field A = 2, Field B = 2).\n         Then Device 2 uploads its changes. Due to last-write-wins, the server version now\n         becomes (Field A = 3, Field B = 2).\n     </li>\n </ol>\n This is normally the desired behaviour as the final object is the merged result of the latest\n changes from both devices, however if all the fields in an object are considered an atomic\n unit, then this flag should not be set as it will ensure that all fields are set and thus have\n the same \"age\" when data are sent to the server."}]},{"type":"heading","children":[{"type":"text","value":"Method Detail"}],"depth":2},{"type":"heading","children":[{"type":"text","value":"values"}],"depth":3},{"type":"html","value":"<a name=\"io_realm_ImportFlag_values____\" ></a>","anchorName":"io_realm_ImportFlag_values____","entity":{"canonicalName":"io.realm.ImportFlag.values(())","pageUri":"/io/realm/ImportFlag","isExternal":false}},{"type":"heading","children":[{"type":"text","value":"public static"},{"type":"text","value":" "},{"type":"link","children":[{"type":"text","value":"ImportFlag"}],"url":"/io/realm/ImportFlag#io_realm_ImportFlag","title":"ImportFlag","linkText":"ImportFlag","targetCanonicalName":"io.realm.ImportFlag","isPending":false,"isExternal":false},{"type":"text","value":" values "},{"type":"text","value":"("},{"type":"text","value":")"}],"depth":4},{"type":"root","children":[]},{"type":"heading","children":[{"type":"text","value":"valueOf"}],"depth":3},{"type":"html","value":"<a name=\"io_realm_ImportFlag_valueOf__String__\" ></a>","anchorName":"io_realm_ImportFlag_valueOf__String__","entity":{"canonicalName":"io.realm.ImportFlag.valueOf((String))","pageUri":"/io/realm/ImportFlag","isExternal":false}},{"type":"heading","children":[{"type":"text","value":"public static"},{"type":"text","value":" "},{"type":"link","children":[{"type":"text","value":"ImportFlag"}],"url":"/io/realm/ImportFlag#io_realm_ImportFlag","title":"ImportFlag","linkText":"ImportFlag","targetCanonicalName":"io.realm.ImportFlag","isPending":false,"isExternal":false},{"type":"text","value":" valueOf "},{"type":"text","value":"("},{"type":"link","children":[{"type":"text","value":"String"}],"targetCanonicalName":"java.lang.String","isPending":false,"linkText":"String","url":"https://docs.oracle.com/javase/7/docs/api/java/lang/String.html","title":"String","isExternal":true},{"type":"text","value":" name"},{"type":"text","value":")"}],"depth":4},{"type":"root","children":[]}]}}