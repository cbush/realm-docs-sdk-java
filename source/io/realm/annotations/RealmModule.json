{"path":"/io/realm/annotations/RealmModule","root":{"type":"root","children":[{"type":"heading","children":[{"type":"text","value":"io.realm.annotations.RealmModule"}],"depth":1},{"type":"html","value":"<a name=\"io_realm_annotations_RealmModule\" ></a>","anchorName":"io_realm_annotations_RealmModule","entity":{"canonicalName":"io.realm.annotations.RealmModule","pageUri":"/io/realm/annotations/RealmModule","data":{"category":"class","containingPackage":"io.realm.annotations","simpleTypeName":"RealmModule","classType":"class"},"isExternal":false}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Implemented interfaces:"}]}]},{"type":"list","children":[{"type":"listItem","children":[{"type":"link","children":[{"type":"text","value":"java.lang.annotation.Annotation"}],"targetCanonicalName":"java.lang.annotation.Annotation","isPending":false,"linkText":"java.lang.annotation.Annotation","url":"https://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Annotation.html","title":"java.lang.annotation.Annotation","isExternal":true}]}],"ordered":false},{"type":"root","children":[{"type":"text","value":"By default a Realm can store all classes extending RealmObject in a project. However, if you want to restrict a Realm to only contain a subset of classes or want to share them between a library project and an app project, you must use a RealmModule.","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":2,"offset":253}}},{"type":"paragraph","children":[{"type":"text","value":"A RealmModule is a collection of classes extending RealmObject that can be combined with other RealmModules to create the schema for a Realm. This makes it easier to control versioning and migration of those Realms.","position":{"start":{"line":4,"column":5,"offset":256},"end":{"line":7,"column":2,"offset":476}}}],"position":{"start":{"line":4,"column":2,"offset":253},"end":{"line":7,"column":2,"offset":476}}},{"type":"paragraph","children":[{"type":"paragraph","children":[{"type":"text","value":"A RealmModule can either be a library module or an app module. The distinction is made by setting "},{"type":"inlineCode","value":"library = true"},{"type":"text","value":". Setting "},{"type":"inlineCode","value":"library = true"},{"type":"text","value":"is normally only relevant for library authors. See below for further details."}]}],"position":{"start":{"line":7,"column":2,"offset":476},"end":{"line":12,"column":2,"offset":1802}}},{"type":"paragraph","children":[{"type":"text","value":"Currently, it is not possible to have multiple RealmModule declarations in a single file. If you have more than one RealmModule, you will have to use separate Java files for each module.","position":{"start":{"line":12,"column":5,"offset":1805},"end":{"line":17,"column":2,"offset":1998}}}],"position":{"start":{"line":12,"column":2,"offset":1802},"end":{"line":17,"column":2,"offset":1998}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RealmModules and libraries","position":{"start":{"line":17,"column":6,"offset":2002},"end":{"line":17,"column":32,"offset":2028}}}],"position":{"start":{"line":17,"column":2,"offset":1998},"end":{"line":17,"column":37,"offset":2033}}},{"type":"paragraph","children":[{"type":"text","value":"Realms default behavior is to automatically create a RealmModule called "},{"type":"inlineCode","value":"DefaultRealmModule"},{"type":"text","value":"which contains all classes extending RealmObject in a project. This module is automatically known by Realm."}]},{"type":"paragraph","children":[{"type":"paragraph","children":[{"type":"text","value":"This behavior is problematic when combining a library project and an app project that both uses Realm. This is because the "},{"type":"inlineCode","value":"DefaultRealmModule"},{"type":"text","value":"will be created for both the library project and the app project, which will cause the project to fail with duplicate class definition errors."}]}],"position":{"start":{"line":21,"column":2,"offset":2796},"end":{"line":25,"column":2,"offset":3648}}},{"type":"paragraph","children":[{"type":"paragraph","children":[{"type":"text","value":"Library authors are responsible for avoiding this conflict by using explicit modules where "},{"type":"inlineCode","value":"library = true"},{"type":"text","value":"is set. This disables the generation of the DefaultRealmModule for the library project and allows the library to be included in the app project that also uses Realm. This means that library projects that uses Realm internally are required to specify a specific module using "},{"type":"inlineCode","value":"RealmConfiguration.modules()"},{"type":"text","value":"."}]}],"position":{"start":{"line":25,"column":2,"offset":3648},"end":{"line":30,"column":2,"offset":5197}}},{"type":"paragraph","children":[{"type":"paragraph","children":[{"type":"text","value":"App developers are not required to specify any modules, as they implicitly use the "},{"type":"inlineCode","value":"DefaultRealmModule"},{"type":"text","value":", but they now has the option of adding the library project classes to their schema using "},{"type":"inlineCode","value":"RealmConfiguration.addModule()"},{"type":"text","value":"."}]}],"position":{"start":{"line":30,"column":2,"offset":5197},"end":{"line":33,"column":616,"offset":6568}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":33,"column":616,"offset":6568}}}]}}