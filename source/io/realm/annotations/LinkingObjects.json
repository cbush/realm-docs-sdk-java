{"path":"/io/realm/annotations/LinkingObjects","root":{"type":"root","children":[{"type":"heading","children":[{"type":"text","value":"io.realm.annotations.LinkingObjects"}],"depth":1},{"type":"html","value":"<a name=\"io_realm_annotations_LinkingObjects\" ></a>","anchorName":"io_realm_annotations_LinkingObjects","entity":{"canonicalName":"io.realm.annotations.LinkingObjects","pageUri":"/io/realm/annotations/LinkingObjects","data":{"category":"class","containingPackage":"io.realm.annotations","simpleTypeName":"LinkingObjects","classType":"class"},"type":"internal"}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Implemented interfaces:"}]}]},{"type":"list","children":[{"type":"listItem","children":[{"type":"link","children":[{"type":"text","value":"java.lang.annotation.Annotation"}],"targetCanonicalName":"java.lang.annotation.Annotation","isPending":false,"linkText":"java.lang.annotation.Annotation","url":"https://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Annotation.html","title":"java.lang.annotation.Annotation","entityType":"external"}]}],"ordered":false},{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Annotation for defining a reverse relationship from one class to another. This annotation can only be added to a field of the type "},{"type":"inlineCode","value":"RealmResults"},{"type":"text","value":"."}]},{"type":"paragraph","children":[{"type":"text","value":" To expose reverse relationships for use, create a declaration as follows:\n "},{"type":"code","value":"\n\n public class Person extends RealmObject {\n   String name;\n   Dog dog; // Normal relation\n }\n\n public class Dog extends RealmObject {\n   // This holds all Person objects with a relation to this Dog object (= linking objects)\n   \\@LinkingObjects(\"dog\")\n   final RealmResults>Person< owners = null;\n }\n\n // Find all Dogs with at least one owner named John\n realm.where(Dog.class).equalTo(\"owners.name\", \"John\").findAll();\n ","lang":"java"},{"type":"text","value":"\n "}]},{"type":"text","value":"In the above example `Person` is related to `Dog` through the field `dog`. This in turn means that an implicit reverse relationship exists between the class `Dog` and the class `Person`. This inverse relationship is made public and queryable by the `RealmResults` field annotated with `@LinkingObject`. This makes it possible to query properties of the dogs owner without having to manually maintain a \"owner\" field in the `Dog` class.","position":{"start":{"line":6,"column":8,"offset":2765},"end":{"line":12,"column":2,"offset":3208}}},{"type":"paragraph","children":[{"type":"text","value":"Linking objects have the following properties:","position":{"start":{"line":12,"column":5,"offset":3211},"end":{"line":14,"column":2,"offset":3261}}}],"position":{"start":{"line":12,"column":2,"offset":3208},"end":{"line":14,"column":2,"offset":3261}}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The link is maintained by Realm and only works for managed objects.","position":{"start":{"line":15,"column":10,"offset":3275},"end":{"line":15,"column":77,"offset":3342}}}]}],"position":{"start":{"line":15,"column":6,"offset":3271},"end":{"line":15,"column":82,"offset":3347}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"They can be queried just like normal relation.","position":{"start":{"line":16,"column":10,"offset":3357},"end":{"line":16,"column":56,"offset":3403}}}]}],"position":{"start":{"line":16,"column":6,"offset":3353},"end":{"line":16,"column":61,"offset":3408}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"They can be followed just like normal relation.","position":{"start":{"line":17,"column":10,"offset":3418},"end":{"line":17,"column":57,"offset":3465}}}]}],"position":{"start":{"line":17,"column":6,"offset":3414},"end":{"line":17,"column":62,"offset":3470}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"They are ignored when doing a `copyToRealm().`","position":{"start":{"line":18,"column":10,"offset":3480},"end":{"line":18,"column":56,"offset":3526}}}]}],"position":{"start":{"line":18,"column":6,"offset":3476},"end":{"line":18,"column":61,"offset":3531}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"They are ignored when doing a `copyFromRealm().`","position":{"start":{"line":19,"column":10,"offset":3541},"end":{"line":19,"column":58,"offset":3589}}}]}],"position":{"start":{"line":19,"column":6,"offset":3537},"end":{"line":19,"column":63,"offset":3594}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"They are ignored when using the various `createObjectFromJson*` and `createAllFromJson*` methods.","position":{"start":{"line":20,"column":10,"offset":3604},"end":{"line":20,"column":107,"offset":3701}}}]}],"position":{"start":{"line":20,"column":6,"offset":3600},"end":{"line":20,"column":112,"offset":3706}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Listeners on an object with a `@LinkingObject` field will not be triggered if the linking objects change, e.g: if another object drops a reference to this object.","position":{"start":{"line":21,"column":10,"offset":3716},"end":{"line":22,"column":62,"offset":3883}}}]}],"position":{"start":{"line":21,"column":6,"offset":3712},"end":{"line":22,"column":67,"offset":3888}}}],"position":{"start":{"line":14,"column":2,"offset":3261},"end":{"line":23,"column":7,"offset":3895}}},{"type":"paragraph","children":[{"type":"text","value":"In addition, they have the following restrictions:","position":{"start":{"line":24,"column":5,"offset":3900},"end":{"line":26,"column":2,"offset":3954}}}],"position":{"start":{"line":24,"column":2,"offset":3897},"end":{"line":26,"column":2,"offset":3954}}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"paragraph","children":[{"type":"text","value":"@"},{"type":"text","value":"Ignore takes precedence. A "},{"type":"text","value":"@"},{"type":"text","value":"LinkingObjects annotation on "},{"type":"text","value":"@"},{"type":"text","value":"Ignore field will be ignored."}]}]}],"position":{"start":{"line":27,"column":6,"offset":3964},"end":{"line":27,"column":1697,"offset":5655}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"paragraph","children":[{"type":"text","value":"The annotated field cannot be "},{"type":"text","value":"@"},{"type":"text","value":"Required."}]}]}],"position":{"start":{"line":28,"column":6,"offset":5661},"end":{"line":28,"column":586,"offset":6241}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The annotated field must be `final`.","position":{"start":{"line":29,"column":10,"offset":6251},"end":{"line":29,"column":46,"offset":6287}}}]}],"position":{"start":{"line":29,"column":6,"offset":6247},"end":{"line":29,"column":51,"offset":6292}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The annotation argument (the name of the backlinked field) is required.","position":{"start":{"line":30,"column":10,"offset":6302},"end":{"line":30,"column":81,"offset":6373}}}]}],"position":{"start":{"line":30,"column":6,"offset":6298},"end":{"line":30,"column":86,"offset":6378}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The annotation argument must be a simple field name. It cannot contain periods ('.').","position":{"start":{"line":31,"column":10,"offset":6388},"end":{"line":31,"column":96,"offset":6474}}}]}],"position":{"start":{"line":31,"column":6,"offset":6384},"end":{"line":31,"column":101,"offset":6479}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The annotated field must be of type `RealmResults<T>` where T is concrete class that extends `RealmModel`.","position":{"start":{"line":32,"column":10,"offset":6489},"end":{"line":32,"column":122,"offset":6601}}}]}],"position":{"start":{"line":32,"column":6,"offset":6485},"end":{"line":32,"column":127,"offset":6606}}}],"position":{"start":{"line":26,"column":2,"offset":3954},"end":{"line":33,"column":7,"offset":6613}}},{"type":"paragraph","children":[{"type":"text","value":"Note that when the source of the reverse reference (`dog` in the case above) is a `List`, there is a reverse reference for each forward reference, even if both forward references are to the same object. If the `Person` class above were defined as: "},{"type":"code","value":"public class DogLover extends RealmObject {\n String name;\n List<Dog> dogs = new ArrayList<Dog>;\n }\n ","lang":"java"},{"type":"text","value":" then the following code executes without error "},{"type":"code","value":"Dog fido = new Dog();\n DogLover john = new DogLover()\n john.dogs.add(fido);\n john.dogs.add(fido);\n assert john.dogs.size() == 2;\n assert fido.owners.size() == 2;\n ","lang":"java"}]},{"type":"paragraph","children":[{"type":"paragraph","children":[{"type":"text","value":"Querying inverse relationship is like querying any "},{"type":"inlineCode","value":"RealmResults"},{"type":"text","value":". This means that an inverse relationship cannot be "},{"type":"inlineCode","value":"null"},{"type":"text","value":" but it can be empty (length is 0). It is possible to query fields in the source class. This is equivalent to link queries. Please read "}]},{"type":"link","title":null,"url":"https://realm.io/docs/java/latest/#link-queries","children":[{"type":"text","value":"for more information","position":{"start":{"line":44,"column":100,"offset":10224},"end":{"line":45,"column":13,"offset":10245}}}],"position":{"start":{"line":44,"column":42,"offset":10166},"end":{"line":45,"column":17,"offset":10249}}},{"type":"text","value":".","position":{"start":{"line":45,"column":17,"offset":10249},"end":{"line":45,"column":18,"offset":10250}}}],"position":{"start":{"line":41,"column":2,"offset":8826},"end":{"line":45,"column":18,"offset":10250}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":45,"column":18,"offset":10250}}}]}}