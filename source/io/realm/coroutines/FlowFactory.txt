
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

io.realm.coroutines.FlowFactory
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_coroutines_FlowFactory:

Factory interface for creating Kotlin **Flow (?)**s for Realm classes.


Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_coroutines_FlowFactory_from__Realm__>` (:ref:`Realm <io_realm_Realm>` realm)
       
       Creates a **Flow (?)**for a **Realm (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_coroutines_FlowFactory_from__DynamicRealm__>` (:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm)
       
       Creates a **Flow (?)**for a **DynamicRealm (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_coroutines_FlowFactory_from__Realm__RealmResults_T___>` <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmResults\<T> <io_realm_RealmResults>` results)
       
       Creates a **Flow (?)**for a **RealmResults (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetFrom <io_realm_coroutines_FlowFactory_changesetFrom__Realm__RealmResults_T___>` <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmResults\<T> <io_realm_RealmResults>` results)
       
       Creates a **Flow (?)**for a **RealmResults (?)**instance.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_coroutines_FlowFactory_from__DynamicRealm__RealmResults_T___>` <**T (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`io.realm.RealmResults\<T> <io_realm_RealmResults>` results)
       
       Creates a **Flow (?)**for a **RealmResults (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetFrom <io_realm_coroutines_FlowFactory_changesetFrom__DynamicRealm__RealmResults_T___>` <**T (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`io.realm.RealmResults\<T> <io_realm_RealmResults>` results)
       
       Creates a **Flow (?)**for a **RealmResults (?)**instance.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_coroutines_FlowFactory_from__Realm__RealmList_T___>` <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmList\<T> <io_realm_RealmList>` realmList)
       
       Creates a **Flow (?)**for a **RealmList (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetFrom <io_realm_coroutines_FlowFactory_changesetFrom__Realm__RealmList_T___>` <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmList\<T> <io_realm_RealmList>` list)
       
       Creates a **Flow (?)**for a **RealmList (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_coroutines_FlowFactory_from__DynamicRealm__RealmList_T___>` <**T (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`io.realm.RealmList\<T> <io_realm_RealmList>` realmList)
       
       Creates a **Flow (?)**for a **RealmList (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetFrom <io_realm_coroutines_FlowFactory_changesetFrom__DynamicRealm__RealmList_T___>` <**T (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`io.realm.RealmList\<T> <io_realm_RealmList>` list)
       
       Creates a **Flow (?)**for a **RealmList (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_coroutines_FlowFactory_from__Realm__T__>` <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, **T (?)** realmObject)
       
       Creates a **Flow (?)**for a **RealmObject (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetFrom <io_realm_coroutines_FlowFactory_changesetFrom__Realm__T__>` <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, **T (?)** realmObject)
       
       Creates a **Flow (?)**for a **RealmObject (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_coroutines_FlowFactory_from__DynamicRealm__DynamicRealmObject__>` (:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>` dynamicRealmObject)
       
       Creates a **Flow (?)**for a **DynamicRealmObject (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetFrom <io_realm_coroutines_FlowFactory_changesetFrom__DynamicRealm__DynamicRealmObject__>` (:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>` dynamicRealmObject)
       
       Creates a **Flow (?)**for a **DynamicRealmObject (?)**.
       
       
       
       
       
   
   
Method Detail
=============

from
----

.. _io_realm_coroutines_FlowFactory_from__Realm__:

public <any> from(undefined realm)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** from (:ref:`Realm <io_realm_Realm>` realm)

Creates a **Flow (?)**for a **Realm (?)**. It should emit the initial state of the Realm when subscribed to and on each subsequent update of the Realm.


Parameters
__________

- ``realm - ``**Realm (?)**instance being observed for changes to be emitted by the flow.
   
   
   

.. _io_realm_coroutines_FlowFactory_from__DynamicRealm__:

public <any> from(undefined dynamicRealm)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** from (:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm)

Creates a **Flow (?)**for a **DynamicRealm (?)**. It should emit the initial state of the Realm when subscribed to and on each subsequent update of the Realm.


Parameters
__________

- ``dynamicRealm - ``**DynamicRealm (?)**instance being observed for changes to be emitted by the flow.
   
   
   

.. _io_realm_coroutines_FlowFactory_from__Realm__RealmResults_T___:

public <any> from<T>(undefined realm, undefined results)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** from <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmResults\<T> <io_realm_RealmResults>` results)

Creates a **Flow (?)**for a **RealmResults (?)**. It should emit the initial RealmResult when subscribed to and on each subsequent update of the RealmResults.


Type Parameters
_______________

- ``T - ``type of RealmObject.
   

Parameters
__________

- ``results - ``**RealmResults (?)**instance being observed for changes to be emitted by the flow.
   
   
   
- ``realm - ``**Realm (?)**instance from where the results are coming.
   
   
   

.. _io_realm_coroutines_FlowFactory_from__DynamicRealm__RealmResults_T___:

public <any> from<T>(undefined dynamicRealm, undefined results)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** from <**T (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`io.realm.RealmResults\<T> <io_realm_RealmResults>` results)

Creates a **Flow (?)**for a **RealmResults (?)**. It should emit the initial RealmResult when subscribed to and on each subsequent update of the RealmResults.


Type Parameters
_______________

- ``T - ``type of RealmObject.
   

Parameters
__________

- ``results - ``**RealmResults (?)**instance being observed for changes to be emitted by the flow.
   
   
   
- ``dynamicRealm - ``**DynamicRealm (?)**instance from where the results are coming.
   
   
   

.. _io_realm_coroutines_FlowFactory_from__Realm__RealmList_T___:

public <any> from<T>(undefined realm, undefined realmList)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** from <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmList\<T> <io_realm_RealmList>` realmList)

Creates a **Flow (?)**for a **RealmList (?)**. It should emit the initial RealmResult when subscribed to and on each subsequent update of the RealmList.

Note: **io.realm.RealmChangeListener (?)**is currently not supported on RealmLists.




Type Parameters
_______________

- ``T - ``type of RealmObject
   

Parameters
__________

- ``realmList - ``**RealmList (?)**instance being observed for changes to be emitted by the flow.
   
   
   
- ``realm - ``**Realm (?)**instance from where the results are coming.
   
   
   

.. _io_realm_coroutines_FlowFactory_from__DynamicRealm__RealmList_T___:

public <any> from<T>(undefined dynamicRealm, undefined realmList)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** from <**T (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`io.realm.RealmList\<T> <io_realm_RealmList>` realmList)

Creates a **Flow (?)**for a **RealmList (?)**. It should emit the initial RealmResult when subscribed to and on each subsequent update of the RealmList.

Note: **io.realm.RealmChangeListener (?)**is currently not supported on RealmLists.




Type Parameters
_______________

- ``T - ``type of RealmObject
   

Parameters
__________

- ``realmList - ``**RealmList (?)**instance being observed for changes to be emitted by the flow.
   
   
   
- ``dynamicRealm - ``**DynamicRealm (?)**instance from where the results are coming.
   
   
   

.. _io_realm_coroutines_FlowFactory_from__Realm__T__:

public <any> from<T>(undefined realm, undefined realmObject)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** from <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, **T (?)** realmObject)

Creates a **Flow (?)**for a **RealmObject (?)**. It should emit the initial object when subscribed to and on each subsequent update of the object.


Type Parameters
_______________

- ``T - ``type of query target
   

Parameters
__________

- ``realmObject - ``**RealmObject (?)**instance being observed for changes to be emitted by the flow.
   
   
   
- ``realm - ``**Realm (?)**instance from where the object is coming.
   
   
   

.. _io_realm_coroutines_FlowFactory_from__DynamicRealm__DynamicRealmObject__:

public <any> from(undefined dynamicRealm, undefined dynamicRealmObject)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** from (:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>` dynamicRealmObject)

Creates a **Flow (?)**for a **DynamicRealmObject (?)**. It should emit the initial object when subscribed to and on each subsequent update of the object.


Parameters
__________

- ``dynamicRealm - ``**DynamicRealm (?)**instance from where the object is coming.
   
   
   
- ``dynamicRealmObject - ``**DynamicRealmObject (?)**instance being observed for changes to be emitted by the flow.
   
   
   

changesetFrom
-------------

.. _io_realm_coroutines_FlowFactory_changesetFrom__Realm__RealmResults_T___:

public <any> changesetFrom<T>(undefined realm, undefined results)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** changesetFrom <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmResults\<T> <io_realm_RealmResults>` results)

Creates a **Flow (?)**for a **RealmResults (?)**instance. It should emit the initial results when subscribed to and on each subsequent update of the results it should emit the results plus the **io.realm.rx.CollectionChange (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefore be left to the user.


Parameters
__________

- ``realm - ``**Realm (?)**instance from where the object is coming.
   
   
   
- ``results - ``**RealmResults (?)**instance being observed for changes to be emitted by the flow.
   
   
   

.. _io_realm_coroutines_FlowFactory_changesetFrom__DynamicRealm__RealmResults_T___:

public <any> changesetFrom<T>(undefined dynamicRealm, undefined results)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** changesetFrom <**T (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`io.realm.RealmResults\<T> <io_realm_RealmResults>` results)

Creates a **Flow (?)**for a **RealmResults (?)**instance. It should emit the initial results when subscribed to and on each subsequent update of the results it should emit the results plus the **io.realm.rx.CollectionChange (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefore be left to the user.


Parameters
__________

- ``dynamicRealm - ``**DynamicRealm (?)**instance from where the object is coming.
   
   
   
- ``results - ``**RealmResults (?)**instance being observed for changes to be emitted by the flow.
   
   
   

.. _io_realm_coroutines_FlowFactory_changesetFrom__Realm__RealmList_T___:

public <any> changesetFrom<T>(undefined realm, undefined list)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** changesetFrom <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmList\<T> <io_realm_RealmList>` list)

Creates a **Flow (?)**for a **RealmList (?)**. It should emit the initial list when subscribed to and on each subsequent update of the list it should emit the list plus the **io.realm.rx.CollectionChange (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefore be left to the user.


Parameters
__________

- ``realm - ``**Realm (?)**instance from where the object is coming.
   
   
   
- ``list - ``**RealmList (?)**instance being observed for changes to be emitted by the flow.
   
   
   

.. _io_realm_coroutines_FlowFactory_changesetFrom__DynamicRealm__RealmList_T___:

public <any> changesetFrom<T>(undefined dynamicRealm, undefined list)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** changesetFrom <**T (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`io.realm.RealmList\<T> <io_realm_RealmList>` list)

Creates a **Flow (?)**for a **RealmList (?)**. It should emit the initial list when subscribed to and on each subsequent update of the list it should emit the list plus the **io.realm.rx.CollectionChange (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefore be left to the user.


Parameters
__________

- ``dynamicRealm - ``**DynamicRealm (?)**instance from where the object is coming.
   
   
   
- ``list - ``**RealmList (?)**instance being observed for changes to be emitted by the flow.
   
   
   

.. _io_realm_coroutines_FlowFactory_changesetFrom__Realm__T__:

public <any> changesetFrom<T>(undefined realm, undefined realmObject)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** changesetFrom <**T (?)** >(:ref:`Realm <io_realm_Realm>` realm, **T (?)** realmObject)

Creates a **Flow (?)**for a **RealmObject (?)**. It should emit the initial object when subscribed to and on each subsequent update of the object it should emit the object plus the **io.realm.ObjectChangeSet (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefore be left to the user.


Parameters
__________

- ``realm - ``**Realm (?)**instance from where the object is coming.
   
   
   
- ``realmObject - ``**RealmObject (?)**instance being observed for changes to be emitted by the flow.
   
   
   

.. _io_realm_coroutines_FlowFactory_changesetFrom__DynamicRealm__DynamicRealmObject__:

public <any> changesetFrom(undefined dynamicRealm, undefined dynamicRealmObject)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

public **<any> (?)** changesetFrom (:ref:`DynamicRealm <io_realm_DynamicRealm>` dynamicRealm, :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>` dynamicRealmObject)

Creates a **Flow (?)**for a **DynamicRealmObject (?)**. It should emit the initial object when subscribed to and on each subsequent update of the object it should emit the object plus the **io.realm.ObjectChangeSet (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefore be left to the user.


Parameters
__________

- ``dynamicRealm - ``**DynamicRealm (?)**instance from where the object is coming.
   
   
   
- ``dynamicRealmObject - ``**DynamicRealmObject (?)**instance being observed for changes to be emitted by the flow.
   
   
   


