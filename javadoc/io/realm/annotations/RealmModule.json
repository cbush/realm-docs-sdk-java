{"commentText": "By default a Realm can store all classes extending RealmObject in a project. However, if you want to restrict a\n Realm to only contain a subset of classes or want to share them between a library project and an app project, you must\n use a RealmModule.\n <p>\n A RealmModule is a collection of classes extending RealmObject that can be combined with other RealmModules to create\n the schema for a Realm. This makes it easier to control versioning and migration of those Realms.\n <p>\n A RealmModule can either be a library module or an app module. The distinction is made by setting\n {@code library = true}. Setting {@code library = true} is normally only relevant for library authors. See below for\n further details.\n\n <p>\n Currently, it is not possible to have multiple RealmModule declarations in a single file. If you have more than one\n RealmModule, you will have to use separate Java files for each module.\n\n\n <h2>RealmModules and libraries</h2>\n\n Realms default behavior is to automatically create a RealmModule called {@code DefaultRealmModule} which contains all\n classes extending RealmObject in a project. This module is automatically known by Realm.\n <p>\n This behavior is problematic when combining a library project and an app project that both uses Realm. This is\n because the {@code DefaultRealmModule} will be created for both the library project and the app project, which will\n cause the project to fail with duplicate class definition errors.\n <p>\n Library authors are responsible for avoiding this conflict by using explicit modules where {@code library = true} is\n set. This disables the generation of the DefaultRealmModule for the library project and allows the library to be\n included in the app project that also uses Realm. This means that library projects that uses Realm internally are\n required to specify a specific module using {@code RealmConfiguration.modules()}.\n <p>\n App developers are not required to specify any modules, as they implicitly use the {@code DefaultRealmModule}, but\n they now has the option of adding the library project classes to their schema using\n {@code RealmConfiguration.addModule()}.", "name": "RealmModule", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": true, "isOrdinaryClass": false, "isClass": true, "isIncluded": true, "position": {"line": 65, "column": 9, "file": "./realm-annotations/src/main/java/io/realm/annotations/RealmModule.java"}, "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples/realmModuleAppExample\">Example of a project using modules</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples/realmModuleAppExample\">Example of a project using modules</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples/realmModuleAppExample\">Example of a project using modules</a>"}], "label": ""}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples/realmModuleAppExample\">Example of a project using modules</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples/realmModuleAppExample\">Example of a project using modules</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples/realmModuleAppExample\">Example of a project using modules</a>"}], "label": ""}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "By default a Realm can store all classes extending RealmObject in a project. However, if you want to restrict a\n Realm to only contain a subset of classes or want to share them between a library project and an app project, you must\n use a RealmModule.\n <p>\n A RealmModule is a collection of classes extending RealmObject that can be combined with other RealmModules to create\n the schema for a Realm. This makes it easier to control versioning and migration of those Realms.\n <p>\n A RealmModule can either be a library module or an app module. The distinction is made by setting\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "By default a Realm can store all classes extending RealmObject in a project. However, if you want to restrict a\n Realm to only contain a subset of classes or want to share them between a library project and an app project, you must\n use a RealmModule.\n <p>\n A RealmModule is a collection of classes extending RealmObject that can be combined with other RealmModules to create\n the schema for a Realm. This makes it easier to control versioning and migration of those Realms.\n <p>\n A RealmModule can either be a library module or an app module. The distinction is made by setting\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "By default a Realm can store all classes extending RealmObject in a project."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "library = true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "library = true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "library = true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Setting ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Setting "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "library = true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "library = true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "library = true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is normally only relevant for library authors. See below for\n further details.\n\n <p>\n Currently, it is not possible to have multiple RealmModule declarations in a single file. If you have more than one\n RealmModule, you will have to use separate Java files for each module.\n\n\n <h2>RealmModules and libraries</h2>\n\n Realms default behavior is to automatically create a RealmModule called ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is normally only relevant for library authors. See below for\n further details.\n\n <p>\n Currently, it is not possible to have multiple RealmModule declarations in a single file. If you have more than one\n RealmModule, you will have to use separate Java files for each module.\n\n\n <h2>RealmModules and libraries</h2>\n\n Realms default behavior is to automatically create a RealmModule called "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is normally only relevant for library authors."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "DefaultRealmModule", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultRealmModule"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultRealmModule"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " which contains all\n classes extending RealmObject in a project. This module is automatically known by Realm.\n <p>\n This behavior is problematic when combining a library project and an app project that both uses Realm. This is\n because the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " which contains all\n classes extending RealmObject in a project. This module is automatically known by Realm.\n <p>\n This behavior is problematic when combining a library project and an app project that both uses Realm. This is\n because the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "which contains all\n classes extending RealmObject in a project."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "DefaultRealmModule", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultRealmModule"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultRealmModule"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created for both the library project and the app project, which will\n cause the project to fail with duplicate class definition errors.\n <p>\n Library authors are responsible for avoiding this conflict by using explicit modules where ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created for both the library project and the app project, which will\n cause the project to fail with duplicate class definition errors.\n <p>\n Library authors are responsible for avoiding this conflict by using explicit modules where "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be created for both the library project and the app project, which will\n cause the project to fail with duplicate class definition errors."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "library = true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "library = true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "library = true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is\n set. This disables the generation of the DefaultRealmModule for the library project and allows the library to be\n included in the app project that also uses Realm. This means that library projects that uses Realm internally are\n required to specify a specific module using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is\n set. This disables the generation of the DefaultRealmModule for the library project and allows the library to be\n included in the app project that also uses Realm. This means that library projects that uses Realm internally are\n required to specify a specific module using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is\n set."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "RealmConfiguration.modules()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.modules()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.modules()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n App developers are not required to specify any modules, as they implicitly use the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n App developers are not required to specify any modules, as they implicitly use the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "DefaultRealmModule", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultRealmModule"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultRealmModule"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but\n they now has the option of adding the library project classes to their schema using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but\n they now has the option of adding the library project classes to their schema using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but\n they now has the option of adding the library project classes to their schema using"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "RealmConfiguration.addModule()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.addModule()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.addModule()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "By default a Realm can store all classes extending RealmObject in a project.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "By default a Realm can store all classes extending RealmObject in a project."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "By default a Realm can store all classes extending RealmObject in a project."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm.annotations"}, "qualifiedName": "io.realm.annotations.RealmModule", "modifierSpecifier": 513, "modifiers": "public interface", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.annotation.Retention", "typeName": "Retention", "qualifiedTypeName": "java.lang.annotation.Retention", "simpleTypeName": "Retention", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [{"element": {"commentText": "", "name": "value", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": true, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": false, "position": {"line": 0, "column": 0, "file": "Retention.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "AnnotationTypeElementDoc", "containingClass": {"_class": "ClassDoc", "asString": "java.lang.annotation.Retention", "typeName": "Retention", "qualifiedTypeName": "java.lang.annotation.Retention", "simpleTypeName": "Retention", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "java.lang.annotation"}, "qualifiedName": "java.lang.annotation.Retention.value", "modifierSpecifier": 1025, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.annotation.RetentionPolicy", "typeName": "RetentionPolicy", "qualifiedTypeName": "java.lang.annotation.RetentionPolicy", "simpleTypeName": "RetentionPolicy", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "value": "java.lang.annotation.RetentionPolicy.RUNTIME"}], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "java.lang.annotation.Target", "typeName": "Target", "qualifiedTypeName": "java.lang.annotation.Target", "simpleTypeName": "Target", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [{"element": {"commentText": "", "name": "value", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": true, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": false, "position": {"line": 0, "column": 0, "file": "Target.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "AnnotationTypeElementDoc", "containingClass": {"_class": "ClassDoc", "asString": "java.lang.annotation.Target", "typeName": "Target", "qualifiedTypeName": "java.lang.annotation.Target", "simpleTypeName": "Target", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "java.lang.annotation"}, "qualifiedName": "java.lang.annotation.Target.value", "modifierSpecifier": 1025, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "java.lang.annotation.ElementType[]", "typeName": "ElementType", "qualifiedTypeName": "java.lang.annotation.ElementType", "simpleTypeName": "ElementType", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.annotation.ElementType", "typeName": "ElementType", "qualifiedTypeName": "java.lang.annotation.ElementType", "simpleTypeName": "ElementType", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}}, "value": "java.lang.annotation.ElementType.TYPE"}], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "java.lang.annotation.Inherited", "typeName": "Inherited", "qualifiedTypeName": "java.lang.annotation.Inherited", "simpleTypeName": "Inherited", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isAbstract": true, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [], "inheritedMethods": {"java.lang.annotation.Annotation": ["equals", "hashCode", "toString", "annotationType"]}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.lang.annotation.Annotation", "typeName": "Annotation", "qualifiedTypeName": "java.lang.annotation.Annotation", "simpleTypeName": "Annotation", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "typeParameters": [], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [], "constructors": [], "innerClasses": [], "elements": [{"commentText": "Setting this to true will mark this module as a library module. This will prevent Realm from generating the\n {@code DefaultRealmModule} containing all classes. This is required by libraries so they do not interfere with\n Realms running in app code, but it also means that all libraries using Realm must explicitly use a module and\n cannot  rely on the default module being present.\n\n Creating library modules and normal modules in the same project is not allowed and will result in the annotation\n processor throwing an exception.", "name": "library", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": true, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 76, "column": 13, "file": "./realm-annotations/src/main/java/io/realm/annotations/RealmModule.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this to true will mark this module as a library module. This will prevent Realm from generating the\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this to true will mark this module as a library module. This will prevent Realm from generating the\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this to true will mark this module as a library module."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "DefaultRealmModule", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultRealmModule"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultRealmModule"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " containing all classes. This is required by libraries so they do not interfere with\n Realms running in app code, but it also means that all libraries using Realm must explicitly use a module and\n cannot  rely on the default module being present.\n\n Creating library modules and normal modules in the same project is not allowed and will result in the annotation\n processor throwing an exception.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " containing all classes. This is required by libraries so they do not interfere with\n Realms running in app code, but it also means that all libraries using Realm must explicitly use a module and\n cannot  rely on the default module being present.\n\n Creating library modules and normal modules in the same project is not allowed and will result in the annotation\n processor throwing an exception."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "containing all classes."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this to true will mark this module as a library module.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this to true will mark this module as a library module."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this to true will mark this module as a library module."}]}], "_class": "AnnotationTypeElementDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.annotations"}, "qualifiedName": "io.realm.annotations.RealmModule.library", "modifierSpecifier": 1025, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "defaultValue": "false"}, {"commentText": "Instead of adding all Realm classes manually to a module, set this boolean to true to automatically include all\n Realm classes in this project. This does not include classes from other libraries which must be exposed using\n their own module.\n\n Setting both {@code allClasses = true} and {@code classes()} will result in the annotation processor throwing\n an exception.", "name": "allClasses", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": true, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 86, "column": 13, "file": "./realm-annotations/src/main/java/io/realm/annotations/RealmModule.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instead of adding all Realm classes manually to a module, set this boolean to true to automatically include all\n Realm classes in this project. This does not include classes from other libraries which must be exposed using\n their own module.\n\n Setting both ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instead of adding all Realm classes manually to a module, set this boolean to true to automatically include all\n Realm classes in this project. This does not include classes from other libraries which must be exposed using\n their own module.\n\n Setting both "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instead of adding all Realm classes manually to a module, set this boolean to true to automatically include all\n Realm classes in this project."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "allClasses = true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "allClasses = true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "allClasses = true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "classes()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "classes()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "classes()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will result in the annotation processor throwing\n an exception.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will result in the annotation processor throwing\n an exception."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will result in the annotation processor throwing\n an exception."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instead of adding all Realm classes manually to a module, set this boolean to true to automatically include all\n Realm classes in this project.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instead of adding all Realm classes manually to a module, set this boolean to true to automatically include all\n Realm classes in this project."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instead of adding all Realm classes manually to a module, set this boolean to true to automatically include all\n Realm classes in this project."}]}], "_class": "AnnotationTypeElementDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.annotations"}, "qualifiedName": "io.realm.annotations.RealmModule.allClasses", "modifierSpecifier": 1025, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "defaultValue": "false"}, {"commentText": "Specifies the classes extending RealmObject that should be part of this module. Only classes in this project can\n be included. Classes from other libraries must be exposed using their own module.\n\n Setting both {@code allClasses = true} and {@code classes()} will result in the annotation processor throwing\n an exception.", "name": "classes", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": true, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 95, "column": 16, "file": "./realm-annotations/src/main/java/io/realm/annotations/RealmModule.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the classes extending RealmObject that should be part of this module. Only classes in this project can\n be included. Classes from other libraries must be exposed using their own module.\n\n Setting both ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the classes extending RealmObject that should be part of this module. Only classes in this project can\n be included. Classes from other libraries must be exposed using their own module.\n\n Setting both "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the classes extending RealmObject that should be part of this module."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "allClasses = true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "allClasses = true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "allClasses = true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "classes()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "classes()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "classes()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will result in the annotation processor throwing\n an exception.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will result in the annotation processor throwing\n an exception."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will result in the annotation processor throwing\n an exception."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the classes extending RealmObject that should be part of this module.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the classes extending RealmObject that should be part of this module."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the classes extending RealmObject that should be part of this module."}]}], "_class": "AnnotationTypeElementDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.annotations"}, "qualifiedName": "io.realm.annotations.RealmModule.classes", "modifierSpecifier": 1025, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "java.lang.Class[]", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ParameterizedType", "asString": "java.lang.Class<?>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "?", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [], "superBounds": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "isClass": false, "isAnnotationType": false}, "defaultValue": "{}"}, {"commentText": "The naming policy applied to all classes part of this module. The default policy is {@link RealmNamingPolicy#NO_POLICY}.\n To define a naming policy for all fields in the classes, use {@link #fieldNamingPolicy()}.\n <p>\n It is possible to override the naming policy specified in the module in each class using the {@link RealmClass}\n annotation.\n <p>\n If a class is part of multiple modules, the same naming policy must be applied to both modules, otherwise\n an error will be thrown.", "name": "classNamingPolicy", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": true, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 109, "column": 23, "file": "./realm-annotations/src/main/java/io/realm/annotations/RealmModule.java"}, "tags": [], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.annotations.RealmNamingPolicy for more information about what setting this policy means.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.RealmNamingPolicy for more information about what setting this policy means."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.RealmNamingPolicy for more information about what setting this policy means."}], "label": "for more information about what setting this policy means.", "referencedClassName": "io.realm.annotations.RealmNamingPolicy", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmNamingPolicy", "typeName": "RealmNamingPolicy", "qualifiedTypeName": "io.realm.annotations.RealmNamingPolicy", "simpleTypeName": "RealmNamingPolicy", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all classes part of this module. The default policy is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all classes part of this module. The default policy is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all classes part of this module."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmNamingPolicy#NO_POLICY", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmNamingPolicy#NO_POLICY"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmNamingPolicy#NO_POLICY"}], "label": "", "referencedClassName": "io.realm.annotations.RealmNamingPolicy", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmNamingPolicy", "typeName": "RealmNamingPolicy", "qualifiedTypeName": "io.realm.annotations.RealmNamingPolicy", "simpleTypeName": "RealmNamingPolicy", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}, "referencedMemberName": "NO_POLICY"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n To define a naming policy for all fields in the classes, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n To define a naming policy for all fields in the classes, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#fieldNamingPolicy()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#fieldNamingPolicy()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#fieldNamingPolicy()"}], "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "referencedMemberName": "fieldNamingPolicy()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n It is possible to override the naming policy specified in the module in each class using the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n It is possible to override the naming policy specified in the module in each class using the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmClass", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass"}], "label": "", "referencedClassName": "io.realm.annotations.RealmClass", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmClass", "typeName": "RealmClass", "qualifiedTypeName": "io.realm.annotations.RealmClass", "simpleTypeName": "RealmClass", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n annotation.\n <p>\n If a class is part of multiple modules, the same naming policy must be applied to both modules, otherwise\n an error will be thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n annotation.\n <p>\n If a class is part of multiple modules, the same naming policy must be applied to both modules, otherwise\n an error will be thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "annotation."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all classes part of this module.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all classes part of this module."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all classes part of this module."}]}], "_class": "AnnotationTypeElementDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.annotations"}, "qualifiedName": "io.realm.annotations.RealmModule.classNamingPolicy", "modifierSpecifier": 1025, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmNamingPolicy", "typeName": "RealmNamingPolicy", "qualifiedTypeName": "io.realm.annotations.RealmNamingPolicy", "simpleTypeName": "RealmNamingPolicy", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "defaultValue": "io.realm.annotations.RealmNamingPolicy.NO_POLICY"}, {"commentText": "The naming policy applied to all field names in all classes part of this module. The default policy is\n {@link RealmNamingPolicy#NO_POLICY}. To define a naming policy for class names, use {@link #classNamingPolicy()}.\n <p>\n It is possible to override this naming policy using either {@link RealmClass#fieldNamingPolicy()} or\n {@link RealmField#name()}.", "name": "fieldNamingPolicy", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": true, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 120, "column": 23, "file": "./realm-annotations/src/main/java/io/realm/annotations/RealmModule.java"}, "tags": [], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.annotations.RealmNamingPolicy for more information about what setting this policy means.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.RealmNamingPolicy for more information about what setting this policy means."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.RealmNamingPolicy for more information about what setting this policy means."}], "label": "for more information about what setting this policy means.", "referencedClassName": "io.realm.annotations.RealmNamingPolicy", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmNamingPolicy", "typeName": "RealmNamingPolicy", "qualifiedTypeName": "io.realm.annotations.RealmNamingPolicy", "simpleTypeName": "RealmNamingPolicy", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all field names in all classes part of this module. The default policy is\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all field names in all classes part of this module. The default policy is\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all field names in all classes part of this module."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmNamingPolicy#NO_POLICY", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmNamingPolicy#NO_POLICY"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmNamingPolicy#NO_POLICY"}], "label": "", "referencedClassName": "io.realm.annotations.RealmNamingPolicy", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmNamingPolicy", "typeName": "RealmNamingPolicy", "qualifiedTypeName": "io.realm.annotations.RealmNamingPolicy", "simpleTypeName": "RealmNamingPolicy", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}, "referencedMemberName": "NO_POLICY"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". To define a naming policy for class names, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". To define a naming policy for class names, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#classNamingPolicy()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#classNamingPolicy()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#classNamingPolicy()"}], "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "referencedMemberName": "classNamingPolicy()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n It is possible to override this naming policy using either ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n It is possible to override this naming policy using either "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmClass#fieldNamingPolicy()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#fieldNamingPolicy()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#fieldNamingPolicy()"}], "label": "", "referencedClassName": "io.realm.annotations.RealmClass", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmClass", "typeName": "RealmClass", "qualifiedTypeName": "io.realm.annotations.RealmClass", "simpleTypeName": "RealmClass", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "referencedMemberName": "fieldNamingPolicy()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmField#name()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmField#name()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmField#name()"}], "label": "", "referencedClassName": "io.realm.annotations.RealmField", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmField", "typeName": "RealmField", "qualifiedTypeName": "io.realm.annotations.RealmField", "simpleTypeName": "RealmField", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "referencedMemberName": "name()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all field names in all classes part of this module.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all field names in all classes part of this module."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The naming policy applied to all field names in all classes part of this module."}]}], "_class": "AnnotationTypeElementDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.annotations"}, "qualifiedName": "io.realm.annotations.RealmModule.fieldNamingPolicy", "modifierSpecifier": 1025, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmNamingPolicy", "typeName": "RealmNamingPolicy", "qualifiedTypeName": "io.realm.annotations.RealmNamingPolicy", "simpleTypeName": "RealmNamingPolicy", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "defaultValue": "io.realm.annotations.RealmNamingPolicy.NO_POLICY"}]}