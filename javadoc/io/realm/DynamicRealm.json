{"commentText": "DynamicRealm is a dynamic variant of {@link io.realm.Realm}. This means that all access to data and/or queries are\n done using string based class names instead of class type references.\n <p>\n This is useful during migrations or when working with string-based data like CSV or XML files.\n <p>\n The same {@link io.realm.RealmConfiguration} can be used to open a Realm file in both dynamic and typed mode, but\n modifying the schema while having both a typed and dynamic version open is highly discouraged and will most likely\n crash the typed Realm. During migrations only a DynamicRealm will be open.\n <p>\n Dynamic Realms do not enforce schemas or schema versions and {@link RealmMigration} code is not used even if it has\n been defined in the {@link RealmConfiguration}.\n <p>\n This means that the schema is not created or validated until a Realm has been opened in typed mode. If a Realm\n file is opened in dynamic mode first it will not contain any information about classes and fields, and any queries\n for classes defined by the schema will fail.", "name": "DynamicRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 60, "column": 8, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmSchema", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmSchema"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmSchema"}], "label": "", "referencedClassName": "io.realm.RealmSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmSchema", "typeName": "RealmSchema", "qualifiedTypeName": "io.realm.RealmSchema", "simpleTypeName": "RealmSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmSchema", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmSchema"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmSchema"}], "label": "", "referencedClassName": "io.realm.RealmSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmSchema", "typeName": "RealmSchema", "qualifiedTypeName": "io.realm.RealmSchema", "simpleTypeName": "RealmSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm is a dynamic variant of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm is a dynamic variant of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm is a dynamic variant of"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This means that all access to data and/or queries are\n done using string based class names instead of class type references.\n <p>\n This is useful during migrations or when working with string-based data like CSV or XML files.\n <p>\n The same ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This means that all access to data and/or queries are\n done using string based class names instead of class type references.\n <p>\n This is useful during migrations or when working with string-based data like CSV or XML files.\n <p>\n The same "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be used to open a Realm file in both dynamic and typed mode, but\n modifying the schema while having both a typed and dynamic version open is highly discouraged and will most likely\n crash the typed Realm. During migrations only a DynamicRealm will be open.\n <p>\n Dynamic Realms do not enforce schemas or schema versions and ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be used to open a Realm file in both dynamic and typed mode, but\n modifying the schema while having both a typed and dynamic version open is highly discouraged and will most likely\n crash the typed Realm. During migrations only a DynamicRealm will be open.\n <p>\n Dynamic Realms do not enforce schemas or schema versions and "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "can be used to open a Realm file in both dynamic and typed mode, but\n modifying the schema while having both a typed and dynamic version open is highly discouraged and will most likely\n crash the typed Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmMigration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMigration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMigration"}], "label": "", "referencedClassName": "io.realm.RealmMigration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " code is not used even if it has\n been defined in the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " code is not used even if it has\n been defined in the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "code is not used even if it has\n been defined in the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n This means that the schema is not created or validated until a Realm has been opened in typed mode. If a Realm\n file is opened in dynamic mode first it will not contain any information about classes and fields, and any queries\n for classes defined by the schema will fail.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n This means that the schema is not created or validated until a Realm has been opened in typed mode. If a Realm\n file is opened in dynamic mode first it will not contain any information about classes and fields, and any queries\n for classes defined by the schema will fail."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm is a dynamic variant of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm is a dynamic variant of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm is a dynamic variant of"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isAbstract": false, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"io.realm.BaseRealm": ["setAutoRefresh", "isAutoRefresh", "refresh", "isInTransaction", "addListener", "removeListener", "asFlowable", "removeAllListeners", "writeCopyTo", "writeEncryptedCopyTo", "waitForChange", "stopWaitForChange", "beginTransaction", "commitTransaction", "cancelTransaction", "freeze", "isFrozen", "getNumberOfActiveVersions", "checkIfValid", "checkAllowQueriesOnUiThread", "checkAllowWritesOnUiThread", "checkIfInTransaction", "checkIfValidAndInTransaction", "getPath", "getConfiguration", "getVersion", "close", "isClosed", "isEmpty", "getSchema", "deleteAll", "migrateRealm", "finalize"], "java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [{"commentText": "Realm static constructor that returns a dynamic variant of the Realm instance defined by provided\n {@link io.realm.RealmConfiguration}. Dynamic Realms do not care about schemaVersion and schemas, so opening a\n DynamicRealm will never trigger a migration.", "name": "getInstance", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 104, "column": 32, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the DynamicRealm defined by the configuration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the DynamicRealm defined by the configuration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the DynamicRealm defined by the configuration."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmFileException if an error happened when accessing the underlying Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if an error happened when accessing the underlying Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmFileException if an error happened when accessing the underlying Realm file."}], "exceptionName": "RealmFileException", "exceptionComment": "if an error happened when accessing the underlying Realm file.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmFileException", "typeName": "RealmFileException", "qualifiedTypeName": "io.realm.exceptions.RealmFileException", "simpleTypeName": "RealmFileException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code configuration} argument is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "configuration"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " argument is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "configuration"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " argument is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code configuration} argument is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmConfiguration for details on how to configure a Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "label": "for details on how to configure a Realm.", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmConfiguration for details on how to configure a Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "label": "for details on how to configure a Realm.", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns a dynamic variant of the Realm instance defined by provided\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns a dynamic variant of the Realm instance defined by provided\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns a dynamic variant of the Realm instance defined by provided"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Dynamic Realms do not care about schemaVersion and schemas, so opening a\n DynamicRealm will never trigger a migration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Dynamic Realms do not care about schemaVersion and schemas, so opening a\n DynamicRealm will never trigger a migration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns a dynamic variant of the Realm instance defined by provided\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns a dynamic variant of the Realm instance defined by provided\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns a dynamic variant of the Realm instance defined by provided"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.getInstance", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "configuration", "typeName": "RealmConfiguration", "asString": "RealmConfiguration configuration", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmFileException if an error happened when accessing the underlying Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if an error happened when accessing the underlying Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmFileException if an error happened when accessing the underlying Realm file."}], "exceptionName": "RealmFileException", "exceptionComment": "if an error happened when accessing the underlying Realm file.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmFileException", "typeName": "RealmFileException", "qualifiedTypeName": "io.realm.exceptions.RealmFileException", "simpleTypeName": "RealmFileException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code configuration} argument is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "configuration"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " argument is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "configuration"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " argument is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code configuration} argument is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "(io.realm.RealmConfiguration)", "flatSignature": "(RealmConfiguration)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "The creation of the first Realm instance per {@link RealmConfiguration} in a process can take some time as all\n initialization code need to run at that point (Setting up the Realm, validating schemas and creating initial\n data). This method places the initialization work in a background thread and deliver the Realm instance\n to the caller thread asynchronously after the initialization is finished.", "name": "getInstanceAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 125, "column": 34, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration {@link RealmConfiguration} used to open the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm."}], "parameterName": "configuration", "parameterComment": "{@link RealmConfiguration} used to open the Realm.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback invoked to return the results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "invoked to return the results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked to return the results."}], "parameterName": "callback", "parameterComment": "invoked to return the results.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a null {@link RealmConfiguration} or a null {@link Callback} is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Callback", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction.Callback", "typeName": "DynamicRealm.Transaction.Callback", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Callback", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction.Callback", "typeName": "DynamicRealm.Transaction.Callback", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a null {@link RealmConfiguration} or a null {@link Callback} is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if it is called from a non-Looper or {@link android.app.IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if it is called from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if it is called from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if it is called from a non-Looper or {@link android.app.IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a {@link RealmAsyncTask} representing a cancellable task.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}]}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Callback for more details.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Callback for more details."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Callback for more details."}], "label": "for more details.", "referencedClassName": "io.realm.DynamicRealm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction.Callback", "typeName": "DynamicRealm.Transaction.Callback", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Callback for more details.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Callback for more details."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Callback for more details."}], "label": "for more details.", "referencedClassName": "io.realm.DynamicRealm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction.Callback", "typeName": "DynamicRealm.Transaction.Callback", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " in a process can take some time as all\n initialization code need to run at that point (Setting up the Realm, validating schemas and creating initial\n data). This method places the initialization work in a background thread and deliver the Realm instance\n to the caller thread asynchronously after the initialization is finished.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " in a process can take some time as all\n initialization code need to run at that point (Setting up the Realm, validating schemas and creating initial\n data). This method places the initialization work in a background thread and deliver the Realm instance\n to the caller thread asynchronously after the initialization is finished."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "in a process can take some time as all\n initialization code need to run at that point (Setting up the Realm, validating schemas and creating initial\n data)."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " in a process can take some time as all\n initialization code need to run at that point (Setting up the Realm, validating schemas and creating initial\n data).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " in a process can take some time as all\n initialization code need to run at that point (Setting up the Realm, validating schemas and creating initial\n data)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "in a process can take some time as all\n initialization code need to run at that point (Setting up the Realm, validating schemas and creating initial\n data)."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.getInstanceAsync", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "configuration", "typeName": "RealmConfiguration", "asString": "RealmConfiguration configuration", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Callback", "typeName": "DynamicRealm.Callback", "qualifiedTypeName": "io.realm.DynamicRealm.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "callback", "typeName": "DynamicRealm.Callback", "asString": "DynamicRealm.Callback callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a null {@link RealmConfiguration} or a null {@link Callback} is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Callback", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction.Callback", "typeName": "DynamicRealm.Transaction.Callback", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Callback", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction.Callback", "typeName": "DynamicRealm.Transaction.Callback", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a null {@link RealmConfiguration} or a null {@link Callback} is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if it is called from a non-Looper or {@link android.app.IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if it is called from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if it is called from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if it is called from a non-Looper or {@link android.app.IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration {@link RealmConfiguration} used to open the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm."}], "parameterName": "configuration", "parameterComment": "{@link RealmConfiguration} used to open the Realm.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback invoked to return the results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "invoked to return the results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked to return the results."}], "parameterName": "callback", "parameterComment": "invoked to return the results.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmConfiguration, io.realm.DynamicRealm.Callback)", "flatSignature": "(RealmConfiguration, DynamicRealm.Callback)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Instantiates and adds a new object to the Realm.", "name": "createObject", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 141, "column": 31, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "className the class name of the object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class name of the object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "className the class name of the object to create."}], "parameterName": "className", "parameterComment": "the class name of the object to create.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the new object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the object could not be created.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the object could not be created."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the object could not be created."}], "exceptionName": "RealmException", "exceptionComment": "if the object could not be created.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.createObject", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "className", "typeName": "String", "asString": "String className", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the object could not be created.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the object could not be created."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the object could not be created."}], "exceptionName": "RealmException", "exceptionComment": "if the object could not be created.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "className the class name of the object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class name of the object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "className the class name of the object to create."}], "parameterName": "className", "parameterComment": "the class name of the object to create.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Creates an object with a given primary key. Classes without a primary key defined must use\n {@link #createObject(String)}} instead.", "name": "createObject", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 166, "column": 31, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the new object. All fields will have default values for their type, except for the\n primary key field which will have the provided value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new object. All fields will have default values for their type, except for the\n primary key field which will have the provided value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if object could not be created due to the primary key being invalid.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if object could not be created due to the primary key being invalid."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if object could not be created due to the primary key being invalid."}], "exceptionName": "RealmException", "exceptionComment": "if object could not be created due to the primary key being invalid.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the model clazz does not have an primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the model clazz does not have an primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the model clazz does not have an primary key defined."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the model clazz does not have an primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code primaryKeyValue} doesn't have a value that can be converted to the\n expected value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "primaryKeyValue"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " doesn't have a value that can be converted to the\n expected value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "primaryKeyValue"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " doesn't have a value that can be converted to the\n expected value."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code primaryKeyValue} doesn't have a value that can be converted to the\n expected value.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an object with a given primary key. Classes without a primary key defined must use\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an object with a given primary key. Classes without a primary key defined must use\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an object with a given primary key."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#createObject(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObject(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObject(String)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createObject(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "} instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "} instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "} instead."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an object with a given primary key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an object with a given primary key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an object with a given primary key."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.createObject", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "className", "typeName": "String", "asString": "String className", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "primaryKeyValue", "typeName": "Object", "asString": "Object primaryKeyValue", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if object could not be created due to the primary key being invalid.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if object could not be created due to the primary key being invalid."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if object could not be created due to the primary key being invalid."}], "exceptionName": "RealmException", "exceptionComment": "if object could not be created due to the primary key being invalid.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the model clazz does not have an primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the model clazz does not have an primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the model clazz does not have an primary key defined."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the model clazz does not have an primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code primaryKeyValue} doesn't have a value that can be converted to the\n expected value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "primaryKeyValue"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " doesn't have a value that can be converted to the\n expected value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "primaryKeyValue"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " doesn't have a value that can be converted to the\n expected value."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code primaryKeyValue} doesn't have a value that can be converted to the\n expected value.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String, java.lang.Object)", "flatSignature": "(String, Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Instantiates and adds a new embedded object to the Realm.\n <p>\n This method should only be used to create objects of types marked as embedded.", "name": "createEmbeddedObject", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 187, "column": 31, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "className the class name of the object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class name of the object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "className the class name of the object to create."}], "parameterName": "className", "parameterComment": "the class name of the object to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "parentObject The parent object which should hold a reference to the embedded object.\n                     If the parent property is a list the embedded object will be added to the\n                     end of that list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The parent object which should hold a reference to the embedded object.\n                     If the parent property is a list the embedded object will be added to the\n                     end of that list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "parentObject The parent object which should hold a reference to the embedded object."}], "parameterName": "parentObject", "parameterComment": "The parent object which should hold a reference to the embedded object.\n                     If the parent property is a list the embedded object will be added to the\n                     end of that list.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "parentProperty the property in the parent class which holds the reference.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the property in the parent class which holds the reference."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "parentProperty the property in the parent class which holds the reference."}], "parameterName": "parentProperty", "parameterComment": "the property in the parent class which holds the reference.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the newly created embedded object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the newly created embedded object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the newly created embedded object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code clazz} is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "clazz"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "clazz"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code clazz} is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmClass#embedded()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "label": "", "referencedClassName": "io.realm.annotations.RealmClass", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmClass", "typeName": "RealmClass", "qualifiedTypeName": "io.realm.annotations.RealmClass", "simpleTypeName": "RealmClass", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "referencedMemberName": "embedded()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmClass#embedded()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "label": "", "referencedClassName": "io.realm.annotations.RealmClass", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmClass", "typeName": "RealmClass", "qualifiedTypeName": "io.realm.annotations.RealmClass", "simpleTypeName": "RealmClass", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "referencedMemberName": "embedded()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm.\n <p>\n This method should only be used to create objects of types marked as embedded.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm.\n <p>\n This method should only be used to create objects of types marked as embedded."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.createEmbeddedObject", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "className", "typeName": "String", "asString": "String className", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "parentObject", "typeName": "DynamicRealmObject", "asString": "DynamicRealmObject parentObject", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "parentProperty", "typeName": "String", "asString": "String parentProperty", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code clazz} is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "clazz"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "clazz"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code clazz} is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "className the class name of the object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class name of the object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "className the class name of the object to create."}], "parameterName": "className", "parameterComment": "the class name of the object to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "parentObject The parent object which should hold a reference to the embedded object.\n                     If the parent property is a list the embedded object will be added to the\n                     end of that list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The parent object which should hold a reference to the embedded object.\n                     If the parent property is a list the embedded object will be added to the\n                     end of that list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "parentObject The parent object which should hold a reference to the embedded object."}], "parameterName": "parentObject", "parameterComment": "The parent object which should hold a reference to the embedded object.\n                     If the parent property is a list the embedded object will be added to the\n                     end of that list.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "parentProperty the property in the parent class which holds the reference.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the property in the parent class which holds the reference."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "parentProperty the property in the parent class which holds the reference."}], "parameterName": "parentProperty", "parameterComment": "the property in the parent class which holds the reference.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, io.realm.DynamicRealmObject, java.lang.String)", "flatSignature": "(String, DynamicRealmObject, String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns a RealmQuery, which can be used to query the provided class.", "name": "where", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 225, "column": 43, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "className the class of the object which is to be queried.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class of the object which is to be queried."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "className the class of the object which is to be queried."}], "parameterName": "className", "parameterComment": "the class of the object which is to be queried.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a RealmQuery, which can be used to query for specific objects of provided type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a RealmQuery, which can be used to query for specific objects of provided type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a RealmQuery, which can be used to query for specific objects of provided type."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the class doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the class doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the class doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the class doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmQuery", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmQuery", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query the provided class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query the provided class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query the provided class."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query the provided class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query the provided class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query the provided class."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.where", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "className", "typeName": "String", "asString": "String className", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the class doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the class doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the class doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the class doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "className the class of the object which is to be queried.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class of the object which is to be queried."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "className the class of the object which is to be queried."}], "parameterName": "className", "parameterComment": "the class of the object which is to be queried.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmQuery<io.realm.DynamicRealmObject>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}}, {"commentText": "Adds a change listener to the Realm.\n <p>\n The listeners will be executed when changes are committed by this or another thread.\n <p>\n Realm instances are cached per thread. For that reason it is important to\n remember to remove listeners again either using {@link #removeChangeListener(RealmChangeListener)}\n or {@link #removeAllChangeListeners()}. Not doing so can cause memory leaks.", "name": "addChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 250, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener."}], "parameterName": "listener", "parameterComment": "the change listener.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#removeChangeListener(RealmChangeListener)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeChangeListener(RealmChangeListener)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeChangeListener(RealmChangeListener)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "removeChangeListener(RealmChangeListener)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#removeAllChangeListeners()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeAllChangeListeners()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeAllChangeListeners()"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "removeAllChangeListeners()"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#refresh()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#refresh()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#refresh()"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "refresh()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#removeChangeListener(RealmChangeListener)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeChangeListener(RealmChangeListener)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeChangeListener(RealmChangeListener)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "removeChangeListener(RealmChangeListener)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#removeAllChangeListeners()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeAllChangeListeners()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeAllChangeListeners()"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "removeAllChangeListeners()"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#refresh()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#refresh()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#refresh()"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "refresh()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm.\n <p>\n The listeners will be executed when changes are committed by this or another thread.\n <p>\n Realm instances are cached per thread. For that reason it is important to\n remember to remove listeners again either using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm.\n <p>\n The listeners will be executed when changes are committed by this or another thread.\n <p>\n Realm instances are cached per thread. For that reason it is important to\n remember to remove listeners again either using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#removeChangeListener(RealmChangeListener)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeChangeListener(RealmChangeListener)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeChangeListener(RealmChangeListener)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "removeChangeListener(RealmChangeListener)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n or ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n or "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#removeAllChangeListeners()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeAllChangeListeners()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeAllChangeListeners()"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "removeAllChangeListeners()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Not doing so can cause memory leaks.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Not doing so can cause memory leaks."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.addChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.RealmChangeListener<io.realm.DynamicRealm>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.RealmChangeListener<io.realm.DynamicRealm>", "asString": "io.realm.RealmChangeListener<io.realm.DynamicRealm> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener."}], "parameterName": "listener", "parameterComment": "the change listener.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmChangeListener<io.realm.DynamicRealm>)", "flatSignature": "(RealmChangeListener<DynamicRealm>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes the specified change listener.", "name": "removeChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 262, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.removeChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.RealmChangeListener<io.realm.DynamicRealm>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.RealmChangeListener<io.realm.DynamicRealm>", "asString": "io.realm.RealmChangeListener<io.realm.DynamicRealm> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmChangeListener<io.realm.DynamicRealm>)", "flatSignature": "(RealmChangeListener<DynamicRealm>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes all user-defined change listeners.", "name": "removeAllChangeListeners", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 272, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove listeners from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove listeners from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.removeAllChangeListeners", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove listeners from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove listeners from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Deletes all objects of the specified class from the Realm.", "name": "delete", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 282, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "className the class for which all objects should be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class for which all objects should be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "className the class for which all objects should be removed."}], "parameterName": "className", "parameterComment": "the class for which all objects should be removed.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the Realm is closed or called from an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or called from an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the Realm is closed or called from an incorrect thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the Realm is closed or called from an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.delete", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "className", "typeName": "String", "asString": "String className", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the Realm is closed or called from an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or called from an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the Realm is closed or called from an incorrect thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the Realm is closed or called from an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "className the class for which all objects should be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class for which all objects should be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "className the class for which all objects should be removed."}], "parameterName": "className", "parameterComment": "the class for which all objects should be removed.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Executes a given transaction on the DynamicRealm. {@link #beginTransaction()} and\n {@link #commitTransaction()} will be called automatically. If any exception is thrown\n during the transaction {@link #cancelTransaction()} will be called instead of {@link #commitTransaction()}.\n <p>\n Calling this method from the UI thread will throw a {@link RealmException}. Doing so may result in a drop of frames\n or even ANRs. We recommend calling this method from a non-UI thread or using\n {@link #executeTransactionAsync(Transaction)} instead.", "name": "executeTransaction", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 301, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link Transaction} to execute.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if called from the UI thread, unless an explicit opt-in has been declared in {@link RealmConfiguration.Builder#allowWritesOnUiThread(boolean)}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from the UI thread, unless an explicit opt-in has been declared in "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#allowWritesOnUiThread(boolean)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "allowWritesOnUiThread(boolean)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if called from the UI thread, unless an explicit opt-in has been declared in "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#allowWritesOnUiThread(boolean)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "allowWritesOnUiThread(boolean)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "RealmException", "exceptionComment": "if called from the UI thread, unless an explicit opt-in has been declared in {@link RealmConfiguration.Builder#allowWritesOnUiThread(boolean)}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the DynamicRealm. ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the DynamicRealm. "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the DynamicRealm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#beginTransaction()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#beginTransaction()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#beginTransaction()"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "beginTransaction()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#commitTransaction()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#commitTransaction()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#commitTransaction()"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "commitTransaction()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be called automatically. If any exception is thrown\n during the transaction ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be called automatically. If any exception is thrown\n during the transaction "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be called automatically."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#cancelTransaction()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#cancelTransaction()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#cancelTransaction()"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "cancelTransaction()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be called instead of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be called instead of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be called instead of"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#commitTransaction()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#commitTransaction()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#commitTransaction()"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "commitTransaction()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Calling this method from the UI thread will throw a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Calling this method from the UI thread will throw a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException"}], "label": "", "referencedClassName": "io.realm.exceptions.RealmException", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Doing so may result in a drop of frames\n or even ANRs. We recommend calling this method from a non-UI thread or using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Doing so may result in a drop of frames\n or even ANRs. We recommend calling this method from a non-UI thread or using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the DynamicRealm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the DynamicRealm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the DynamicRealm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.executeTransaction", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "DynamicRealm.Transaction", "asString": "DynamicRealm.Transaction transaction", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if called from the UI thread, unless an explicit opt-in has been declared in {@link RealmConfiguration.Builder#allowWritesOnUiThread(boolean)}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from the UI thread, unless an explicit opt-in has been declared in "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#allowWritesOnUiThread(boolean)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "allowWritesOnUiThread(boolean)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if called from the UI thread, unless an explicit opt-in has been declared in "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#allowWritesOnUiThread(boolean)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "allowWritesOnUiThread(boolean)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "RealmException", "exceptionComment": "if called from the UI thread, unless an explicit opt-in has been declared in {@link RealmConfiguration.Builder#allowWritesOnUiThread(boolean)}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link Transaction} to execute.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.DynamicRealm.Transaction)", "flatSignature": "(DynamicRealm.Transaction)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Similar to {@link #executeTransaction(Transaction)} but runs asynchronously on a worker thread.", "name": "executeTransactionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 331, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link Transaction} to execute.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a {@link RealmAsyncTask} representing a cancellable task.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the Realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the Realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the Realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the Realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransaction(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransaction(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransaction(Transaction)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransaction(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " but runs asynchronously on a worker thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " but runs asynchronously on a worker thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "but runs asynchronously on a worker thread."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransaction(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransaction(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransaction(Transaction)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransaction(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " but runs asynchronously on a worker thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " but runs asynchronously on a worker thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "but runs asynchronously on a worker thread."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.executeTransactionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "DynamicRealm.Transaction", "asString": "DynamicRealm.Transaction transaction", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the Realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the Realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the Realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the Realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link Transaction} to execute.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.DynamicRealm.Transaction)", "flatSignature": "(DynamicRealm.Transaction)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Similar to {@link #executeTransactionAsync(Transaction)}, but also accepts an OnSuccess callback.", "name": "executeTransactionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 344, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onSuccess callback invoked when the transaction succeeds.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction succeeds."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onSuccess callback invoked when the transaction succeeds."}], "parameterName": "onSuccess", "parameterComment": "callback invoked when the transaction succeeds.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a {@link RealmAsyncTask} representing a cancellable task.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.executeTransactionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "DynamicRealm.Transaction", "asString": "DynamicRealm.Transaction transaction", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction.OnSuccess", "typeName": "DynamicRealm.Transaction.OnSuccess", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction.OnSuccess", "simpleTypeName": "OnSuccess", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "onSuccess", "typeName": "DynamicRealm.Transaction.OnSuccess", "asString": "DynamicRealm.Transaction.OnSuccess onSuccess", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onSuccess callback invoked when the transaction succeeds.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction succeeds."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onSuccess callback invoked when the transaction succeeds."}], "parameterName": "onSuccess", "parameterComment": "callback invoked when the transaction succeeds.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.DynamicRealm.Transaction, io.realm.DynamicRealm.Transaction.OnSuccess)", "flatSignature": "(DynamicRealm.Transaction, DynamicRealm.Transaction.OnSuccess)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Similar to {@link #executeTransactionAsync(Transaction)}, but also accepts an OnError callback.", "name": "executeTransactionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 362, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onError callback invoked when the transaction fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onError callback invoked when the transaction fails."}], "parameterName": "onError", "parameterComment": "callback invoked when the transaction fails.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a {@link RealmAsyncTask} representing a cancellable task.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.executeTransactionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "DynamicRealm.Transaction", "asString": "DynamicRealm.Transaction transaction", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction.OnError", "typeName": "DynamicRealm.Transaction.OnError", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction.OnError", "simpleTypeName": "OnError", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "onError", "typeName": "DynamicRealm.Transaction.OnError", "asString": "DynamicRealm.Transaction.OnError onError", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onError callback invoked when the transaction fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onError callback invoked when the transaction fails."}], "parameterName": "onError", "parameterComment": "callback invoked when the transaction fails.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.DynamicRealm.Transaction, io.realm.DynamicRealm.Transaction.OnError)", "flatSignature": "(DynamicRealm.Transaction, DynamicRealm.Transaction.OnError)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Similar to {@link #executeTransactionAsync(Transaction)}, but also accepts an OnSuccess and OnError callbacks.", "name": "executeTransactionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 381, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onSuccess callback invoked when the transaction succeeds.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction succeeds."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onSuccess callback invoked when the transaction succeeds."}], "parameterName": "onSuccess", "parameterComment": "callback invoked when the transaction succeeds.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onError callback invoked when the transaction fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onError callback invoked when the transaction fails."}], "parameterName": "onError", "parameterComment": "callback invoked when the transaction fails.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a {@link RealmAsyncTask} representing a cancellable task.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.executeTransactionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "DynamicRealm.Transaction", "asString": "DynamicRealm.Transaction transaction", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction.OnSuccess", "typeName": "DynamicRealm.Transaction.OnSuccess", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction.OnSuccess", "simpleTypeName": "OnSuccess", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "onSuccess", "typeName": "DynamicRealm.Transaction.OnSuccess", "asString": "DynamicRealm.Transaction.OnSuccess onSuccess", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}, {"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction.OnError", "typeName": "DynamicRealm.Transaction.OnError", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction.OnError", "simpleTypeName": "OnError", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "onError", "typeName": "DynamicRealm.Transaction.OnError", "asString": "DynamicRealm.Transaction.OnError onError", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Transaction", "label": "", "referencedClassName": "io.realm.DynamicRealm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onSuccess callback invoked when the transaction succeeds.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction succeeds."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onSuccess callback invoked when the transaction succeeds."}], "parameterName": "onSuccess", "parameterComment": "callback invoked when the transaction succeeds.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onError callback invoked when the transaction fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onError callback invoked when the transaction fails."}], "parameterName": "onError", "parameterComment": "callback invoked when the transaction fails.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.DynamicRealm.Transaction, io.realm.DynamicRealm.Transaction.OnSuccess, io.realm.DynamicRealm.Transaction.OnError)", "flatSignature": "(DynamicRealm.Transaction, DynamicRealm.Transaction.OnSuccess, DynamicRealm.Transaction.OnError)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "asFlowable", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 523, "column": 35, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "RxJava Observable that only calls {@code onNext}. It will never call {@code onComplete} or {@code OnError}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxJava Observable that only calls "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onNext"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". It will never call "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onComplete"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "OnError"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxJava Observable that only calls "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onNext"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the Realm wasn't opened on a Looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm wasn't opened on a Looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the Realm wasn't opened on a Looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the Realm wasn't opened on a Looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>"}], "label": ""}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm. It will emit the current state\n when subscribed to. Items will continually be emitted as the Realm is updated -\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm. It will emit the current state\n when subscribed to. Items will continually be emitted as the Realm is updated -\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onComplete", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onComplete"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onComplete"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will never be called.\n <p>\n Items emitted from Realm Flowables are frozen (See ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will never be called.\n <p>\n Items emitted from Realm Flowables are frozen (See "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will never be called."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#freeze()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#freeze()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#freeze()"}], "label": "", "referencedClassName": "io.realm.BaseRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}, "referencedMemberName": "freeze()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This means that they\n are immutable and can be read on any thread.\n <p>\n Realm Flowables always emit items from the thread holding the live Realm. This means that if\n you need to do further processing, it is recommend to observe the values on a computation\n scheduler:\n <p>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This means that they\n are immutable and can be read on any thread.\n <p>\n Realm Flowables always emit items from the thread holding the live Realm. This means that if\n you need to do further processing, it is recommend to observe the values on a computation\n scheduler:\n <p>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "realm.asFlowable()\n   .observeOn(Schedulers.computation())\n   .map(rxRealm -> doExpensiveWork(rxRealm))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ... );\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realm.asFlowable()\n   .observeOn(Schedulers.computation())\n   .map(rxRealm -> doExpensiveWork(rxRealm))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ... );\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realm.asFlowable()\n   .observeOn(Schedulers.computation())\n   .map(rxRealm -> doExpensiveWork(rxRealm))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ..."}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>\n If you would like the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>\n If you would like the "}], "firstSentenceTags": []}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "asFlowable()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "asFlowable()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "asFlowable()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to stop emitting items, you can instruct RxJava to\n only emit only the first item by using the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to stop emitting items, you can instruct RxJava to\n only emit only the first item by using the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to stop emitting items, you can instruct RxJava to\n only emit only the first item by using the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "first()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "first()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "first()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " operator:\n <p>\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " operator:\n <p>\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "operator:"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n realm.asFlowable().first().subscribe( ... ); // You only get the results once\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n realm.asFlowable().first().subscribe( ... ); // You only get the results once\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realm.asFlowable().first().subscribe( ..."}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.asFlowable", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "<any>", "typeName": "<any>", "qualifiedTypeName": "<any>", "simpleTypeName": "<any>", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}}, {"commentText": "{@inheritDoc}", "name": "isEmpty", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 531, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if empty, @{code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if empty, @{code false} otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if empty, @{code false} otherwise."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " contains any objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " contains any objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "contains any objects."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " contains any objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " contains any objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "contains any objects."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.isEmpty", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}}, {"commentText": "Returns the mutable schema for this Realm.", "name": "getSchema", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 542, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "The {@link RealmSchema} for this Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmSchema", "label": "", "referencedClassName": "io.realm.RealmSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmSchema", "typeName": "RealmSchema", "qualifiedTypeName": "io.realm.RealmSchema", "simpleTypeName": "RealmSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for this Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmSchema", "label": "", "referencedClassName": "io.realm.RealmSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmSchema", "typeName": "RealmSchema", "qualifiedTypeName": "io.realm.RealmSchema", "simpleTypeName": "RealmSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for this Realm."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the mutable schema for this Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the mutable schema for this Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the mutable schema for this Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the mutable schema for this Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the mutable schema for this Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the mutable schema for this Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.getSchema", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmSchema", "typeName": "RealmSchema", "qualifiedTypeName": "io.realm.RealmSchema", "simpleTypeName": "RealmSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}}, {"commentText": "{@inheritDoc}", "name": "freeze", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 550, "column": 25, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a frozen copy of this Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a frozen copy of this Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a frozen copy of this Realm."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if this method is called from inside a write transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this method is called from inside a write transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if this method is called from inside a write transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if this method is called from inside a write transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm. This Realm can be read and queried from any thread without throwing\n an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm. This Realm can be read and queried from any thread without throwing\n an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". A frozen Realm has its own lifecycle and can be closed by calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". A frozen Realm has its own lifecycle and can be closed by calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#close()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#close()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#close()"}], "label": "", "referencedClassName": "io.realm.BaseRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}, "referencedMemberName": "close()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ",\n but fully closing the Realm that spawned the frozen copy will also close the frozen Realm.\n <p>\n Frozen data can be queried as normal, but trying to mutate it in any way or attempting to register any listener will\n throw an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ",\n but fully closing the Realm that spawned the frozen copy will also close the frozen Realm.\n <p>\n Frozen data can be queried as normal, but trying to mutate it in any way or attempting to register any listener will\n throw an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ",\n but fully closing the Realm that spawned the frozen copy will also close the frozen Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Note: Keeping a large number of Realms with different versions alive can have a negative impact on the filesize\n of the Realm. In order to avoid such a situation, it is possible to set ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Note: Keeping a large number of Realms with different versions alive can have a negative impact on the filesize\n of the Realm. In order to avoid such a situation, it is possible to set "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "maxNumberOfActiveVersions(long)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealm.freeze", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}}], "constructors": [], "innerClasses": [{"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Transaction", "typeName": "DynamicRealm.Transaction", "qualifiedTypeName": "io.realm.DynamicRealm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}, {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm.Callback", "typeName": "DynamicRealm.Callback", "qualifiedTypeName": "io.realm.DynamicRealm.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract static"}]}