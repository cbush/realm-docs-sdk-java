{"commentText": "The {@code Freezable} interface enable {@link io.realm.RealmCollection}s to be frozen. A frozen collection is a snapshot\n of the collection itself at the moment of calling {@link #freeze()}. The contents of a collection cannot be modified after\n freezing it and the collection itself is not bound to any thread anymore.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<T> the type of content held by the collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the type of content held by the collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<T> the type of content held by the collection"}], "parameterName": "T", "parameterComment": "the type of content held by the collection", "isTypeParameter": true}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Freezable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Freezable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Freezable"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " interface enable ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " interface enable "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "interface enable"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmCollection"}], "label": "", "referencedClassName": "io.realm.RealmCollection", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmCollection<E>", "typeName": "RealmCollection", "qualifiedTypeName": "io.realm.RealmCollection", "simpleTypeName": "RealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s to be frozen. A frozen collection is a snapshot\n of the collection itself at the moment of calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s to be frozen. A frozen collection is a snapshot\n of the collection itself at the moment of calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s to be frozen."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#freeze()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#freeze()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#freeze()"}], "label": "", "referencedClassName": "io.realm.internal.Freezable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.internal.Freezable<T>", "typeName": "Freezable", "qualifiedTypeName": "io.realm.internal.Freezable", "simpleTypeName": "Freezable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "referencedMemberName": "freeze()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". The contents of a collection cannot be modified after\n freezing it and the collection itself is not bound to any thread anymore.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". The contents of a collection cannot be modified after\n freezing it and the collection itself is not bound to any thread anymore."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Freezable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Freezable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Freezable"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " interface enable ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " interface enable "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "interface enable"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmCollection"}], "label": "", "referencedClassName": "io.realm.RealmCollection", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmCollection<E>", "typeName": "RealmCollection", "qualifiedTypeName": "io.realm.RealmCollection", "simpleTypeName": "RealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s to be frozen.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s to be frozen."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s to be frozen."}]}], "name": "Freezable", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": true, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": true, "isIncluded": true, "position": {"line": 28, "column": 8, "file": "./realm/realm-library/src/main/java/io/realm/internal/Freezable.java"}, "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm.internal"}, "qualifiedName": "io.realm.internal.Freezable", "modifierSpecifier": 513, "modifiers": "public interface", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.internal.Freezable<T>", "typeName": "Freezable", "qualifiedTypeName": "io.realm.internal.Freezable", "simpleTypeName": "Freezable", "dimension": "", "isPrimitive": false, "isAbstract": true, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [], "inheritedMethods": {}, "interfaceTypes": [], "typeParameters": [{"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<T> the type of content held by the collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the type of content held by the collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<T> the type of content held by the collection"}], "parameterName": "T", "parameterComment": "the type of content held by the collection", "isTypeParameter": true}], "fields": [], "enumConstants": [], "methods": [{"commentText": "Returns a frozen snapshot for a Realm collection. The frozen copy can be read and queried from any thread without\n throwing an {@link IllegalStateException}.\n <p>\n Freezing a collection also creates a Realm which has its own lifecycle, but if the live Realm that spawned the\n original collection is fully closed (i.e. all instances across all threads are closed), the frozen Realm and this\n collection will be closed as well.\n <p>\n Frozen collections can be queried as normal, but trying to mutate them in any way or attempting to register a listener\n will throw an {@link IllegalStateException}.\n <p>\n Note: Keeping a large number of frozencollections with different versions alive can have a negative impact on the\n file size of the Realm. In order to avoid such a situation, it is possible to set\n {@link RealmConfiguration.Builder#maxNumberOfActiveVersions(long)}.", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a frozen copy of this collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a frozen copy of this collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a frozen copy of this collection."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if this method is called from inside a write transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this method is called from inside a write transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if this method is called from inside a write transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if this method is called from inside a write transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot for a Realm collection. The frozen copy can be read and queried from any thread without\n throwing an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot for a Realm collection. The frozen copy can be read and queried from any thread without\n throwing an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot for a Realm collection."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Freezing a collection also creates a Realm which has its own lifecycle, but if the live Realm that spawned the\n original collection is fully closed (i.e. all instances across all threads are closed), the frozen Realm and this\n collection will be closed as well.\n <p>\n Frozen collections can be queried as normal, but trying to mutate them in any way or attempting to register a listener\n will throw an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Freezing a collection also creates a Realm which has its own lifecycle, but if the live Realm that spawned the\n original collection is fully closed (i.e. all instances across all threads are closed), the frozen Realm and this\n collection will be closed as well.\n <p>\n Frozen collections can be queried as normal, but trying to mutate them in any way or attempting to register a listener\n will throw an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Note: Keeping a large number of frozencollections with different versions alive can have a negative impact on the\n file size of the Realm. In order to avoid such a situation, it is possible to set\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Note: Keeping a large number of frozencollections with different versions alive can have a negative impact on the\n file size of the Realm. In order to avoid such a situation, it is possible to set\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)"}], "label": "", "referencedClassName": "RealmConfiguration.Builder", "referencedMemberName": "maxNumberOfActiveVersions(long)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot for a Realm collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot for a Realm collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot for a Realm collection."}]}], "name": "freeze", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 48, "column": 7, "file": "./realm/realm-library/src/main/java/io/realm/internal/Freezable.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.internal.Freezable<T>", "typeName": "Freezable", "qualifiedTypeName": "io.realm.internal.Freezable", "simpleTypeName": "Freezable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.internal"}, "qualifiedName": "io.realm.internal.Freezable.freeze", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if this method is called from inside a write transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this method is called from inside a write transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if this method is called from inside a write transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if this method is called from inside a write transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}], "constructors": [], "innerClasses": []}