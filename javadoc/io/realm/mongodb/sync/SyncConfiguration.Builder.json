{"commentText": "Builder used to construct instances of a SyncConfiguration in a fluent manner.", "name": "SyncConfiguration.Builder", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 465, "column": 25, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Builder used to construct instances of a SyncConfiguration in a fluent manner.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Builder used to construct instances of a SyncConfiguration in a fluent manner."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Builder used to construct instances of a SyncConfiguration in a fluent manner."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Builder used to construct instances of a SyncConfiguration in a fluent manner.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Builder used to construct instances of a SyncConfiguration in a fluent manner."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Builder used to construct instances of a SyncConfiguration in a fluent manner."}]}], "_class": "ParsedClassDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "modifierSpecifier": 25, "modifiers": "public static final", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": true, "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isAbstract": false, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [{"commentText": "Sets the {@value io.realm.Realm#ENCRYPTION_KEY_LENGTH} bytes key used to encrypt and decrypt the Realm file.", "name": "encryptionKey", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 651, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "key the encryption key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the encryption key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "key the encryption key."}], "parameterName": "key", "parameterComment": "the encryption key.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if key is invalid.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if key is invalid."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if key is invalid."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if key is invalid.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@value", "kind": "@value", "text": "io.realm.Realm#ENCRYPTION_KEY_LENGTH", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm#ENCRYPTION_KEY_LENGTH"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm#ENCRYPTION_KEY_LENGTH"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " bytes key used to encrypt and decrypt the Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " bytes key used to encrypt and decrypt the Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "bytes key used to encrypt and decrypt the Realm file."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@value", "kind": "@value", "text": "io.realm.Realm#ENCRYPTION_KEY_LENGTH", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm#ENCRYPTION_KEY_LENGTH"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm#ENCRYPTION_KEY_LENGTH"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " bytes key used to encrypt and decrypt the Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " bytes key used to encrypt and decrypt the Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "bytes key used to encrypt and decrypt the Realm file."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.encryptionKey", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "byte[]", "typeName": "byte", "qualifiedTypeName": "byte", "simpleTypeName": "byte", "dimension": "[]", "isPrimitive": true, "elementType": {"_class": "Type", "asString": "byte", "typeName": "byte", "qualifiedTypeName": "byte", "simpleTypeName": "byte", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "key", "typeName": "byte[]", "asString": "byte[] key", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if key is invalid.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if key is invalid."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if key is invalid."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if key is invalid.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "key the encryption key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the encryption key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "key the encryption key."}], "parameterName": "key", "parameterComment": "the encryption key.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(byte[])", "flatSignature": "(byte[])", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the schema version of the Realm.\n <p>\n Synced Realms only support additive schema changes which can be applied without requiring a manual\n migration. The schema version will only be used as an indication to the underlying storage layer to remove\n or add indexes. These will be recalculated if the provided schema version differ from the version in the\n Realm file.\n\n <b>WARNING:</b> There is no guarantee that the value inserted here is the same returned by {@link Realm#getVersion()}.\n Due to the nature of synced Realms, the value can both be higher and lower.\n <ul>\n     <li>It will be lower if another client with a lesser {@code schemaVersion} connected to the server for\n         the first time after this schemaVersion was used.\n         </li>\n     <li>It will be higher if another client with a higher {@code schemaVersion} connected to the server after\n         this Realm was created.\n         </li>\n </ul>", "name": "schemaVersion", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 720, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "schemaVersion the schema version.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the schema version."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "schemaVersion the schema version."}], "parameterName": "schemaVersion", "parameterComment": "the schema version.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if schema version is invalid.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if schema version is invalid."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if schema version is invalid."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if schema version is invalid.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm.\n <p>\n Synced Realms only support additive schema changes which can be applied without requiring a manual\n migration. The schema version will only be used as an indication to the underlying storage layer to remove\n or add indexes. These will be recalculated if the provided schema version differ from the version in the\n Realm file.\n\n <b>WARNING:</b> There is no guarantee that the value inserted here is the same returned by ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm.\n <p>\n Synced Realms only support additive schema changes which can be applied without requiring a manual\n migration. The schema version will only be used as an indication to the underlying storage layer to remove\n or add indexes. These will be recalculated if the provided schema version differ from the version in the\n Realm file.\n\n <b>WARNING:</b> There is no guarantee that the value inserted here is the same returned by "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#getVersion()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getVersion()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getVersion()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getVersion()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n Due to the nature of synced Realms, the value can both be higher and lower.\n <ul>\n     <li>It will be lower if another client with a lesser ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n Due to the nature of synced Realms, the value can both be higher and lower.\n <ul>\n     <li>It will be lower if another client with a lesser "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "schemaVersion", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "schemaVersion"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "schemaVersion"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " connected to the server for\n         the first time after this schemaVersion was used.\n         </li>\n     <li>It will be higher if another client with a higher ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " connected to the server for\n         the first time after this schemaVersion was used.\n         </li>\n     <li>It will be higher if another client with a higher "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "connected to the server for\n         the first time after this schemaVersion was used."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "schemaVersion", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "schemaVersion"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "schemaVersion"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " connected to the server after\n         this Realm was created.\n         </li>\n </ul>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " connected to the server after\n         this Realm was created.\n         </li>\n </ul>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "connected to the server after\n         this Realm was created."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.schemaVersion", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "long", "typeName": "long", "qualifiedTypeName": "long", "simpleTypeName": "long", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "schemaVersion", "typeName": "long", "asString": "long schemaVersion", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if schema version is invalid.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if schema version is invalid."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if schema version is invalid."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if schema version is invalid.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "schemaVersion the schema version.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the schema version."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "schemaVersion the schema version."}], "parameterName": "schemaVersion", "parameterComment": "the schema version.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(long)", "flatSignature": "(long)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Replaces the existing module(s) with one or more {@link RealmModule}s. Using this method will replace the\n current schema for this Realm with the schema defined by the provided modules.\n <p>\n A reference to the default Realm module containing all Realm classes in the project (but not dependencies),\n can be found using {@link Realm#getDefaultModule()}. Combining the schema from the app project and a library\n dependency is thus done using the following code:\n <p>\n {@code builder.modules(Realm.getDefaultMode(), new MyLibraryModule()); }\n <p>", "name": "modules", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 743, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "baseModule the first Realm module (required).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first Realm module (required)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "baseModule the first Realm module (required)."}], "parameterName": "baseModule", "parameterComment": "the first Realm module (required).", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "additionalModules the additional Realm modules", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the additional Realm modules"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "additionalModules the additional Realm modules"}], "parameterName": "additionalModules", "parameterComment": "the additional Realm modules", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if any of the modules don't have the {@link RealmModule} annotation.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any of the modules don't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if any of the modules don't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if any of the modules don't have the {@link RealmModule} annotation.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Realm#getDefaultModule()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultModule()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Realm#getDefaultModule()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultModule()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s. Using this method will replace the\n current schema for this Realm with the schema defined by the provided modules.\n <p>\n A reference to the default Realm module containing all Realm classes in the project (but not dependencies),\n can be found using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s. Using this method will replace the\n current schema for this Realm with the schema defined by the provided modules.\n <p>\n A reference to the default Realm module containing all Realm classes in the project (but not dependencies),\n can be found using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#getDefaultModule()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultModule()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Combining the schema from the app project and a library\n dependency is thus done using the following code:\n <p>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Combining the schema from the app project and a library\n dependency is thus done using the following code:\n <p>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "builder.modules(Realm.getDefaultMode(), new MyLibraryModule()); ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "builder.modules(Realm.getDefaultMode(), new MyLibraryModule()); "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "builder.modules(Realm.getDefaultMode(), new MyLibraryModule());"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.modules", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "baseModule", "typeName": "Object", "asString": "Object baseModule", "annotations": []}, {"type": {"_class": "Type", "asString": "java.lang.Object[]", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "additionalModules", "typeName": "java.lang.Object[]", "asString": "java.lang.Object[] additionalModules", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if any of the modules don't have the {@link RealmModule} annotation.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any of the modules don't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if any of the modules don't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if any of the modules don't have the {@link RealmModule} annotation.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "baseModule the first Realm module (required).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first Realm module (required)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "baseModule the first Realm module (required)."}], "parameterName": "baseModule", "parameterComment": "the first Realm module (required).", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "additionalModules the additional Realm modules", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the additional Realm modules"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "additionalModules the additional Realm modules"}], "parameterName": "additionalModules", "parameterComment": "the additional Realm modules", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Object, java.lang.Object...)", "flatSignature": "(Object, Object...)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Replaces the existing module(s) with one or more {@link RealmModule}s. Using this method will replace the\n current schema for this Realm with the schema defined by the provided modules.\n <p>\n A reference to the default Realm module containing all Realm classes in the project (but not dependencies),\n can be found using {@link Realm#getDefaultModule()}. Combining the schema from the app project and a library\n dependency is thus done using the following code:\n <p>\n {@code builder.modules(Realm.getDefaultMode(), new MyLibraryModule()); }\n <p>", "name": "modules", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 769, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "modules list of modules tthe first Realm module (required).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list of modules tthe first Realm module (required)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "modules list of modules tthe first Realm module (required)."}], "parameterName": "modules", "parameterComment": "list of modules tthe first Realm module (required).", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if any of the modules don't have the {@link RealmModule} annotation.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any of the modules don't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if any of the modules don't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if any of the modules don't have the {@link RealmModule} annotation.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Realm#getDefaultModule()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultModule()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Realm#getDefaultModule()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultModule()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s. Using this method will replace the\n current schema for this Realm with the schema defined by the provided modules.\n <p>\n A reference to the default Realm module containing all Realm classes in the project (but not dependencies),\n can be found using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s. Using this method will replace the\n current schema for this Realm with the schema defined by the provided modules.\n <p>\n A reference to the default Realm module containing all Realm classes in the project (but not dependencies),\n can be found using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#getDefaultModule()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultModule()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Combining the schema from the app project and a library\n dependency is thus done using the following code:\n <p>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Combining the schema from the app project and a library\n dependency is thus done using the following code:\n <p>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "builder.modules(Realm.getDefaultMode(), new MyLibraryModule()); ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "builder.modules(Realm.getDefaultMode(), new MyLibraryModule()); "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "builder.modules(Realm.getDefaultMode(), new MyLibraryModule());"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.modules", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Iterable<java.lang.Object>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": []}, "name": "modules", "typeName": "java.lang.Iterable<java.lang.Object>", "asString": "java.lang.Iterable<java.lang.Object> modules", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if any of the modules don't have the {@link RealmModule} annotation.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any of the modules don't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if any of the modules don't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if any of the modules don't have the {@link RealmModule} annotation.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "modules list of modules tthe first Realm module (required).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list of modules tthe first Realm module (required)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "modules list of modules tthe first Realm module (required)."}], "parameterName": "modules", "parameterComment": "list of modules tthe first Realm module (required).", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Iterable<java.lang.Object>)", "flatSignature": "(Iterable<Object>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Adds a module to the already defined modules.", "name": "addModule", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 782, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a module to the already defined modules.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a module to the already defined modules."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a module to the already defined modules."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a module to the already defined modules.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a module to the already defined modules."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a module to the already defined modules."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.addModule", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "module", "typeName": "Object", "asString": "Object module", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the {@link RxObservableFactory} used to create Rx Observables from Realm objects.\n The default factory is {@link RealmObservableFactory}.", "name": "rxFactory", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 798, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "factory factory to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory factory to use."}], "parameterName": "factory", "parameterComment": "factory to use.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RxObservableFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxObservableFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxObservableFactory"}], "label": "", "referencedClassName": "io.realm.rx.RxObservableFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.rx.RxObservableFactory", "typeName": "RxObservableFactory", "qualifiedTypeName": "io.realm.rx.RxObservableFactory", "simpleTypeName": "RxObservableFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create Rx Observables from Realm objects.\n The default factory is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create Rx Observables from Realm objects.\n The default factory is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "used to create Rx Observables from Realm objects."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObservableFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObservableFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObservableFactory"}], "label": "", "referencedClassName": "io.realm.rx.RealmObservableFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.rx.RealmObservableFactory", "typeName": "RealmObservableFactory", "qualifiedTypeName": "io.realm.rx.RealmObservableFactory", "simpleTypeName": "RealmObservableFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RxObservableFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxObservableFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxObservableFactory"}], "label": "", "referencedClassName": "io.realm.rx.RxObservableFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.rx.RxObservableFactory", "typeName": "RxObservableFactory", "qualifiedTypeName": "io.realm.rx.RxObservableFactory", "simpleTypeName": "RxObservableFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create Rx Observables from Realm objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create Rx Observables from Realm objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "used to create Rx Observables from Realm objects."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.rxFactory", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.rx.RxObservableFactory", "typeName": "RxObservableFactory", "qualifiedTypeName": "io.realm.rx.RxObservableFactory", "simpleTypeName": "RxObservableFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "factory", "typeName": "RxObservableFactory", "asString": "RxObservableFactory factory", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nonnull", "typeName": "Nonnull", "qualifiedTypeName": "Nonnull", "simpleTypeName": "Nonnull", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "factory factory to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory factory to use."}], "parameterName": "factory", "parameterComment": "factory to use.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.rx.RxObservableFactory)", "flatSignature": "(RxObservableFactory)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the {@link FlowFactory} used to create coroutines Flows from Realm objects.\n The default factory is {@link RealmFlowFactory}.", "name": "flowFactory", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 812, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "factory factory to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory factory to use."}], "parameterName": "factory", "parameterComment": "factory to use.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FlowFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FlowFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FlowFactory"}], "label": "", "referencedClassName": "io.realm.coroutines.FlowFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.coroutines.FlowFactory", "typeName": "FlowFactory", "qualifiedTypeName": "io.realm.coroutines.FlowFactory", "simpleTypeName": "FlowFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create coroutines Flows from Realm objects.\n The default factory is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create coroutines Flows from Realm objects.\n The default factory is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "used to create coroutines Flows from Realm objects."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmFlowFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmFlowFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmFlowFactory"}], "label": "", "referencedClassName": "io.realm.coroutines.RealmFlowFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.coroutines.RealmFlowFactory", "typeName": "RealmFlowFactory", "qualifiedTypeName": "io.realm.coroutines.RealmFlowFactory", "simpleTypeName": "RealmFlowFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FlowFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FlowFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FlowFactory"}], "label": "", "referencedClassName": "io.realm.coroutines.FlowFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.coroutines.FlowFactory", "typeName": "FlowFactory", "qualifiedTypeName": "io.realm.coroutines.FlowFactory", "simpleTypeName": "FlowFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create coroutines Flows from Realm objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create coroutines Flows from Realm objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "used to create coroutines Flows from Realm objects."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.flowFactory", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.coroutines.FlowFactory", "typeName": "FlowFactory", "qualifiedTypeName": "io.realm.coroutines.FlowFactory", "simpleTypeName": "FlowFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "factory", "typeName": "FlowFactory", "asString": "FlowFactory factory", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nonnull", "typeName": "Nonnull", "qualifiedTypeName": "Nonnull", "simpleTypeName": "Nonnull", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "factory factory to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory factory to use."}], "parameterName": "factory", "parameterComment": "factory to use.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.coroutines.FlowFactory)", "flatSignature": "(FlowFactory)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the initial data in {@link io.realm.Realm}. This transaction will be executed only the first time\n the Realm file is opened (created) or while migrating the data if\n {@link RealmConfiguration.Builder#deleteRealmIfMigrationNeeded()} is set.", "name": "initialData", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 827, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction transaction to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction transaction to execute."}], "parameterName": "transaction", "parameterComment": "transaction to execute.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This transaction will be executed only the first time\n the Realm file is opened (created) or while migrating the data if\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This transaction will be executed only the first time\n the Realm file is opened (created) or while migrating the data if\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#deleteRealmIfMigrationNeeded()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder#deleteRealmIfMigrationNeeded()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder#deleteRealmIfMigrationNeeded()"}], "label": "", "referencedClassName": "RealmConfiguration.Builder", "referencedMemberName": "deleteRealmIfMigrationNeeded()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is set.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is set."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is set."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.initialData", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "Realm.Transaction", "asString": "Realm.Transaction transaction", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction transaction to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction transaction to execute."}], "parameterName": "transaction", "parameterComment": "transaction to execute.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.Realm.Transaction)", "flatSignature": "(Realm.Transaction)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Setting this will create an in-memory Realm instead of saving it to disk. In-memory Realms might still use\n disk space if memory is running low, but all files created by an in-memory Realm will be deleted when the\n Realm is closed.\n <p>\n Note that because in-memory Realms are not persisted, you must be sure to hold on to at least one non-closed\n reference to the in-memory Realm object with the specific name as long as you want the data to last.", "name": "inMemory", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 840, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk. In-memory Realms might still use\n disk space if memory is running low, but all files created by an in-memory Realm will be deleted when the\n Realm is closed.\n <p>\n Note that because in-memory Realms are not persisted, you must be sure to hold on to at least one non-closed\n reference to the in-memory Realm object with the specific name as long as you want the data to last.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk. In-memory Realms might still use\n disk space if memory is running low, but all files created by an in-memory Realm will be deleted when the\n Realm is closed.\n <p>\n Note that because in-memory Realms are not persisted, you must be sure to hold on to at least one non-closed\n reference to the in-memory Realm object with the specific name as long as you want the data to last."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.inMemory", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the error handler used by this configuration.\n <p>\n Only errors not handled by the defined {@code SyncPolicy} will be reported to this error handler.", "name": "errorHandler", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 853, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "errorHandler error handler used to report back errors when communicating with the Realm Object Server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "error handler used to report back errors when communicating with the Realm Object Server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "errorHandler error handler used to report back errors when communicating with the Realm Object Server."}], "parameterName": "errorHandler", "parameterComment": "error handler used to report back errors when communicating with the Realm Object Server.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code null} is given as an error handler.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is given as an error handler."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is given as an error handler."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code null} is given as an error handler.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the error handler used by this configuration.\n <p>\n Only errors not handled by the defined ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the error handler used by this configuration.\n <p>\n Only errors not handled by the defined "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the error handler used by this configuration."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "SyncPolicy", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncPolicy"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncPolicy"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be reported to this error handler.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be reported to this error handler."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be reported to this error handler."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the error handler used by this configuration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the error handler used by this configuration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the error handler used by this configuration."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.errorHandler", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.ErrorHandler", "typeName": "SyncSession.ErrorHandler", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.ErrorHandler", "simpleTypeName": "ErrorHandler", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "errorHandler", "typeName": "SyncSession.ErrorHandler", "asString": "SyncSession.ErrorHandler errorHandler", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code null} is given as an error handler.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is given as an error handler."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is given as an error handler."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code null} is given as an error handler.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "errorHandler error handler used to report back errors when communicating with the Realm Object Server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "error handler used to report back errors when communicating with the Realm Object Server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "errorHandler error handler used to report back errors when communicating with the Realm Object Server."}], "parameterName": "errorHandler", "parameterComment": "error handler used to report back errors when communicating with the Realm Object Server.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.sync.SyncSession.ErrorHandler)", "flatSignature": "(SyncSession.ErrorHandler)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the handler for when a Client Reset occurs. If no handler is set, and error is\n logged when a Client Reset occurs.", "name": "clientResetHandler", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 865, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "handler custom handler in case of a Client Reset.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "custom handler in case of a Client Reset."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "handler custom handler in case of a Client Reset."}], "parameterName": "handler", "parameterComment": "custom handler in case of a Client Reset.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the handler for when a Client Reset occurs. If no handler is set, and error is\n logged when a Client Reset occurs.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the handler for when a Client Reset occurs. If no handler is set, and error is\n logged when a Client Reset occurs."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the handler for when a Client Reset occurs."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the handler for when a Client Reset occurs.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the handler for when a Client Reset occurs."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the handler for when a Client Reset occurs."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.clientResetHandler", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.ClientResetHandler", "typeName": "SyncSession.ClientResetHandler", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.ClientResetHandler", "simpleTypeName": "ClientResetHandler", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "handler", "typeName": "SyncSession.ClientResetHandler", "asString": "SyncSession.ClientResetHandler handler", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "handler custom handler in case of a Client Reset.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "custom handler in case of a Client Reset."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "handler custom handler in case of a Client Reset."}], "parameterName": "handler", "parameterComment": "custom handler in case of a Client Reset.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.sync.SyncSession.ClientResetHandler)", "flatSignature": "(SyncSession.ClientResetHandler)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened. The Realm will not open until all the data has been downloaded. This means that if a device is\n offline the Realm will not open.\n <p>\n Since downloading all changes can be an lengthy operation that might block the UI thread, Realms with this\n setting enabled should only be opened on background threads or with\n {@link Realm#getInstanceAsync(RealmConfiguration, Realm.Callback)} on the UI thread.\n <p>\n This check is only enforced the first time a Realm is created. If you otherwise want to make sure a Realm\n has the latest changes, use {@link SyncSession#downloadAllServerChanges()}.", "name": "waitForInitialRemoteData", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 883, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened. The Realm will not open until all the data has been downloaded. This means that if a device is\n offline the Realm will not open.\n <p>\n Since downloading all changes can be an lengthy operation that might block the UI thread, Realms with this\n setting enabled should only be opened on background threads or with\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened. The Realm will not open until all the data has been downloaded. This means that if a device is\n offline the Realm will not open.\n <p>\n Since downloading all changes can be an lengthy operation that might block the UI thread, Realms with this\n setting enabled should only be opened on background threads or with\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#getInstanceAsync(RealmConfiguration, Realm.Callback)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getInstanceAsync(RealmConfiguration, Realm.Callback)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getInstanceAsync(RealmConfiguration, Realm.Callback)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getInstanceAsync(RealmConfiguration, Realm.Callback)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " on the UI thread.\n <p>\n This check is only enforced the first time a Realm is created. If you otherwise want to make sure a Realm\n has the latest changes, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " on the UI thread.\n <p>\n This check is only enforced the first time a Realm is created. If you otherwise want to make sure a Realm\n has the latest changes, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "on the UI thread."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncSession#downloadAllServerChanges()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession#downloadAllServerChanges()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession#downloadAllServerChanges()"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "downloadAllServerChanges()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.waitForInitialRemoteData", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened. The Realm will not open until all the data has been downloaded. This means that if a device is\n offline the Realm will not open.\n <p>\n Since downloading all changes can be an lengthy operation that might block the UI thread, Realms with this\n setting enabled should only be opened on background threads or with\n {@link Realm#getInstanceAsync(RealmConfiguration, Realm.Callback)} on the UI thread.\n <p>\n This check is only enforced the first time a Realm is created. If you otherwise want to make sure a Realm\n has the latest changes, use {@link SyncSession#downloadAllServerChanges()}.", "name": "waitForInitialRemoteData", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 904, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "timeout how long to wait for the download to complete before an {@link io.realm.exceptions.DownloadingRealmInterruptedException} is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "how long to wait for the download to complete before an "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.exceptions.DownloadingRealmInterruptedException", "label": "", "referencedClassName": "io.realm.exceptions.DownloadingRealmInterruptedException", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.exceptions.DownloadingRealmInterruptedException", "typeName": "DownloadingRealmInterruptedException", "qualifiedTypeName": "io.realm.exceptions.DownloadingRealmInterruptedException", "simpleTypeName": "DownloadingRealmInterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "timeout how long to wait for the download to complete before an "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.exceptions.DownloadingRealmInterruptedException", "label": "", "referencedClassName": "io.realm.exceptions.DownloadingRealmInterruptedException", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.exceptions.DownloadingRealmInterruptedException", "typeName": "DownloadingRealmInterruptedException", "qualifiedTypeName": "io.realm.exceptions.DownloadingRealmInterruptedException", "simpleTypeName": "DownloadingRealmInterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown."}], "parameterName": "timeout", "parameterComment": "how long to wait for the download to complete before an {@link io.realm.exceptions.DownloadingRealmInterruptedException} is thrown.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "unit the unit of time used to define the timeout.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the unit of time used to define the timeout."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "unit the unit of time used to define the timeout."}], "parameterName": "unit", "parameterComment": "the unit of time used to define the timeout.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened. The Realm will not open until all the data has been downloaded. This means that if a device is\n offline the Realm will not open.\n <p>\n Since downloading all changes can be an lengthy operation that might block the UI thread, Realms with this\n setting enabled should only be opened on background threads or with\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened. The Realm will not open until all the data has been downloaded. This means that if a device is\n offline the Realm will not open.\n <p>\n Since downloading all changes can be an lengthy operation that might block the UI thread, Realms with this\n setting enabled should only be opened on background threads or with\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#getInstanceAsync(RealmConfiguration, Realm.Callback)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getInstanceAsync(RealmConfiguration, Realm.Callback)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getInstanceAsync(RealmConfiguration, Realm.Callback)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getInstanceAsync(RealmConfiguration, Realm.Callback)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " on the UI thread.\n <p>\n This check is only enforced the first time a Realm is created. If you otherwise want to make sure a Realm\n has the latest changes, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " on the UI thread.\n <p>\n This check is only enforced the first time a Realm is created. If you otherwise want to make sure a Realm\n has the latest changes, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "on the UI thread."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncSession#downloadAllServerChanges()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession#downloadAllServerChanges()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession#downloadAllServerChanges()"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "downloadAllServerChanges()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to download all known changes from the server the first time a Realm is\n opened."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.waitForInitialRemoteData", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "long", "typeName": "long", "qualifiedTypeName": "long", "simpleTypeName": "long", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "timeout", "typeName": "long", "asString": "long timeout", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.util.concurrent.TimeUnit", "typeName": "TimeUnit", "qualifiedTypeName": "java.util.concurrent.TimeUnit", "simpleTypeName": "TimeUnit", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "unit", "typeName": "TimeUnit", "asString": "TimeUnit unit", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "timeout how long to wait for the download to complete before an {@link io.realm.exceptions.DownloadingRealmInterruptedException} is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "how long to wait for the download to complete before an "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.exceptions.DownloadingRealmInterruptedException", "label": "", "referencedClassName": "io.realm.exceptions.DownloadingRealmInterruptedException", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.exceptions.DownloadingRealmInterruptedException", "typeName": "DownloadingRealmInterruptedException", "qualifiedTypeName": "io.realm.exceptions.DownloadingRealmInterruptedException", "simpleTypeName": "DownloadingRealmInterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "timeout how long to wait for the download to complete before an "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.exceptions.DownloadingRealmInterruptedException", "label": "", "referencedClassName": "io.realm.exceptions.DownloadingRealmInterruptedException", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.exceptions.DownloadingRealmInterruptedException", "typeName": "DownloadingRealmInterruptedException", "qualifiedTypeName": "io.realm.exceptions.DownloadingRealmInterruptedException", "simpleTypeName": "DownloadingRealmInterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown."}], "parameterName": "timeout", "parameterComment": "how long to wait for the download to complete before an {@link io.realm.exceptions.DownloadingRealmInterruptedException} is thrown.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "unit the unit of time used to define the timeout.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the unit of time used to define the timeout."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "unit the unit of time used to define the timeout."}], "parameterName": "unit", "parameterComment": "the unit of time used to define the timeout.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(long, java.util.concurrent.TimeUnit)", "flatSignature": "(long, TimeUnit)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an {@link IllegalStateException}.\n <p>\n This in particular mean that {@link #initialData(Realm.Transaction)} will not work in combination with a\n read only Realm and setting this will result in a {@link IllegalStateException} being thrown.\n </p>\n Marking a Realm as read only only applies to the Realm in this process. Other processes and devices can still\n write to the Realm.", "name": "readOnly", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 927, "column": 42, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n This in particular mean that ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n This in particular mean that "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#initialData(Realm.Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#initialData(Realm.Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#initialData(Realm.Transaction)"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "initialData(Realm.Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will not work in combination with a\n read only Realm and setting this will result in a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will not work in combination with a\n read only Realm and setting this will result in a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will not work in combination with a\n read only Realm and setting this will result in a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " being thrown.\n </p>\n Marking a Realm as read only only applies to the Realm in this process. Other processes and devices can still\n write to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " being thrown.\n </p>\n Marking a Realm as read only only applies to the Realm in this process. Other processes and devices can still\n write to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "being thrown."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.readOnly", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered. See {@link DefaultCompactOnLaunchCallback} for details.", "name": "compactOnLaunch", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 936, "column": 42, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered. See ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered. See "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DefaultCompactOnLaunchCallback", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultCompactOnLaunchCallback"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultCompactOnLaunchCallback"}], "label": "", "referencedClassName": "io.realm.DefaultCompactOnLaunchCallback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DefaultCompactOnLaunchCallback", "typeName": "DefaultCompactOnLaunchCallback", "qualifiedTypeName": "io.realm.DefaultCompactOnLaunchCallback", "simpleTypeName": "DefaultCompactOnLaunchCallback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for details.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for details."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for details."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.compactOnLaunch", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets this to determine if the Realm file should be compacted before returned to the user. It is passed the\n total file size (data + free space) and the bytes used by data in the file.", "name": "compactOnLaunch", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 948, "column": 42, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "compactOnLaunch a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "compactOnLaunch a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user."}], "parameterName": "compactOnLaunch", "parameterComment": "a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user. It is passed the\n total file size (data + free space) and the bytes used by data in the file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user. It is passed the\n total file size (data + free space) and the bytes used by data in the file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.compactOnLaunch", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.CompactOnLaunchCallback", "typeName": "CompactOnLaunchCallback", "qualifiedTypeName": "io.realm.CompactOnLaunchCallback", "simpleTypeName": "CompactOnLaunchCallback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "compactOnLaunch", "typeName": "CompactOnLaunchCallback", "asString": "CompactOnLaunchCallback compactOnLaunch", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "compactOnLaunch a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "compactOnLaunch a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user."}], "parameterName": "compactOnLaunch", "parameterComment": "a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.CompactOnLaunchCallback)", "flatSignature": "(CompactOnLaunchCallback)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "The prefix that is prepended to the path in the WebSocket request that initiates a sync\n connection to MongoDB Realm. The value specified must match the server\u2019s configuration\n otherwise the device will not be able to create a connection. This value is optional\n and should only be set if a specific firewall rule requires it.", "name": "urlPrefix", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 966, "column": 42, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "urlPrefix The prefix to append to the sync connection url.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The prefix to append to the sync connection url."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "urlPrefix The prefix to append to the sync connection url."}], "parameterName": "urlPrefix", "parameterComment": "The prefix to append to the sync connection url.", "isTypeParameter": false}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://docs.realm.io/platform/guides/learn-realm-sync-and-integrate-with-a-proxy#adding-a-custom-proxy\">Adding a custom proxy</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://docs.realm.io/platform/guides/learn-realm-sync-and-integrate-with-a-proxy#adding-a-custom-proxy\">Adding a custom proxy</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://docs.realm.io/platform/guides/learn-realm-sync-and-integrate-with-a-proxy#adding-a-custom-proxy\">Adding a custom proxy</a>"}], "label": ""}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://docs.realm.io/platform/guides/learn-realm-sync-and-integrate-with-a-proxy#adding-a-custom-proxy\">Adding a custom proxy</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://docs.realm.io/platform/guides/learn-realm-sync-and-integrate-with-a-proxy#adding-a-custom-proxy\">Adding a custom proxy</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://docs.realm.io/platform/guides/learn-realm-sync-and-integrate-with-a-proxy#adding-a-custom-proxy\">Adding a custom proxy</a>"}], "label": ""}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The prefix that is prepended to the path in the WebSocket request that initiates a sync\n connection to MongoDB Realm. The value specified must match the server\u2019s configuration\n otherwise the device will not be able to create a connection. This value is optional\n and should only be set if a specific firewall rule requires it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The prefix that is prepended to the path in the WebSocket request that initiates a sync\n connection to MongoDB Realm. The value specified must match the server\u2019s configuration\n otherwise the device will not be able to create a connection. This value is optional\n and should only be set if a specific firewall rule requires it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The prefix that is prepended to the path in the WebSocket request that initiates a sync\n connection to MongoDB Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The prefix that is prepended to the path in the WebSocket request that initiates a sync\n connection to MongoDB Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The prefix that is prepended to the path in the WebSocket request that initiates a sync\n connection to MongoDB Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The prefix that is prepended to the path in the WebSocket request that initiates a sync\n connection to MongoDB Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.urlPrefix", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "urlPrefix", "typeName": "String", "asString": "String urlPrefix", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "urlPrefix The prefix to append to the sync connection url.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The prefix to append to the sync connection url."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "urlPrefix The prefix to append to the sync connection url."}], "parameterName": "urlPrefix", "parameterComment": "The prefix to append to the sync connection url.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the maximum number of live versions in the Realm file before an {@link IllegalStateException} is thrown when\n attempting to write more data.\n <p>\n Realm is capable of concurrently handling many different versions of Realm objects. This can happen if you\n have a Realm open on many different threads or are freezing objects while data is being written to the file.\n <p>\n Under normal circumstances this is not a problem, but if the number of active versions grow too large, it will\n have a negative effect on the filesize on disk. Setting this parameters can therefore be used to prevent uses of\n Realm that can result in very large Realms.\n <p>\n Note, the version number will also increase when changes from other devices are integrated on this device,\n so the number of active versions will also depend on what other devices writing to the same Realm are doing.", "name": "maxNumberOfActiveVersions", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1043, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "number the maximum number of active versions before an exception is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the maximum number of active versions before an exception is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "number the maximum number of active versions before an exception is thrown."}], "parameterName": "number", "parameterComment": "the maximum number of active versions before an exception is thrown.", "isTypeParameter": false}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>"}], "label": ""}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>"}], "label": ""}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown when\n attempting to write more data.\n <p>\n Realm is capable of concurrently handling many different versions of Realm objects. This can happen if you\n have a Realm open on many different threads or are freezing objects while data is being written to the file.\n <p>\n Under normal circumstances this is not a problem, but if the number of active versions grow too large, it will\n have a negative effect on the filesize on disk. Setting this parameters can therefore be used to prevent uses of\n Realm that can result in very large Realms.\n <p>\n Note, the version number will also increase when changes from other devices are integrated on this device,\n so the number of active versions will also depend on what other devices writing to the same Realm are doing.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown when\n attempting to write more data.\n <p>\n Realm is capable of concurrently handling many different versions of Realm objects. This can happen if you\n have a Realm open on many different threads or are freezing objects while data is being written to the file.\n <p>\n Under normal circumstances this is not a problem, but if the number of active versions grow too large, it will\n have a negative effect on the filesize on disk. Setting this parameters can therefore be used to prevent uses of\n Realm that can result in very large Realms.\n <p>\n Note, the version number will also increase when changes from other devices are integrated on this device,\n so the number of active versions will also depend on what other devices writing to the same Realm are doing."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is thrown when\n attempting to write more data."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown when\n attempting to write more data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown when\n attempting to write more data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is thrown when\n attempting to write more data."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.maxNumberOfActiveVersions", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "long", "typeName": "long", "qualifiedTypeName": "long", "simpleTypeName": "long", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "number", "typeName": "long", "asString": "long number", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "number the maximum number of active versions before an exception is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the maximum number of active versions before an exception is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "number the maximum number of active versions before an exception is thrown."}], "parameterName": "number", "parameterComment": "the maximum number of active versions before an exception is thrown.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(long)", "flatSignature": "(long)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets whether or not calls to {@link Realm#executeTransaction} are allowed from the UI thread.\n <p>\n <b>WARNING: Realm does not allow synchronous transactions to be run on the main thread unless users explicitly opt in\n with this method.</b> We recommend diverting calls to {@code executeTransaction} to non-UI threads or, alternatively,\n using {@link Realm#executeTransactionAsync}.", "name": "allowWritesOnUiThread", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1055, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#executeTransaction", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransaction"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransaction"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread.\n <p>\n <b>WARNING: Realm does not allow synchronous transactions to be run on the main thread unless users explicitly opt in\n with this method.</b> We recommend diverting calls to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread.\n <p>\n <b>WARNING: Realm does not allow synchronous transactions to be run on the main thread unless users explicitly opt in\n with this method.</b> We recommend diverting calls to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "are allowed from the UI thread."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "executeTransaction", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "executeTransaction"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "executeTransaction"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to non-UI threads or, alternatively,\n using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to non-UI threads or, alternatively,\n using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to non-UI threads or, alternatively,\n using"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#executeTransactionAsync", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransactionAsync"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransactionAsync"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#executeTransaction", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransaction"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransaction"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "are allowed from the UI thread."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.allowWritesOnUiThread", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "allowWritesOnUiThread", "typeName": "boolean", "asString": "boolean allowWritesOnUiThread", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(boolean)", "flatSignature": "(boolean)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets whether or not {@code RealmQueries} are allowed from the UI thread.\n <p>\n By default Realm allows queries on the main thread. However, by doing so your application may experience a drop of\n frames or even ANRs. We recommend diverting queries to non-UI threads or, alternatively, using\n {@link RealmQuery#findAllAsync()} or {@link RealmQuery#findFirstAsync()}.", "name": "allowQueriesOnUiThread", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1067, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "RealmQueries", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQueries"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQueries"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread.\n <p>\n By default Realm allows queries on the main thread. However, by doing so your application may experience a drop of\n frames or even ANRs. We recommend diverting queries to non-UI threads or, alternatively, using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread.\n <p>\n By default Realm allows queries on the main thread. However, by doing so your application may experience a drop of\n frames or even ANRs. We recommend diverting queries to non-UI threads or, alternatively, using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "are allowed from the UI thread."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmQuery#findAllAsync()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery#findAllAsync()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery#findAllAsync()"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "findAllAsync()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmQuery#findFirstAsync()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery#findFirstAsync()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery#findFirstAsync()"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "findFirstAsync()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "RealmQueries", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQueries"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQueries"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "are allowed from the UI thread."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.allowQueriesOnUiThread", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "allowQueriesOnUiThread", "typeName": "boolean", "asString": "boolean allowQueriesOnUiThread", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(boolean)", "flatSignature": "(boolean)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Creates the RealmConfiguration based on the builder parameters.", "name": "build", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1078, "column": 34, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the created {@link SyncConfiguration}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the created "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncConfiguration", "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the created "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncConfiguration", "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the configuration parameters are invalid or inconsistent.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the configuration parameters are invalid or inconsistent."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the configuration parameters are invalid or inconsistent."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the configuration parameters are invalid or inconsistent.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder.build", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the configuration parameters are invalid or inconsistent.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the configuration parameters are invalid or inconsistent."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the configuration parameters are invalid or inconsistent."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the configuration parameters are invalid or inconsistent.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "constructors": [{"commentText": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value.", "name": "Builder", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 507, "column": 16, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "user The user that will be used for accessing the Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The user that will be used for accessing the Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user The user that will be used for accessing the Realm App."}], "parameterName": "user", "parameterComment": "The user that will be used for accessing the Realm App.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "partitionValue The partition value identifying the remote Realm that will be synchronized.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The partition value identifying the remote Realm that will be synchronized."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "partitionValue The partition value identifying the remote Realm that will be synchronized."}], "parameterName": "partitionValue", "parameterComment": "The partition value identifying the remote Realm that will be synchronized.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value."}]}], "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "user", "typeName": "User", "asString": "User user", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "partitionValue", "typeName": "String", "asString": "String partitionValue", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "user The user that will be used for accessing the Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The user that will be used for accessing the Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user The user that will be used for accessing the Realm App."}], "parameterName": "user", "parameterComment": "The user that will be used for accessing the Realm App.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "partitionValue The partition value identifying the remote Realm that will be synchronized.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The partition value identifying the remote Realm that will be synchronized."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "partitionValue The partition value identifying the remote Realm that will be synchronized."}], "parameterName": "partitionValue", "parameterComment": "The partition value identifying the remote Realm that will be synchronized.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.User, java.lang.String)", "flatSignature": "(User, String)", "typeParameters": []}, {"commentText": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value.", "name": "Builder", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 518, "column": 16, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "user The user that will be used for accessing the Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The user that will be used for accessing the Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user The user that will be used for accessing the Realm App."}], "parameterName": "user", "parameterComment": "The user that will be used for accessing the Realm App.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "partitionValue The partition value identifying the remote Realm that will be synchronized.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The partition value identifying the remote Realm that will be synchronized."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "partitionValue The partition value identifying the remote Realm that will be synchronized."}], "parameterName": "partitionValue", "parameterComment": "The partition value identifying the remote Realm that will be synchronized.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the builder for a <i>SyncConfiguration</i> with the given user\n and partition value."}]}], "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "user", "typeName": "User", "asString": "User user", "annotations": []}, {"type": {"_class": "Type", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "partitionValue", "typeName": "ObjectId", "asString": "ObjectId partitionValue", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "user The user that will be used for accessing the Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The user that will be used for accessing the Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user The user that will be used for accessing the Realm App."}], "parameterName": "user", "parameterComment": "The user that will be used for accessing the Realm App.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "partitionValue The partition value identifying the remote Realm that will be synchronized.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The partition value identifying the remote Realm that will be synchronized."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "partitionValue The partition value identifying the remote Realm that will be synchronized."}], "parameterName": "partitionValue", "parameterComment": "The partition value identifying the remote Realm that will be synchronized.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.User, ObjectId)", "flatSignature": "(User, ObjectId)", "typeParameters": []}], "innerClasses": []}