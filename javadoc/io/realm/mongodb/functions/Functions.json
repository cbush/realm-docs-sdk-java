{"commentText": "A <i>Functions</i> manager to call remote Realm functions for the associated Realm App.\n <p>\n Arguments and results are encoded/decoded with the <i>Functions'</i> codec registry either\n inherited from the {@link AppConfiguration#getDefaultCodecRegistry()} or set explicitly\n when creating the <i>Functions</i>-instance through {@link User#getFunctions(CodecRegistry)}\n or through the individual calls to {@link #callFunction(String, List, Class, CodecRegistry)}.", "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "User#getFunctions()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions()"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getFunctions()"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "User#getFunctions(CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions(CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions(CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getFunctions(CodecRegistry)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "App#getFunctions(User)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#getFunctions(User)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#getFunctions(User)"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getFunctions(User)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "App#getFunctions(User, CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#getFunctions(User, CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#getFunctions(User, CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getFunctions(User, CodecRegistry)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "CodecRegistry", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "CodecRegistry"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "CodecRegistry"}], "label": "", "referencedClassName": "CodecRegistry"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "User#getFunctions()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions()"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getFunctions()"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "User#getFunctions(CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions(CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions(CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getFunctions(CodecRegistry)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "App#getFunctions(User)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#getFunctions(User)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#getFunctions(User)"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getFunctions(User)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "App#getFunctions(User, CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#getFunctions(User, CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#getFunctions(User, CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getFunctions(User, CodecRegistry)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "CodecRegistry", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "CodecRegistry"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "CodecRegistry"}], "label": "", "referencedClassName": "CodecRegistry"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>Functions</i> manager to call remote Realm functions for the associated Realm App.\n <p>\n Arguments and results are encoded/decoded with the <i>Functions'</i> codec registry either\n inherited from the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>Functions</i> manager to call remote Realm functions for the associated Realm App.\n <p>\n Arguments and results are encoded/decoded with the <i>Functions'</i> codec registry either\n inherited from the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>Functions</i> manager to call remote Realm functions for the associated Realm App."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or set explicitly\n when creating the <i>Functions</i>-instance through ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or set explicitly\n when creating the <i>Functions</i>-instance through "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or set explicitly\n when creating the <i>Functions</i>-instance through"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User#getFunctions(CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions(CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions(CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getFunctions(CodecRegistry)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n or through the individual calls to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n or through the individual calls to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or through the individual calls to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#callFunction(String, List, Class, CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class, CodecRegistry)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>Functions</i> manager to call remote Realm functions for the associated Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>Functions</i> manager to call remote Realm functions for the associated Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>Functions</i> manager to call remote Realm functions for the associated Realm App."}]}], "name": "Functions", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 50, "column": 17, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Beta", "typeName": "Beta", "qualifiedTypeName": "Beta", "simpleTypeName": "Beta", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isAbstract": true, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [{"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "user", "isField": true, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 52, "column": 20, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "FieldDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions.user", "modifierSpecifier": 4, "modifiers": "protected", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isTransient": false, "isVolatile": false, "serialFieldTags": []}], "enumConstants": [], "methods": [{"commentText": "Call a MongoDB Realm function synchronously with custom codec registry encoding/decoding\n arguments/results.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass  The type that the functions result should be converted to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the functions result should be converted to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass  The type that the functions result should be converted to."}], "parameterName": "resultClass", "parameterComment": "The type that the functions result should be converted to.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "codecRegistry Codec registry to use for argument encoding and result decoding.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Codec registry to use for argument encoding and result decoding."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "codecRegistry Codec registry to use for argument encoding and result decoding."}], "parameterName": "codecRegistry", "parameterComment": "Codec registry to use for argument encoding and result decoding.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT> The type that the response will be decoded as using the {@code codecRegistry}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "codecRegistry"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT> The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "codecRegistry"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "ResultT", "parameterComment": "The type that the response will be decoded as using the {@code codecRegistry}.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "Result of the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Result of the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Result of the Realm function."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the request failed in some way.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the request failed in some way."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the request failed in some way."}], "exceptionName": "AppException", "exceptionComment": "if the request failed in some way.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom codec registry encoding/decoding\n arguments/results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom codec registry encoding/decoding\n arguments/results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom codec registry encoding/decoding\n arguments/results."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom codec registry encoding/decoding\n arguments/results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom codec registry encoding/decoding\n arguments/results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom codec registry encoding/decoding\n arguments/results."}]}], "name": "callFunction", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 77, "column": 30, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions.callFunction", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "name", "typeName": "String", "asString": "String name", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.util.List<?>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "?", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [], "superBounds": []}], "interfaceTypes": ["java.util.Collection"]}, "name": "args", "typeName": "java.util.List<?>", "asString": "java.util.List<?> args", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}, {"type": {"_class": "Type", "asString": "CodecRegistry", "typeName": "CodecRegistry", "qualifiedTypeName": "CodecRegistry", "simpleTypeName": "CodecRegistry", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "codecRegistry", "typeName": "CodecRegistry", "asString": "CodecRegistry codecRegistry", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the request failed in some way.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the request failed in some way."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the request failed in some way."}], "exceptionName": "AppException", "exceptionComment": "if the request failed in some way.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass  The type that the functions result should be converted to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the functions result should be converted to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass  The type that the functions result should be converted to."}], "parameterName": "resultClass", "parameterComment": "The type that the functions result should be converted to.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "codecRegistry Codec registry to use for argument encoding and result decoding.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Codec registry to use for argument encoding and result decoding."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "codecRegistry Codec registry to use for argument encoding and result decoding."}], "parameterName": "codecRegistry", "parameterComment": "Codec registry to use for argument encoding and result decoding.", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT> The type that the response will be decoded as using the {@code codecRegistry}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "codecRegistry"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT> The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "codecRegistry"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "ResultT", "parameterComment": "The type that the response will be decoded as using the {@code codecRegistry}.", "isTypeParameter": true}], "signature": "(java.lang.String, java.util.List<?>, java.lang.Class<ResultT>, CodecRegistry)", "flatSignature": "(String, List<?>, Class<ResultT>, CodecRegistry)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "Call a MongoDB Realm function synchronously with default codec registry encoding/decoding\n arguments/results.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass  The type that the functions result should be converted to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the functions result should be converted to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass  The type that the functions result should be converted to."}], "parameterName": "resultClass", "parameterComment": "The type that the functions result should be converted to.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT> The type that the response will be decoded as using the default codec registry.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the default codec registry."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT> The type that the response will be decoded as using the default codec registry."}], "parameterName": "ResultT", "parameterComment": "The type that the response will be decoded as using the default codec registry.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "Result of the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Result of the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Result of the Realm function."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the request failed in some way.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the request failed in some way."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the request failed in some way."}], "exceptionName": "AppException", "exceptionComment": "if the request failed in some way.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunction(String, List, Class, CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class, CodecRegistry)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunction(String, List, Class, CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class, CodecRegistry)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with default codec registry encoding/decoding\n arguments/results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with default codec registry encoding/decoding\n arguments/results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with default codec registry encoding/decoding\n arguments/results."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with default codec registry encoding/decoding\n arguments/results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with default codec registry encoding/decoding\n arguments/results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with default codec registry encoding/decoding\n arguments/results."}]}], "name": "callFunction", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 96, "column": 30, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions.callFunction", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "name", "typeName": "String", "asString": "String name", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.util.List<?>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "?", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [], "superBounds": []}], "interfaceTypes": ["java.util.Collection"]}, "name": "args", "typeName": "java.util.List<?>", "asString": "java.util.List<?> args", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the request failed in some way.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the request failed in some way."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the request failed in some way."}], "exceptionName": "AppException", "exceptionComment": "if the request failed in some way.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass  The type that the functions result should be converted to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the functions result should be converted to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass  The type that the functions result should be converted to."}], "parameterName": "resultClass", "parameterComment": "The type that the functions result should be converted to.", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT> The type that the response will be decoded as using the default codec registry.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the default codec registry."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT> The type that the response will be decoded as using the default codec registry."}], "parameterName": "ResultT", "parameterComment": "The type that the response will be decoded as using the default codec registry.", "isTypeParameter": true}], "signature": "(java.lang.String, java.util.List<?>, java.lang.Class<ResultT>)", "flatSignature": "(String, List<?>, Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "Call a MongoDB Realm function synchronously with custom result decoder.\n <p>\n The arguments will be encoded with the default codec registry encoding.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultDecoder The decoder used to decode the result.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The decoder used to decode the result."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultDecoder The decoder used to decode the result."}], "parameterName": "resultDecoder", "parameterComment": "The decoder used to decode the result.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT> The type that the response will be decoded as using the {@code resultDecoder}", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "resultDecoder"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT> The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "resultDecoder"}], "parameterName": "ResultT", "parameterComment": "The type that the response will be decoded as using the {@code resultDecoder}", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "Result of the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Result of the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Result of the Realm function."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the request failed in some way.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the request failed in some way."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the request failed in some way."}], "exceptionName": "AppException", "exceptionComment": "if the request failed in some way.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunction(String, List, Class, CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class, CodecRegistry)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunction(String, List, Class, CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class, CodecRegistry)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom result decoder.\n <p>\n The arguments will be encoded with the default codec registry encoding.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom result decoder.\n <p>\n The arguments will be encoded with the default codec registry encoding."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom result decoder."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom result decoder.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom result decoder."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function synchronously with custom result decoder."}]}], "name": "callFunction", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 116, "column": 30, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions.callFunction", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "name", "typeName": "String", "asString": "String name", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.util.List<?>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "?", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [], "superBounds": []}], "interfaceTypes": ["java.util.Collection"]}, "name": "args", "typeName": "java.util.List<?>", "asString": "java.util.List<?> args", "annotations": []}, {"type": {"_class": "Type", "asString": "<any>", "typeName": "<any>", "qualifiedTypeName": "<any>", "simpleTypeName": "<any>", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "resultDecoder", "typeName": "<any>", "asString": "<any> resultDecoder", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the request failed in some way.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the request failed in some way."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the request failed in some way."}], "exceptionName": "AppException", "exceptionComment": "if the request failed in some way.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultDecoder The decoder used to decode the result.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The decoder used to decode the result."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultDecoder The decoder used to decode the result."}], "parameterName": "resultDecoder", "parameterComment": "The decoder used to decode the result.", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT> The type that the response will be decoded as using the {@code resultDecoder}", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "resultDecoder"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT> The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "resultDecoder"}], "parameterName": "ResultT", "parameterComment": "The type that the response will be decoded as using the {@code resultDecoder}", "isTypeParameter": true}], "signature": "(java.lang.String, java.util.List<?>, <any>)", "flatSignature": "(String, List<?>, <any>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results.\n <p>\n This is the asynchronous equivalent of {@link #callFunction(String, List, Class, CodecRegistry)}.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass  The type that the functions result should be converted to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the functions result should be converted to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass  The type that the functions result should be converted to."}], "parameterName": "resultClass", "parameterComment": "The type that the functions result should be converted to.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "codecRegistry Codec registry to use for argument encoding and result decoding.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Codec registry to use for argument encoding and result decoding."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "codecRegistry Codec registry to use for argument encoding and result decoding."}], "parameterName": "codecRegistry", "parameterComment": "Codec registry to use for argument encoding and result decoding.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback The callback that will receive the result or any errors from the request.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The callback that will receive the result or any errors from the request."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback The callback that will receive the result or any errors from the request."}], "parameterName": "callback", "parameterComment": "The callback that will receive the result or any errors from the request.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<T> The type that the response will be decoded as using the default codec registry.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the default codec registry."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<T> The type that the response will be decoded as using the default codec registry."}], "parameterName": "T", "parameterComment": "The type that the response will be decoded as using the default codec registry.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "The task representing the ongoing operation.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The task representing the ongoing operation."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The task representing the ongoing operation."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if not called on a looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if not called on a looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if not called on a looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if not called on a looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunction(String, List, Class, CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class, CodecRegistry)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunction(String, List, Class, CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class, CodecRegistry)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results.\n <p>\n This is the asynchronous equivalent of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results.\n <p>\n This is the asynchronous equivalent of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#callFunction(String, List, Class, CodecRegistry)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class, CodecRegistry)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class, CodecRegistry)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results."}]}], "name": "callFunctionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 140, "column": 31, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions.callFunctionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "name", "typeName": "String", "asString": "String name", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.util.List<?>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "?", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [], "superBounds": []}], "interfaceTypes": ["java.util.Collection"]}, "name": "args", "typeName": "java.util.List<?>", "asString": "java.util.List<?> args", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<T>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "resultClass", "typeName": "java.lang.Class<T>", "asString": "java.lang.Class<T> resultClass", "annotations": []}, {"type": {"_class": "Type", "asString": "CodecRegistry", "typeName": "CodecRegistry", "qualifiedTypeName": "CodecRegistry", "simpleTypeName": "CodecRegistry", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "codecRegistry", "typeName": "CodecRegistry", "asString": "CodecRegistry codecRegistry", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<T>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<T>", "asString": "io.realm.mongodb.App.Callback<T> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if not called on a looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if not called on a looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if not called on a looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if not called on a looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass  The type that the functions result should be converted to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the functions result should be converted to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass  The type that the functions result should be converted to."}], "parameterName": "resultClass", "parameterComment": "The type that the functions result should be converted to.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "codecRegistry Codec registry to use for argument encoding and result decoding.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Codec registry to use for argument encoding and result decoding."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "codecRegistry Codec registry to use for argument encoding and result decoding."}], "parameterName": "codecRegistry", "parameterComment": "Codec registry to use for argument encoding and result decoding.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback The callback that will receive the result or any errors from the request.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The callback that will receive the result or any errors from the request."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback The callback that will receive the result or any errors from the request."}], "parameterName": "callback", "parameterComment": "The callback that will receive the result or any errors from the request.", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<T> The type that the response will be decoded as using the default codec registry.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the default codec registry."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<T> The type that the response will be decoded as using the default codec registry."}], "parameterName": "T", "parameterComment": "The type that the response will be decoded as using the default codec registry.", "isTypeParameter": true}], "signature": "(java.lang.String, java.util.List<?>, java.lang.Class<T>, CodecRegistry, io.realm.mongodb.App.Callback<T>)", "flatSignature": "(String, List<?>, Class<T>, CodecRegistry, App.Callback<T>)", "typeParameters": [{"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results.\n <p>\n This is the asynchronous equivalent of {@link #callFunction(String, List, Class)}.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass  The type that the functions result should be converted to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the functions result should be converted to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass  The type that the functions result should be converted to."}], "parameterName": "resultClass", "parameterComment": "The type that the functions result should be converted to.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback The callback that will receive the result or any errors from the request.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The callback that will receive the result or any errors from the request."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback The callback that will receive the result or any errors from the request."}], "parameterName": "callback", "parameterComment": "The callback that will receive the result or any errors from the request.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<T> The type that the response will be decoded as using the default codec registry.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the default codec registry."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<T> The type that the response will be decoded as using the default codec registry."}], "parameterName": "T", "parameterComment": "The type that the response will be decoded as using the default codec registry.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "The task representing the ongoing operation.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The task representing the ongoing operation."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The task representing the ongoing operation."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if not called on a looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if not called on a looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if not called on a looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if not called on a looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunction(String, List, Class)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunction(String, List, Class)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results.\n <p>\n This is the asynchronous equivalent of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results.\n <p>\n This is the asynchronous equivalent of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#callFunction(String, List, Class)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom codec registry for encoding/decoding\n arguments/results."}]}], "name": "callFunctionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 170, "column": 31, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions.callFunctionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "name", "typeName": "String", "asString": "String name", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.util.List<?>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "?", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [], "superBounds": []}], "interfaceTypes": ["java.util.Collection"]}, "name": "args", "typeName": "java.util.List<?>", "asString": "java.util.List<?> args", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<T>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "resultClass", "typeName": "java.lang.Class<T>", "asString": "java.lang.Class<T> resultClass", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<T>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<T>", "asString": "io.realm.mongodb.App.Callback<T> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if not called on a looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if not called on a looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if not called on a looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if not called on a looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass  The type that the functions result should be converted to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the functions result should be converted to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass  The type that the functions result should be converted to."}], "parameterName": "resultClass", "parameterComment": "The type that the functions result should be converted to.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback The callback that will receive the result or any errors from the request.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The callback that will receive the result or any errors from the request."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback The callback that will receive the result or any errors from the request."}], "parameterName": "callback", "parameterComment": "The callback that will receive the result or any errors from the request.", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<T> The type that the response will be decoded as using the default codec registry.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the default codec registry."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<T> The type that the response will be decoded as using the default codec registry."}], "parameterName": "T", "parameterComment": "The type that the response will be decoded as using the default codec registry.", "isTypeParameter": true}], "signature": "(java.lang.String, java.util.List<?>, java.lang.Class<T>, io.realm.mongodb.App.Callback<T>)", "flatSignature": "(String, List<?>, Class<T>, App.Callback<T>)", "typeParameters": [{"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Call a MongoDB Realm function asynchronously with custom result decoder.\n <p>\n This is the asynchronous equivalent of {@link #callFunction(String, List, Decoder)}.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultDecoder The decoder used to decode the result.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The decoder used to decode the result."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultDecoder The decoder used to decode the result."}], "parameterName": "resultDecoder", "parameterComment": "The decoder used to decode the result.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback The callback that will receive the result or any errors from the request.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The callback that will receive the result or any errors from the request."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback The callback that will receive the result or any errors from the request."}], "parameterName": "callback", "parameterComment": "The callback that will receive the result or any errors from the request.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<T> The type that the response will be decoded as using the {@code resultDecoder}", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "resultDecoder"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<T> The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "resultDecoder"}], "parameterName": "T", "parameterComment": "The type that the response will be decoded as using the {@code resultDecoder}", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "The task representing the ongoing operation.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The task representing the ongoing operation."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The task representing the ongoing operation."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if not called on a looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if not called on a looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if not called on a looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if not called on a looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunction(String, List, Class)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunction(String, List, Class)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Class)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Class)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom result decoder.\n <p>\n This is the asynchronous equivalent of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom result decoder.\n <p>\n This is the asynchronous equivalent of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom result decoder."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#callFunction(String, List, Decoder)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Decoder)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#callFunction(String, List, Decoder)"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "callFunction(String, List, Decoder)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom result decoder.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom result decoder."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call a MongoDB Realm function asynchronously with custom result decoder."}]}], "name": "callFunctionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 192, "column": 31, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions.callFunctionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "name", "typeName": "String", "asString": "String name", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.util.List<?>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "?", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [], "superBounds": []}], "interfaceTypes": ["java.util.Collection"]}, "name": "args", "typeName": "java.util.List<?>", "asString": "java.util.List<?> args", "annotations": []}, {"type": {"_class": "Type", "asString": "<any>", "typeName": "<any>", "qualifiedTypeName": "<any>", "simpleTypeName": "<any>", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "resultDecoder", "typeName": "<any>", "asString": "<any> resultDecoder", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<T>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<T>", "asString": "io.realm.mongodb.App.Callback<T> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if not called on a looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if not called on a looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if not called on a looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if not called on a looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name Name of the Realm function to call.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Name of the Realm function to call."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name Name of the Realm function to call."}], "parameterName": "name", "parameterComment": "Name of the Realm function to call.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args Arguments to the Realm function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Arguments to the Realm function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args Arguments to the Realm function."}], "parameterName": "args", "parameterComment": "Arguments to the Realm function.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultDecoder The decoder used to decode the result.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The decoder used to decode the result."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultDecoder The decoder used to decode the result."}], "parameterName": "resultDecoder", "parameterComment": "The decoder used to decode the result.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback The callback that will receive the result or any errors from the request.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The callback that will receive the result or any errors from the request."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback The callback that will receive the result or any errors from the request."}], "parameterName": "callback", "parameterComment": "The callback that will receive the result or any errors from the request.", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<T> The type that the response will be decoded as using the {@code resultDecoder}", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "resultDecoder"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<T> The type that the response will be decoded as using the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "resultDecoder"}], "parameterName": "T", "parameterComment": "The type that the response will be decoded as using the {@code resultDecoder}", "isTypeParameter": true}], "signature": "(java.lang.String, java.util.List<?>, <any>, io.realm.mongodb.App.Callback<T>)", "flatSignature": "(String, List<?>, <any>, App.Callback<T>)", "typeParameters": [{"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the default codec registry used for encoding arguments and decoding results for this\n <i>Realm functions</i> instance.", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "The default codec registry.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The default codec registry."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The default codec registry."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default codec registry used for encoding arguments and decoding results for this\n <i>Realm functions</i> instance.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default codec registry used for encoding arguments and decoding results for this\n <i>Realm functions</i> instance."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default codec registry used for encoding arguments and decoding results for this\n <i>Realm functions</i> instance."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default codec registry used for encoding arguments and decoding results for this\n <i>Realm functions</i> instance.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default codec registry used for encoding arguments and decoding results for this\n <i>Realm functions</i> instance."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default codec registry used for encoding arguments and decoding results for this\n <i>Realm functions</i> instance."}]}], "name": "getDefaultCodecRegistry", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 208, "column": 26, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions.getDefaultCodecRegistry", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "CodecRegistry", "typeName": "CodecRegistry", "qualifiedTypeName": "CodecRegistry", "simpleTypeName": "CodecRegistry", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the {@link App} that this instance in associated with.", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "The {@link App} that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that this instance in associated with."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that this instance in associated with."}]}], "name": "getApp", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 217, "column": 16, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions.getApp", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the {@link User} that this instance in associated with.", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "The {@link User} that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that this instance in associated with."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that this instance in associated with."}]}], "name": "getUser", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 226, "column": 17, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions.getUser", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "invoke", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 230, "column": 30, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions.invoke", "modifierSpecifier": 1028, "modifiers": "protected abstract", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "name", "typeName": "String", "asString": "String name", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.util.List<?>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "?", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [], "superBounds": []}], "interfaceTypes": ["java.util.Collection"]}, "name": "args", "typeName": "java.util.List<?>", "asString": "java.util.List<?> args", "annotations": []}, {"type": {"_class": "Type", "asString": "CodecRegistry", "typeName": "CodecRegistry", "qualifiedTypeName": "CodecRegistry", "simpleTypeName": "CodecRegistry", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "codecRegistry", "typeName": "CodecRegistry", "asString": "CodecRegistry codecRegistry", "annotations": []}, {"type": {"_class": "Type", "asString": "<any>", "typeName": "<any>", "qualifiedTypeName": "<any>", "simpleTypeName": "<any>", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "resultDecoder", "typeName": "<any>", "asString": "<any> resultDecoder", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String, java.util.List<?>, CodecRegistry, <any>)", "flatSignature": "(String, List<?>, CodecRegistry, <any>)", "typeParameters": [{"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": true, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "T", "typeName": "T", "qualifiedTypeName": "T", "simpleTypeName": "T", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}], "constructors": [{"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "Functions", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 56, "column": 15, "file": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java"}, "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.functions"}, "qualifiedName": "io.realm.mongodb.functions.Functions", "modifierSpecifier": 4, "modifiers": "protected", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "user", "typeName": "User", "asString": "User user", "annotations": []}, {"type": {"_class": "Type", "asString": "CodecRegistry", "typeName": "CodecRegistry", "qualifiedTypeName": "CodecRegistry", "simpleTypeName": "CodecRegistry", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "codecRegistry", "typeName": "CodecRegistry", "asString": "CodecRegistry codecRegistry", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(io.realm.mongodb.User, CodecRegistry)", "flatSignature": "(User, CodecRegistry)", "typeParameters": []}], "innerClasses": []}