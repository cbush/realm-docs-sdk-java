{"commentText": "The MongoCollection interface provides read and write access to documents.\n <p>\n Use {@link MongoDatabase#getCollection} to get a collection instance.\n </p><p>\n Before any access is possible, there must be an active, logged-in user.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<DocumentT> The type that this collection will encode documents from and decode documents\n                    to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that this collection will encode documents from and decode documents\n                    to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<DocumentT> The type that this collection will encode documents from and decode documents\n                    to."}], "parameterName": "DocumentT", "parameterComment": "The type that this collection will encode documents from and decode documents\n                    to.", "isTypeParameter": true}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "MongoDatabase", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoDatabase"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoDatabase"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.MongoDatabase", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoDatabase", "typeName": "MongoDatabase", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoDatabase", "simpleTypeName": "MongoDatabase", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "MongoDatabase", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoDatabase"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoDatabase"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.MongoDatabase", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoDatabase", "typeName": "MongoDatabase", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoDatabase", "simpleTypeName": "MongoDatabase", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The MongoCollection interface provides read and write access to documents.\n <p>\n Use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The MongoCollection interface provides read and write access to documents.\n <p>\n Use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The MongoCollection interface provides read and write access to documents."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "MongoDatabase#getCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoDatabase#getCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoDatabase#getCollection"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.MongoDatabase", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoDatabase", "typeName": "MongoDatabase", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoDatabase", "simpleTypeName": "MongoDatabase", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getCollection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to get a collection instance.\n </p><p>\n Before any access is possible, there must be an active, logged-in user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to get a collection instance.\n </p><p>\n Before any access is possible, there must be an active, logged-in user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to get a collection instance."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The MongoCollection interface provides read and write access to documents.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The MongoCollection interface provides read and write access to documents."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The MongoCollection interface provides read and write access to documents."}]}], "name": "MongoCollection", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 67, "column": 8, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "io.realm.annotations.Beta", "typeName": "Beta", "qualifiedTypeName": "io.realm.annotations.Beta", "simpleTypeName": "Beta", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isAbstract": false, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<DocumentT> The type that this collection will encode documents from and decode documents\n                    to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that this collection will encode documents from and decode documents\n                    to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<DocumentT> The type that this collection will encode documents from and decode documents\n                    to."}], "parameterName": "DocumentT", "parameterComment": "The type that this collection will encode documents from and decode documents\n                    to.", "isTypeParameter": true}], "fields": [], "enumConstants": [], "methods": [{"commentText": "Gets the namespace of this collection, i.e. the database and collection names together.", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the namespace", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the namespace"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the namespace"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the namespace of this collection, i.e. the database and collection names together.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the namespace of this collection, i.e. the database and collection names together."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the namespace of this collection, i.e."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the namespace of this collection, i.e.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the namespace of this collection, i.e."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the namespace of this collection, i.e."}]}], "name": "getNamespace", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 84, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.getNamespace", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoNamespace", "typeName": "MongoNamespace", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoNamespace", "simpleTypeName": "MongoNamespace", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Gets the name of this collection", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the name", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the name of this collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the name of this collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the name of this collection"}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the name of this collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the name of this collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the name of this collection"}]}], "name": "getName", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 93, "column": 19, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.getName", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Gets the class of documents stored in this collection.\n <p>\n If you used the simple {@link MongoDatabase#getCollection(String)} to get this collection,\n this is {@link org.bson.Document}.\n </p>", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the class of documents in this collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class of documents in this collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class of documents in this collection"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the class of documents stored in this collection.\n <p>\n If you used the simple ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the class of documents stored in this collection.\n <p>\n If you used the simple "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the class of documents stored in this collection."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "MongoDatabase#getCollection(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoDatabase#getCollection(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoDatabase#getCollection(String)"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.MongoDatabase", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoDatabase", "typeName": "MongoDatabase", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoDatabase", "simpleTypeName": "MongoDatabase", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getCollection(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to get this collection,\n this is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to get this collection,\n this is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to get this collection,\n this is"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "org.bson.Document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "org.bson.Document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "org.bson.Document"}], "label": "", "referencedClassName": "org.bson.Document"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n </p>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n </p>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the class of documents stored in this collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the class of documents stored in this collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the class of documents stored in this collection."}]}], "name": "getDocumentClass", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 106, "column": 29, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.getDocumentClass", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.lang.Class<DocumentT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Gets the codec registry for the MongoCollection.", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the {@link CodecRegistry} for this collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "CodecRegistry", "label": "", "referencedClassName": "CodecRegistry"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for this collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "CodecRegistry", "label": "", "referencedClassName": "CodecRegistry"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for this collection"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the codec registry for the MongoCollection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the codec registry for the MongoCollection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the codec registry for the MongoCollection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the codec registry for the MongoCollection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the codec registry for the MongoCollection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the codec registry for the MongoCollection."}]}], "name": "getCodecRegistry", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 115, "column": 26, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.getCodecRegistry", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "CodecRegistry", "typeName": "CodecRegistry", "qualifiedTypeName": "CodecRegistry", "simpleTypeName": "CodecRegistry", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Creates a new MongoCollection instance with a different default class to cast any\n documents returned from the database into.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz          the default class to which any documents returned from the database\n                       will be cast.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the default class to which any documents returned from the database\n                       will be cast."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz          the default class to which any documents returned from the database\n                       will be cast."}], "parameterName": "clazz", "parameterComment": "the default class to which any documents returned from the database\n                       will be cast.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<NewDocumentT> The type that the new collection will encode documents from and decode\n                       documents to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the new collection will encode documents from and decode\n                       documents to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<NewDocumentT> The type that the new collection will encode documents from and decode\n                       documents to."}], "parameterName": "NewDocumentT", "parameterComment": "The type that the new collection will encode documents from and decode\n                       documents to.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a new MongoCollection instance with the different default class", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new MongoCollection instance with the different default class"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new MongoCollection instance with the different default class"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different default class to cast any\n documents returned from the database into.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different default class to cast any\n documents returned from the database into."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different default class to cast any\n documents returned from the database into."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different default class to cast any\n documents returned from the database into.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different default class to cast any\n documents returned from the database into."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different default class to cast any\n documents returned from the database into."}]}], "name": "withDocumentClass", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 129, "column": 57, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.withDocumentClass", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<NewDocumentT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "NewDocumentT", "typeName": "NewDocumentT", "qualifiedTypeName": "NewDocumentT", "simpleTypeName": "NewDocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "clazz", "typeName": "java.lang.Class<NewDocumentT>", "asString": "java.lang.Class<NewDocumentT> clazz", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz          the default class to which any documents returned from the database\n                       will be cast.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the default class to which any documents returned from the database\n                       will be cast."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz          the default class to which any documents returned from the database\n                       will be cast."}], "parameterName": "clazz", "parameterComment": "the default class to which any documents returned from the database\n                       will be cast.", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<NewDocumentT> The type that the new collection will encode documents from and decode\n                       documents to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The type that the new collection will encode documents from and decode\n                       documents to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<NewDocumentT> The type that the new collection will encode documents from and decode\n                       documents to."}], "parameterName": "NewDocumentT", "parameterComment": "The type that the new collection will encode documents from and decode\n                       documents to.", "isTypeParameter": true}], "signature": "(java.lang.Class<NewDocumentT>)", "flatSignature": "(Class<NewDocumentT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "NewDocumentT", "typeName": "NewDocumentT", "qualifiedTypeName": "NewDocumentT", "simpleTypeName": "NewDocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.MongoCollection<NewDocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "NewDocumentT", "typeName": "NewDocumentT", "qualifiedTypeName": "NewDocumentT", "simpleTypeName": "NewDocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}}, {"commentText": "Creates a new MongoCollection instance with a different codec registry.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "codecRegistry the new {@link CodecRegistry} for the\n                      collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "CodecRegistry", "label": "", "referencedClassName": "CodecRegistry"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the\n                      collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "codecRegistry the new "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "CodecRegistry", "label": "", "referencedClassName": "CodecRegistry"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the\n                      collection."}], "parameterName": "codecRegistry", "parameterComment": "the new {@link CodecRegistry} for the\n                      collection.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a new MongoCollection instance with the different codec registry", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new MongoCollection instance with the different codec registry"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new MongoCollection instance with the different codec registry"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different codec registry.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different codec registry."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different codec registry."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different codec registry.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different codec registry."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a new MongoCollection instance with a different codec registry."}]}], "name": "withCodecRegistry", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 141, "column": 39, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.withCodecRegistry", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "CodecRegistry", "typeName": "CodecRegistry", "qualifiedTypeName": "CodecRegistry", "simpleTypeName": "CodecRegistry", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "codecRegistry", "typeName": "CodecRegistry", "asString": "CodecRegistry codecRegistry", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "codecRegistry the new {@link CodecRegistry} for the\n                      collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "CodecRegistry", "label": "", "referencedClassName": "CodecRegistry"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the\n                      collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "codecRegistry the new "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "CodecRegistry", "label": "", "referencedClassName": "CodecRegistry"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the\n                      collection."}], "parameterName": "codecRegistry", "parameterComment": "the new {@link CodecRegistry} for the\n                      collection.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(CodecRegistry)", "flatSignature": "(CodecRegistry)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}}, {"commentText": "Counts the number of documents in the collection.", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the number of documents in the collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the number of documents in the collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the number of documents in the collection"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection."}]}], "name": "count", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 150, "column": 34, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.count", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<java.lang.Long>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Long", "typeName": "Long", "qualifiedTypeName": "java.lang.Long", "simpleTypeName": "Long", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Counts the number of documents in the collection according to the given options.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the number of documents in the collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the number of documents in the collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the number of documents in the collection"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options."}]}], "name": "count", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 166, "column": 34, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.count", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson)", "flatSignature": "(Bson)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<java.lang.Long>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Long", "typeName": "Long", "qualifiedTypeName": "java.lang.Long", "simpleTypeName": "Long", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Counts the number of documents in the collection according to the given options.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter  the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter  the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options the options describing the count", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the options describing the count"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options the options describing the count"}], "parameterName": "options", "parameterComment": "the options describing the count", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the number of documents in the collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the number of documents in the collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the number of documents in the collection"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Counts the number of documents in the collection according to the given options."}]}], "name": "count", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 183, "column": 34, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.count", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.CountOptions", "typeName": "CountOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.CountOptions", "simpleTypeName": "CountOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "CountOptions", "asString": "CountOptions options", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter  the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter  the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options the options describing the count", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the options describing the count"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options the options describing the count"}], "parameterName": "options", "parameterComment": "the options describing the count", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, io.realm.mongodb.mongo.options.CountOptions)", "flatSignature": "(Bson, CountOptions)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<java.lang.Long>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Long", "typeName": "Long", "qualifiedTypeName": "java.lang.Long", "simpleTypeName": "Long", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection.", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the find one operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "name": "findOne", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 198, "column": 39, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOne", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<DocumentT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type"}], "parameterName": "ResultT", "parameterComment": "the target document type", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the find one operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "name": "findOne", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 215, "column": 47, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOne", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type"}], "parameterName": "ResultT", "parameterComment": "the target document type", "isTypeParameter": true}], "signature": "(java.lang.Class<ResultT>)", "flatSignature": "(Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<ResultT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the find one operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "name": "findOne", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 231, "column": 39, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOne", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson)", "flatSignature": "(Bson)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<DocumentT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the find one operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "name": "findOne", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 249, "column": 47, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOne", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(Bson, java.lang.Class<ResultT>)", "flatSignature": "(Bson, Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<ResultT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter  the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter  the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options a {@link FindOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the find one operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "name": "findOne", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 266, "column": 39, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOne", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOptions", "asString": "FindOptions options", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter  the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter  the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options a {@link FindOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, io.realm.mongodb.mongo.options.FindOptions)", "flatSignature": "(Bson, FindOptions)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<DocumentT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the find one operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the find one operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection."}]}], "name": "findOne", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 285, "column": 47, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOne", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOptions", "asString": "FindOptions options", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(Bson, io.realm.mongodb.mongo.options.FindOptions, java.lang.Class<ResultT>)", "flatSignature": "(Bson, FindOptions, Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<ResultT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds all documents in the collection.\n <p>\n All documents will be delivered in the form of a {@link FindIterable} from which individual\n elements can be extracted.", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "an iterable containing the result of the find operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection.\n <p>\n All documents will be delivered in the form of a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection.\n <p>\n All documents will be delivered in the form of a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindIterable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.FindIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from which individual\n elements can be extracted."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection."}]}], "name": "find", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 305, "column": 36, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.find", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<DocumentT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.MongoIterable<DocumentT>", "typeName": "MongoIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.MongoIterable", "simpleTypeName": "MongoIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}, "interfaceTypes": []}}, {"commentText": "Finds all documents in the collection using {@link FindOptions} to build the query.\n <p>\n All documents will be delivered in the form of a {@link FindIterable} from which individual\n elements can be extracted.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options a {@link FindOptions} struct for building the query", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct for building the query"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct for building the query"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct for building the query", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an iterable containing the result of the find operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection using"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query.\n <p>\n All documents will be delivered in the form of a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query.\n <p>\n All documents will be delivered in the form of a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to build the query."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindIterable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.FindIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from which individual\n elements can be extracted."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection using"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to build the query."}]}], "name": "find", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 318, "column": 36, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.find", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOptions", "asString": "FindOptions options", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options a {@link FindOptions} struct for building the query", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct for building the query"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct for building the query"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct for building the query", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.mongo.options.FindOptions)", "flatSignature": "(FindOptions)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<DocumentT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.MongoIterable<DocumentT>", "typeName": "MongoIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.MongoIterable", "simpleTypeName": "MongoIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}, "interfaceTypes": []}}, {"commentText": "Finds all documents in the collection specifying an output class.\n <p>\n All documents will be delivered in the form of a {@link FindIterable} from which individual\n elements can be extracted.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an iterable containing the result of the find operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class.\n <p>\n All documents will be delivered in the form of a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class.\n <p>\n All documents will be delivered in the form of a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindIterable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.FindIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from which individual\n elements can be extracted."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class."}]}], "name": "find", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 332, "column": 44, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.find", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(java.lang.Class<ResultT>)", "flatSignature": "(Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.MongoIterable<ResultT>", "typeName": "MongoIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.MongoIterable", "simpleTypeName": "MongoIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}, "interfaceTypes": []}}, {"commentText": "Finds all documents in the collection specifying an output class and also using\n {@link FindOptions} to build the query.\n <p>\n All documents will be delivered in the form of a {@link FindIterable} from which individual\n elements can be extracted.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOptions} struct for building the query", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct for building the query"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct for building the query"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct for building the query", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an iterable containing the result of the find operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class and also using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class and also using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class and also using"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query.\n <p>\n All documents will be delivered in the form of a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query.\n <p>\n All documents will be delivered in the form of a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to build the query."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindIterable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.FindIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from which individual\n elements can be extracted."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class and also using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class and also using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection specifying an output class and also using"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to build the query."}]}], "name": "find", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 348, "column": 44, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.find", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOptions", "asString": "FindOptions options", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOptions} struct for building the query", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct for building the query"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct for building the query"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct for building the query", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(java.lang.Class<ResultT>, io.realm.mongodb.mongo.options.FindOptions)", "flatSignature": "(Class<ResultT>, FindOptions)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.MongoIterable<ResultT>", "typeName": "MongoIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.MongoIterable", "simpleTypeName": "MongoIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}, "interfaceTypes": []}}, {"commentText": "Finds all documents in the collection that match the given filter.\n <p>\n All documents will be delivered in the form of a {@link FindIterable} from which individual\n elements can be extracted.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an iterable containing the result of the find operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter.\n <p>\n All documents will be delivered in the form of a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter.\n <p>\n All documents will be delivered in the form of a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindIterable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.FindIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from which individual\n elements can be extracted."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter."}]}], "name": "find", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 362, "column": 36, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.find", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson)", "flatSignature": "(Bson)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<DocumentT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.MongoIterable<DocumentT>", "typeName": "MongoIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.MongoIterable", "simpleTypeName": "MongoIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}, "interfaceTypes": []}}, {"commentText": "Finds all documents in the collection that match the given filter using {@link FindOptions}\n to build the query.\n <p>\n All documents will be delivered in the form of a {@link FindIterable} from which individual\n elements can be extracted.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter  the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter  the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options a {@link FindOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an iterable containing the result of the find operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter using"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n to build the query.\n <p>\n All documents will be delivered in the form of a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n to build the query.\n <p>\n All documents will be delivered in the form of a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to build the query."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindIterable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.FindIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from which individual\n elements can be extracted."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter using"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n to build the query.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n to build the query."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to build the query."}]}], "name": "find", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 377, "column": 36, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.find", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOptions", "asString": "FindOptions options", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter  the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter  the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options a {@link FindOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, io.realm.mongodb.mongo.options.FindOptions)", "flatSignature": "(Bson, FindOptions)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<DocumentT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.MongoIterable<DocumentT>", "typeName": "MongoIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.MongoIterable", "simpleTypeName": "MongoIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}, "interfaceTypes": []}}, {"commentText": "Finds all documents in the collection that match the given filter specifying an output class.\n <p>\n All documents will be delivered in the form of a {@link FindIterable} from which individual\n elements can be extracted.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an iterable containing the result of the find operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class.\n <p>\n All documents will be delivered in the form of a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class.\n <p>\n All documents will be delivered in the form of a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindIterable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.FindIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from which individual\n elements can be extracted."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class."}]}], "name": "find", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 392, "column": 44, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.find", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(Bson, java.lang.Class<ResultT>)", "flatSignature": "(Bson, Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.MongoIterable<ResultT>", "typeName": "MongoIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.MongoIterable", "simpleTypeName": "MongoIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}, "interfaceTypes": []}}, {"commentText": "Finds all documents in the collection that match the given filter specifying an output class\n and also using {@link FindOptions} to build the query.\n <p>\n All documents will be delivered in the form of a {@link FindIterable} from which individual\n elements can be extracted.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an iterable containing the result of the find operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an iterable containing the result of the find operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class\n and also using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class\n and also using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class\n and also using"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query.\n <p>\n All documents will be delivered in the form of a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query.\n <p>\n All documents will be delivered in the form of a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to build the query."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindIterable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindIterable"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.FindIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which individual\n elements can be extracted."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from which individual\n elements can be extracted."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class\n and also using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class\n and also using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds all documents in the collection that match the given filter specifying an output class\n and also using"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FindOptions"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to build the query."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to build the query."}]}], "name": "find", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 410, "column": 44, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.find", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOptions", "asString": "FindOptions options", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOptions", "typeName": "FindOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOptions", "simpleTypeName": "FindOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOptions} struct", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(Bson, java.lang.Class<ResultT>, io.realm.mongodb.mongo.options.FindOptions)", "flatSignature": "(Bson, Class<ResultT>, FindOptions)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.FindIterable<ResultT>", "typeName": "FindIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.FindIterable", "simpleTypeName": "FindIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.MongoIterable<ResultT>", "typeName": "MongoIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.MongoIterable", "simpleTypeName": "MongoIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}, "interfaceTypes": []}}, {"commentText": "Aggregates documents according to the specified aggregation pipeline.\n <p>\n All documents will be delivered in the form of an {@link AggregateIterable} from which\n individual elements can be extracted.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "pipeline the aggregation pipeline", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the aggregation pipeline"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "pipeline the aggregation pipeline"}], "parameterName": "pipeline", "parameterComment": "the aggregation pipeline", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an {@link AggregateIterable} from which the results can be extracted", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "AggregateIterable", "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.AggregateIterable<ResultT>", "typeName": "AggregateIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "simpleTypeName": "AggregateIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which the results can be extracted"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "AggregateIterable", "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.AggregateIterable<ResultT>", "typeName": "AggregateIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "simpleTypeName": "AggregateIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which the results can be extracted"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline.\n <p>\n All documents will be delivered in the form of an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline.\n <p>\n All documents will be delivered in the form of an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "AggregateIterable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AggregateIterable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AggregateIterable"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.AggregateIterable<ResultT>", "typeName": "AggregateIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "simpleTypeName": "AggregateIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which\n individual elements can be extracted.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which\n individual elements can be extracted."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from which\n individual elements can be extracted."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline."}]}], "name": "aggregate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 425, "column": 41, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.aggregate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.util.List<? extends Bson>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends Bson", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "ClassDoc", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superBounds": []}], "interfaceTypes": [{"_class": "ParameterizedType", "asString": "java.util.Collection<? extends Bson>", "typeName": "Collection", "qualifiedTypeName": "java.util.Collection", "simpleTypeName": "Collection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends Bson", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "ClassDoc", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superBounds": []}], "interfaceTypes": [{"_class": "ParameterizedType", "asString": "java.lang.Iterable<? extends Bson>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends Bson", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "ClassDoc", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superBounds": []}], "interfaceTypes": []}]}]}, "name": "pipeline", "typeName": "java.util.List<? extends Bson>", "asString": "java.util.List<? extends Bson> pipeline", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "pipeline the aggregation pipeline", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the aggregation pipeline"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "pipeline the aggregation pipeline"}], "parameterName": "pipeline", "parameterComment": "the aggregation pipeline", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.util.List<? extends Bson>)", "flatSignature": "(List<? extends Bson>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.AggregateIterable<DocumentT>", "typeName": "AggregateIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "simpleTypeName": "AggregateIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.MongoIterable<DocumentT>", "typeName": "MongoIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.MongoIterable", "simpleTypeName": "MongoIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}, "interfaceTypes": []}}, {"commentText": "Aggregates documents according to the specified aggregation pipeline specifying an output\n class.\n <p>\n All documents will be delivered in the form of an {@link AggregateIterable} from which\n individual elements can be extracted.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "pipeline    the aggregation pipeline", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the aggregation pipeline"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "pipeline    the aggregation pipeline"}], "parameterName": "pipeline", "parameterComment": "the aggregation pipeline", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an {@link AggregateIterable} from which the results can be extracted", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "AggregateIterable", "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.AggregateIterable<ResultT>", "typeName": "AggregateIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "simpleTypeName": "AggregateIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which the results can be extracted"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "AggregateIterable", "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.AggregateIterable<ResultT>", "typeName": "AggregateIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "simpleTypeName": "AggregateIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which the results can be extracted"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline specifying an output\n class.\n <p>\n All documents will be delivered in the form of an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline specifying an output\n class.\n <p>\n All documents will be delivered in the form of an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline specifying an output\n class."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "AggregateIterable", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AggregateIterable"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AggregateIterable"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.iterable.AggregateIterable<ResultT>", "typeName": "AggregateIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "simpleTypeName": "AggregateIterable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which\n individual elements can be extracted.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " from which\n individual elements can be extracted."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from which\n individual elements can be extracted."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline specifying an output\n class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline specifying an output\n class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Aggregates documents according to the specified aggregation pipeline specifying an output\n class."}]}], "name": "aggregate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 441, "column": 49, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.aggregate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.util.List<? extends Bson>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends Bson", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "ClassDoc", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superBounds": []}], "interfaceTypes": [{"_class": "ParameterizedType", "asString": "java.util.Collection<? extends Bson>", "typeName": "Collection", "qualifiedTypeName": "java.util.Collection", "simpleTypeName": "Collection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends Bson", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "ClassDoc", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superBounds": []}], "interfaceTypes": [{"_class": "ParameterizedType", "asString": "java.lang.Iterable<? extends Bson>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends Bson", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "ClassDoc", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superBounds": []}], "interfaceTypes": []}]}]}, "name": "pipeline", "typeName": "java.util.List<? extends Bson>", "asString": "java.util.List<? extends Bson> pipeline", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "pipeline    the aggregation pipeline", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the aggregation pipeline"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "pipeline    the aggregation pipeline"}], "parameterName": "pipeline", "parameterComment": "the aggregation pipeline", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(java.util.List<? extends Bson>, java.lang.Class<ResultT>)", "flatSignature": "(List<? extends Bson>, Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.AggregateIterable<ResultT>", "typeName": "AggregateIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.AggregateIterable", "simpleTypeName": "AggregateIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.mongo.iterable.MongoIterable<ResultT>", "typeName": "MongoIterable", "qualifiedTypeName": "io.realm.mongodb.mongo.iterable.MongoIterable", "simpleTypeName": "MongoIterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}, "interfaceTypes": []}}, {"commentText": "Inserts the provided document. If the document is missing an identifier, the client should\n generate one.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "document the document to insert", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the document to insert"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "document the document to insert"}], "parameterName": "document", "parameterComment": "the document to insert", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the insert one operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the insert one operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the insert one operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the provided document. If the document is missing an identifier, the client should\n generate one.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the provided document. If the document is missing an identifier, the client should\n generate one."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the provided document."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the provided document.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the provided document."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the provided document."}]}], "name": "insertOne", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 453, "column": 45, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.insertOne", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "name": "document", "typeName": "DocumentT", "asString": "DocumentT document", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "document the document to insert", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the document to insert"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "document the document to insert"}], "parameterName": "document", "parameterComment": "the document to insert", "isTypeParameter": false}], "typeParamTags": [], "signature": "(DocumentT)", "flatSignature": "(DocumentT)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<io.realm.mongodb.mongo.result.InsertOneResult>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.result.InsertOneResult", "typeName": "InsertOneResult", "qualifiedTypeName": "io.realm.mongodb.mongo.result.InsertOneResult", "simpleTypeName": "InsertOneResult", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Inserts one or more documents.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "documents the documents to insert", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the documents to insert"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "documents the documents to insert"}], "parameterName": "documents", "parameterComment": "the documents to insert", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the insert many operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the insert many operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the insert many operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts one or more documents.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts one or more documents."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts one or more documents."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts one or more documents.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts one or more documents."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts one or more documents."}]}], "name": "insertMany", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 469, "column": 46, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.insertMany", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.util.List<? extends DocumentT>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends DocumentT", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superBounds": []}], "interfaceTypes": [{"_class": "ParameterizedType", "asString": "java.util.Collection<? extends DocumentT>", "typeName": "Collection", "qualifiedTypeName": "java.util.Collection", "simpleTypeName": "Collection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends DocumentT", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superBounds": []}], "interfaceTypes": [{"_class": "ParameterizedType", "asString": "java.lang.Iterable<? extends DocumentT>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends DocumentT", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superBounds": []}], "interfaceTypes": []}]}]}, "name": "documents", "typeName": "java.util.List<? extends DocumentT>", "asString": "java.util.List<? extends DocumentT> documents", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "documents the documents to insert", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the documents to insert"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "documents the documents to insert"}], "parameterName": "documents", "parameterComment": "the documents to insert", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.util.List<? extends DocumentT>)", "flatSignature": "(List<? extends DocumentT>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<io.realm.mongodb.mongo.options.InsertManyResult>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.InsertManyResult", "typeName": "InsertManyResult", "qualifiedTypeName": "io.realm.mongodb.mongo.options.InsertManyResult", "simpleTypeName": "InsertManyResult", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Removes at most one document from the collection that matches the given filter.  If no\n documents match, the collection is not\n modified.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter to apply the the delete operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter to apply the the delete operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter to apply the the delete operation"}], "parameterName": "filter", "parameterComment": "the query filter to apply the the delete operation", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the remove one operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the remove one operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the remove one operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes at most one document from the collection that matches the given filter.  If no\n documents match, the collection is not\n modified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes at most one document from the collection that matches the given filter.  If no\n documents match, the collection is not\n modified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes at most one document from the collection that matches the given filter."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes at most one document from the collection that matches the given filter.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes at most one document from the collection that matches the given filter."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes at most one document from the collection that matches the given filter."}]}], "name": "deleteOne", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 487, "column": 42, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.deleteOne", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter to apply the the delete operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter to apply the the delete operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter to apply the the delete operation"}], "parameterName": "filter", "parameterComment": "the query filter to apply the the delete operation", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson)", "flatSignature": "(Bson)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<io.realm.mongodb.mongo.result.DeleteResult>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.result.DeleteResult", "typeName": "DeleteResult", "qualifiedTypeName": "io.realm.mongodb.mongo.result.DeleteResult", "simpleTypeName": "DeleteResult", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Removes all documents from the collection that match the given query filter.  If no documents\n match, the collection is not modified.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter to apply the the delete operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter to apply the the delete operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter to apply the the delete operation"}], "parameterName": "filter", "parameterComment": "the query filter to apply the the delete operation", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the remove many operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the remove many operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the remove many operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all documents from the collection that match the given query filter.  If no documents\n match, the collection is not modified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all documents from the collection that match the given query filter.  If no documents\n match, the collection is not modified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all documents from the collection that match the given query filter."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all documents from the collection that match the given query filter.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all documents from the collection that match the given query filter."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all documents from the collection that match the given query filter."}]}], "name": "deleteMany", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 504, "column": 42, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.deleteMany", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter to apply the the delete operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter to apply the the delete operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter to apply the the delete operation"}], "parameterName": "filter", "parameterComment": "the query filter to apply the the delete operation", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson)", "flatSignature": "(Bson)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<io.realm.mongodb.mongo.result.DeleteResult>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.result.DeleteResult", "typeName": "DeleteResult", "qualifiedTypeName": "io.realm.mongodb.mongo.result.DeleteResult", "simpleTypeName": "DeleteResult", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Update a single document in the collection according to the specified arguments.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter a document describing the query filter, which may not be null.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the query filter, which may not be null."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter a document describing the query filter, which may not be null."}], "parameterName": "filter", "parameterComment": "a document describing the query filter, which may not be null.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update a document describing the update, which may not be null. The update to\n               apply must include only update operators.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the update, which may not be null. The update to\n               apply must include only update operators."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update a document describing the update, which may not be null."}], "parameterName": "update", "parameterComment": "a document describing the update, which may not be null. The update to\n               apply must include only update operators.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the update one operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the update one operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the update one operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments."}]}], "name": "updateOne", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 522, "column": 42, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.updateOne", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "update", "typeName": "Bson", "asString": "Bson update", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter a document describing the query filter, which may not be null.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the query filter, which may not be null."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter a document describing the query filter, which may not be null."}], "parameterName": "filter", "parameterComment": "a document describing the query filter, which may not be null.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update a document describing the update, which may not be null. The update to\n               apply must include only update operators.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the update, which may not be null. The update to\n               apply must include only update operators."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update a document describing the update, which may not be null."}], "parameterName": "update", "parameterComment": "a document describing the update, which may not be null. The update to\n               apply must include only update operators.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, Bson)", "flatSignature": "(Bson, Bson)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<io.realm.mongodb.mongo.result.UpdateResult>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.result.UpdateResult", "typeName": "UpdateResult", "qualifiedTypeName": "io.realm.mongodb.mongo.result.UpdateResult", "simpleTypeName": "UpdateResult", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Update a single document in the collection according to the specified arguments.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter        a document describing the query filter, which may not be null.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the query filter, which may not be null."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter        a document describing the query filter, which may not be null."}], "parameterName": "filter", "parameterComment": "a document describing the query filter, which may not be null.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update        a document describing the update, which may not be null. The update to\n                      apply must include only update operators.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the update, which may not be null. The update to\n                      apply must include only update operators."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update        a document describing the update, which may not be null."}], "parameterName": "update", "parameterComment": "a document describing the update, which may not be null. The update to\n                      apply must include only update operators.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "updateOptions the options to apply to the update operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the options to apply to the update operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "updateOptions the options to apply to the update operation"}], "parameterName": "updateOptions", "parameterComment": "the options to apply to the update operation", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the update one operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the update one operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the update one operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update a single document in the collection according to the specified arguments."}]}], "name": "updateOne", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 541, "column": 42, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.updateOne", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "update", "typeName": "Bson", "asString": "Bson update", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.UpdateOptions", "typeName": "UpdateOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.UpdateOptions", "simpleTypeName": "UpdateOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "updateOptions", "typeName": "UpdateOptions", "asString": "UpdateOptions updateOptions", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter        a document describing the query filter, which may not be null.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the query filter, which may not be null."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter        a document describing the query filter, which may not be null."}], "parameterName": "filter", "parameterComment": "a document describing the query filter, which may not be null.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update        a document describing the update, which may not be null. The update to\n                      apply must include only update operators.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the update, which may not be null. The update to\n                      apply must include only update operators."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update        a document describing the update, which may not be null."}], "parameterName": "update", "parameterComment": "a document describing the update, which may not be null. The update to\n                      apply must include only update operators.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "updateOptions the options to apply to the update operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the options to apply to the update operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "updateOptions the options to apply to the update operation"}], "parameterName": "updateOptions", "parameterComment": "the options to apply to the update operation", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, Bson, io.realm.mongodb.mongo.options.UpdateOptions)", "flatSignature": "(Bson, Bson, UpdateOptions)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<io.realm.mongodb.mongo.result.UpdateResult>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.result.UpdateResult", "typeName": "UpdateResult", "qualifiedTypeName": "io.realm.mongodb.mongo.result.UpdateResult", "simpleTypeName": "UpdateResult", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Update all documents in the collection according to the specified arguments.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter a document describing the query filter, which may not be null.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the query filter, which may not be null."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter a document describing the query filter, which may not be null."}], "parameterName": "filter", "parameterComment": "a document describing the query filter, which may not be null.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update a document describing the update, which may not be null. The update to\n               apply must include only update operators.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the update, which may not be null. The update to\n               apply must include only update operators."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update a document describing the update, which may not be null."}], "parameterName": "update", "parameterComment": "a document describing the update, which may not be null. The update to\n               apply must include only update operators.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the update many operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the update many operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the update many operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments."}]}], "name": "updateMany", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 562, "column": 42, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.updateMany", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "update", "typeName": "Bson", "asString": "Bson update", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter a document describing the query filter, which may not be null.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the query filter, which may not be null."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter a document describing the query filter, which may not be null."}], "parameterName": "filter", "parameterComment": "a document describing the query filter, which may not be null.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update a document describing the update, which may not be null. The update to\n               apply must include only update operators.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the update, which may not be null. The update to\n               apply must include only update operators."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update a document describing the update, which may not be null."}], "parameterName": "update", "parameterComment": "a document describing the update, which may not be null. The update to\n               apply must include only update operators.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, Bson)", "flatSignature": "(Bson, Bson)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<io.realm.mongodb.mongo.result.UpdateResult>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.result.UpdateResult", "typeName": "UpdateResult", "qualifiedTypeName": "io.realm.mongodb.mongo.result.UpdateResult", "simpleTypeName": "UpdateResult", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Update all documents in the collection according to the specified arguments.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter        a document describing the query filter, which may not be null.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the query filter, which may not be null."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter        a document describing the query filter, which may not be null."}], "parameterName": "filter", "parameterComment": "a document describing the query filter, which may not be null.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update        a document describing the update, which may not be null. The update to\n                      apply must include only update operators.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the update, which may not be null. The update to\n                      apply must include only update operators."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update        a document describing the update, which may not be null."}], "parameterName": "update", "parameterComment": "a document describing the update, which may not be null. The update to\n                      apply must include only update operators.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "updateOptions the options to apply to the update operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the options to apply to the update operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "updateOptions the options to apply to the update operation"}], "parameterName": "updateOptions", "parameterComment": "the options to apply to the update operation", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the result of the update many operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the update many operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the result of the update many operation"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Update all documents in the collection according to the specified arguments."}]}], "name": "updateMany", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 581, "column": 42, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.updateMany", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "update", "typeName": "Bson", "asString": "Bson update", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.UpdateOptions", "typeName": "UpdateOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.UpdateOptions", "simpleTypeName": "UpdateOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "updateOptions", "typeName": "UpdateOptions", "asString": "UpdateOptions updateOptions", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter        a document describing the query filter, which may not be null.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the query filter, which may not be null."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter        a document describing the query filter, which may not be null."}], "parameterName": "filter", "parameterComment": "a document describing the query filter, which may not be null.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update        a document describing the update, which may not be null. The update to\n                      apply must include only update operators.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a document describing the update, which may not be null. The update to\n                      apply must include only update operators."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update        a document describing the update, which may not be null."}], "parameterName": "update", "parameterComment": "a document describing the update, which may not be null. The update to\n                      apply must include only update operators.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "updateOptions the options to apply to the update operation", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the options to apply to the update operation"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "updateOptions the options to apply to the update operation"}], "parameterName": "updateOptions", "parameterComment": "the options to apply to the update operation", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, Bson, io.realm.mongodb.mongo.options.UpdateOptions)", "flatSignature": "(Bson, Bson, UpdateOptions)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<io.realm.mongodb.mongo.result.UpdateResult>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.result.UpdateResult", "typeName": "UpdateResult", "qualifiedTypeName": "io.realm.mongodb.mongo.result.UpdateResult", "simpleTypeName": "UpdateResult", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and performs the given update.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update the update document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the update document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update the update document"}], "parameterName": "update", "parameterComment": "the update document", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}]}], "name": "findOneAndUpdate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 601, "column": 39, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndUpdate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "update", "typeName": "Bson", "asString": "Bson update", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update the update document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the update document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update the update document"}], "parameterName": "update", "parameterComment": "the update document", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, Bson)", "flatSignature": "(Bson, Bson)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<DocumentT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and performs the given update.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update      the update document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the update document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update      the update document"}], "parameterName": "update", "parameterComment": "the update document", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}]}], "name": "findOneAndUpdate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 620, "column": 47, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndUpdate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "update", "typeName": "Bson", "asString": "Bson update", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update      the update document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the update document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update      the update document"}], "parameterName": "update", "parameterComment": "the update document", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(Bson, Bson, java.lang.Class<ResultT>)", "flatSignature": "(Bson, Bson, Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<ResultT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and performs the given update.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter  the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter  the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update  the update document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the update document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update  the update document"}], "parameterName": "update", "parameterComment": "the update document", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}]}], "name": "findOneAndUpdate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 640, "column": 39, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndUpdate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "update", "typeName": "Bson", "asString": "Bson update", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOneAndModifyOptions", "asString": "FindOneAndModifyOptions options", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter  the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter  the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update  the update document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the update document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update  the update document"}], "parameterName": "update", "parameterComment": "the update document", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, Bson, io.realm.mongodb.mongo.options.FindOneAndModifyOptions)", "flatSignature": "(Bson, Bson, FindOneAndModifyOptions)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<DocumentT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and performs the given update.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update      the update document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the update document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update      the update document"}], "parameterName": "update", "parameterComment": "the update document", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and performs the given update."}]}], "name": "findOneAndUpdate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 662, "column": 47, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndUpdate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "update", "typeName": "Bson", "asString": "Bson update", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOneAndModifyOptions", "asString": "FindOneAndModifyOptions options", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "update      the update document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the update document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "update      the update document"}], "parameterName": "update", "parameterComment": "the update document", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(Bson, Bson, io.realm.mongodb.mongo.options.FindOneAndModifyOptions, java.lang.Class<ResultT>)", "flatSignature": "(Bson, Bson, FindOneAndModifyOptions, Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<ResultT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and replaces it with the given document.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "replacement the document to replace the matched document with", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the document to replace the matched document with"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "replacement the document to replace the matched document with"}], "parameterName": "replacement", "parameterComment": "the document to replace the matched document with", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}]}], "name": "findOneAndReplace", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 682, "column": 39, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndReplace", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "replacement", "typeName": "Bson", "asString": "Bson replacement", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "replacement the document to replace the matched document with", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the document to replace the matched document with"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "replacement the document to replace the matched document with"}], "parameterName": "replacement", "parameterComment": "the document to replace the matched document with", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, Bson)", "flatSignature": "(Bson, Bson)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<DocumentT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and replaces it with the given document.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "replacement the document to replace the matched document with", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the document to replace the matched document with"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "replacement the document to replace the matched document with"}], "parameterName": "replacement", "parameterComment": "the document to replace the matched document with", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}]}], "name": "findOneAndReplace", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 701, "column": 47, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndReplace", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "replacement", "typeName": "Bson", "asString": "Bson replacement", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "replacement the document to replace the matched document with", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the document to replace the matched document with"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "replacement the document to replace the matched document with"}], "parameterName": "replacement", "parameterComment": "the document to replace the matched document with", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(Bson, Bson, java.lang.Class<ResultT>)", "flatSignature": "(Bson, Bson, Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<ResultT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and replaces it with the given document.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "replacement the document to replace the matched document with", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the document to replace the matched document with"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "replacement the document to replace the matched document with"}], "parameterName": "replacement", "parameterComment": "the document to replace the matched document with", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}]}], "name": "findOneAndReplace", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 721, "column": 39, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndReplace", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "replacement", "typeName": "Bson", "asString": "Bson replacement", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOneAndModifyOptions", "asString": "FindOneAndModifyOptions options", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "replacement the document to replace the matched document with", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the document to replace the matched document with"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "replacement the document to replace the matched document with"}], "parameterName": "replacement", "parameterComment": "the document to replace the matched document with", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, Bson, io.realm.mongodb.mongo.options.FindOneAndModifyOptions)", "flatSignature": "(Bson, Bson, FindOneAndModifyOptions)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<DocumentT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and replaces it with the given document.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "replacement the document to replace the matched document with", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the document to replace the matched document with"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "replacement the document to replace the matched document with"}], "parameterName": "replacement", "parameterComment": "the document to replace the matched document with", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and replaces it with the given document."}]}], "name": "findOneAndReplace", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 743, "column": 47, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndReplace", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "replacement", "typeName": "Bson", "asString": "Bson replacement", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOneAndModifyOptions", "asString": "FindOneAndModifyOptions options", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "replacement the document to replace the matched document with", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the document to replace the matched document with"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "replacement the document to replace the matched document with"}], "parameterName": "replacement", "parameterComment": "the document to replace the matched document with", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(Bson, Bson, io.realm.mongodb.mongo.options.FindOneAndModifyOptions, java.lang.Class<ResultT>)", "flatSignature": "(Bson, Bson, FindOneAndModifyOptions, Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<ResultT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and delete it.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}]}], "name": "findOneAndDelete", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 762, "column": 39, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndDelete", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson)", "flatSignature": "(Bson)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<DocumentT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and delete it.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}]}], "name": "findOneAndDelete", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 780, "column": 47, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndDelete", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(Bson, java.lang.Class<ResultT>)", "flatSignature": "(Bson, Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<ResultT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and delete it.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter  the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter  the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}]}], "name": "findOneAndDelete", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 798, "column": 39, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndDelete", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOneAndModifyOptions", "asString": "FindOneAndModifyOptions options", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter  the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter  the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Bson, io.realm.mongodb.mongo.options.FindOneAndModifyOptions)", "flatSignature": "(Bson, FindOneAndModifyOptions)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<DocumentT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Finds a document in the collection and delete it.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task containing the resulting document", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task containing the resulting document"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds a document in the collection and delete it."}]}], "name": "findOneAndDelete", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 818, "column": 47, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.findOneAndDelete", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Bson", "typeName": "Bson", "qualifiedTypeName": "Bson", "simpleTypeName": "Bson", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "filter", "typeName": "Bson", "asString": "Bson filter", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "options", "typeName": "FindOneAndModifyOptions", "asString": "FindOneAndModifyOptions options", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<ResultT>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "java.io.Serializable", "typeName": "Serializable", "qualifiedTypeName": "java.io.Serializable", "simpleTypeName": "Serializable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.GenericDeclaration", "typeName": "GenericDeclaration", "qualifiedTypeName": "java.lang.reflect.GenericDeclaration", "simpleTypeName": "GenericDeclaration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.Type", "typeName": "Type", "qualifiedTypeName": "java.lang.reflect.Type", "simpleTypeName": "Type", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.reflect.AnnotatedElement", "typeName": "AnnotatedElement", "qualifiedTypeName": "java.lang.reflect.AnnotatedElement", "simpleTypeName": "AnnotatedElement", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}, "name": "resultClass", "typeName": "java.lang.Class<ResultT>", "asString": "java.lang.Class<ResultT> resultClass", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "filter      the query filter", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the query filter"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "filter      the query filter"}], "parameterName": "filter", "parameterComment": "the query filter", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "options     a {@link FindOneAndModifyOptions} struct", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "options     a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FindOneAndModifyOptions", "label": "", "referencedClassName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "typeName": "FindOneAndModifyOptions", "qualifiedTypeName": "io.realm.mongodb.mongo.options.FindOneAndModifyOptions", "simpleTypeName": "FindOneAndModifyOptions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " struct"}], "parameterName": "options", "parameterComment": "a {@link FindOneAndModifyOptions} struct", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "resultClass the class to decode each document into", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class to decode each document into"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "resultClass the class to decode each document into"}], "parameterName": "resultClass", "parameterComment": "the class to decode each document into", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<ResultT>   the target document type of the iterable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the target document type of the iterable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<ResultT>   the target document type of the iterable."}], "parameterName": "ResultT", "parameterComment": "the target document type of the iterable.", "isTypeParameter": true}], "signature": "(Bson, io.realm.mongodb.mongo.options.FindOneAndModifyOptions, java.lang.Class<ResultT>)", "flatSignature": "(Bson, FindOneAndModifyOptions, Class<ResultT>)", "typeParameters": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmResultTask<ResultT>", "typeName": "RealmResultTask", "qualifiedTypeName": "io.realm.mongodb.RealmResultTask", "simpleTypeName": "RealmResultTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "ResultT", "typeName": "ResultT", "qualifiedTypeName": "ResultT", "simpleTypeName": "ResultT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Watches a collection. The resulting stream will be notified of all events on this collection\n that the active user is authorized to see based on the configured MongoDB Realm rules.", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task that provides access to the stream of change events.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection. The resulting stream will be notified of all events on this collection\n that the active user is authorized to see based on the configured MongoDB Realm rules.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection. The resulting stream will be notified of all events on this collection\n that the active user is authorized to see based on the configured MongoDB Realm rules."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection."}]}], "name": "watch", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 836, "column": 44, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.watch", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmEventStreamTask<DocumentT>", "typeName": "RealmEventStreamTask", "qualifiedTypeName": "io.realm.mongodb.RealmEventStreamTask", "simpleTypeName": "RealmEventStreamTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Watches specified IDs in a collection.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "ids the ids to watch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the ids to watch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ids the ids to watch."}], "parameterName": "ids", "parameterComment": "the ids to watch.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task that provides access to the stream of change events.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection."}]}], "name": "watch", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 852, "column": 44, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.watch", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "Type", "asString": "BsonValue[]", "typeName": "BsonValue", "qualifiedTypeName": "BsonValue", "simpleTypeName": "BsonValue", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "BsonValue", "typeName": "BsonValue", "qualifiedTypeName": "BsonValue", "simpleTypeName": "BsonValue", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "ids", "typeName": "BsonValue[]", "asString": "BsonValue[] ids", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "ids the ids to watch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the ids to watch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ids the ids to watch."}], "parameterName": "ids", "parameterComment": "the ids to watch.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(BsonValue...)", "flatSignature": "(BsonValue...)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmEventStreamTask<DocumentT>", "typeName": "RealmEventStreamTask", "qualifiedTypeName": "io.realm.mongodb.RealmEventStreamTask", "simpleTypeName": "RealmEventStreamTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Watches specified IDs in a collection. This convenience overload supports the use case\n of non-{@link BsonValue} instances of {@link ObjectId} by wrapping them in\n {@link BsonObjectId} instances for the user.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "ids unique object identifiers of the IDs to watch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "unique object identifiers of the IDs to watch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ids unique object identifiers of the IDs to watch."}], "parameterName": "ids", "parameterComment": "unique object identifiers of the IDs to watch.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task that provides access to the stream of change events.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection. This convenience overload supports the use case\n of non-", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection. This convenience overload supports the use case\n of non-"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "BsonValue", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonValue"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonValue"}], "label": "", "referencedClassName": "BsonValue"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instances of"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ObjectId", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}], "label": "", "referencedClassName": "ObjectId"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " by wrapping them in\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " by wrapping them in\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "by wrapping them in"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "BsonObjectId", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonObjectId"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonObjectId"}], "label": "", "referencedClassName": "BsonObjectId"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances for the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances for the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instances for the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection."}]}], "name": "watch", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 870, "column": 44, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.watch", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "Type", "asString": "ObjectId[]", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "ids", "typeName": "ObjectId[]", "asString": "ObjectId[] ids", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "ids unique object identifiers of the IDs to watch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "unique object identifiers of the IDs to watch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ids unique object identifiers of the IDs to watch."}], "parameterName": "ids", "parameterComment": "unique object identifiers of the IDs to watch.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(ObjectId...)", "flatSignature": "(ObjectId...)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmEventStreamTask<DocumentT>", "typeName": "RealmEventStreamTask", "qualifiedTypeName": "io.realm.mongodb.RealmEventStreamTask", "simpleTypeName": "RealmEventStreamTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Watches a collection. The provided document will be used as a match expression filter on\n the change events coming from the stream. This convenience overload supports the use of\n non-{@link BsonDocument} instances for the user.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "matchFilter the $match filter to apply to incoming change events", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the $match filter to apply to incoming change events"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "matchFilter the $match filter to apply to incoming change events"}], "parameterName": "matchFilter", "parameterComment": "the $match filter to apply to incoming change events", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task that provides access to the stream of change events.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection. The provided document will be used as a match expression filter on\n the change events coming from the stream. This convenience overload supports the use of\n non-", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection. The provided document will be used as a match expression filter on\n the change events coming from the stream. This convenience overload supports the use of\n non-"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "BsonDocument", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonDocument"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonDocument"}], "label": "", "referencedClassName": "BsonDocument"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances for the user.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances for the user.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instances for the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection."}]}], "name": "watchWithFilter", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 893, "column": 44, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.watchWithFilter", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Document", "typeName": "Document", "qualifiedTypeName": "Document", "simpleTypeName": "Document", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "matchFilter", "typeName": "Document", "asString": "Document matchFilter", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "matchFilter the $match filter to apply to incoming change events", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the $match filter to apply to incoming change events"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "matchFilter the $match filter to apply to incoming change events"}], "parameterName": "matchFilter", "parameterComment": "the $match filter to apply to incoming change events", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Document)", "flatSignature": "(Document)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmEventStreamTask<DocumentT>", "typeName": "RealmEventStreamTask", "qualifiedTypeName": "io.realm.mongodb.RealmEventStreamTask", "simpleTypeName": "RealmEventStreamTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Watches a collection. The provided BSON document will be used as a match expression filter on\n the change events coming from the stream.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "matchFilter the $match filter to apply to incoming change events", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the $match filter to apply to incoming change events"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "matchFilter the $match filter to apply to incoming change events"}], "parameterName": "matchFilter", "parameterComment": "the $match filter to apply to incoming change events", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task that provides access to the stream of change events.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection. The provided BSON document will be used as a match expression filter on\n the change events coming from the stream.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection. The provided BSON document will be used as a match expression filter on\n the change events coming from the stream.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection."}]}], "name": "watchWithFilter", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 915, "column": 44, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.watchWithFilter", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "BsonDocument", "typeName": "BsonDocument", "qualifiedTypeName": "BsonDocument", "simpleTypeName": "BsonDocument", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "matchFilter", "typeName": "BsonDocument", "asString": "BsonDocument matchFilter", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "matchFilter the $match filter to apply to incoming change events", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the $match filter to apply to incoming change events"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "matchFilter the $match filter to apply to incoming change events"}], "parameterName": "matchFilter", "parameterComment": "the $match filter to apply to incoming change events", "isTypeParameter": false}], "typeParamTags": [], "signature": "(BsonDocument)", "flatSignature": "(BsonDocument)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmEventStreamTask<DocumentT>", "typeName": "RealmEventStreamTask", "qualifiedTypeName": "io.realm.mongodb.RealmEventStreamTask", "simpleTypeName": "RealmEventStreamTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Watches a collection asynchronously. The resulting stream will be notified of all events on this collection\n that the active user is authorized to see based on the configured MongoDB Realm rules.", "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task that provides access to the stream of change events.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously. The resulting stream will be notified of all events on this collection\n that the active user is authorized to see based on the configured MongoDB Realm rules.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously. The resulting stream will be notified of all events on this collection\n that the active user is authorized to see based on the configured MongoDB Realm rules."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously."}]}], "name": "watchAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 931, "column": 49, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.watchAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmEventStreamAsyncTask<DocumentT>", "typeName": "RealmEventStreamAsyncTask", "qualifiedTypeName": "io.realm.mongodb.RealmEventStreamAsyncTask", "simpleTypeName": "RealmEventStreamAsyncTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Watches specified IDs in a collection asynchronously.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "ids the ids to watch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the ids to watch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ids the ids to watch."}], "parameterName": "ids", "parameterComment": "the ids to watch.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task that provides access to the stream of change events.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously."}]}], "name": "watchAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 947, "column": 49, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.watchAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "Type", "asString": "BsonValue[]", "typeName": "BsonValue", "qualifiedTypeName": "BsonValue", "simpleTypeName": "BsonValue", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "BsonValue", "typeName": "BsonValue", "qualifiedTypeName": "BsonValue", "simpleTypeName": "BsonValue", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "ids", "typeName": "BsonValue[]", "asString": "BsonValue[] ids", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "ids the ids to watch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the ids to watch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ids the ids to watch."}], "parameterName": "ids", "parameterComment": "the ids to watch.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(BsonValue...)", "flatSignature": "(BsonValue...)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmEventStreamAsyncTask<DocumentT>", "typeName": "RealmEventStreamAsyncTask", "qualifiedTypeName": "io.realm.mongodb.RealmEventStreamAsyncTask", "simpleTypeName": "RealmEventStreamAsyncTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Watches specified IDs in a collection asynchronously. This convenience overload supports the use case\n of non-{@link BsonValue} instances of {@link ObjectId} by wrapping them in\n {@link BsonObjectId} instances for the user.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "ids unique object identifiers of the IDs to watch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "unique object identifiers of the IDs to watch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ids unique object identifiers of the IDs to watch."}], "parameterName": "ids", "parameterComment": "unique object identifiers of the IDs to watch.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task that provides access to the stream of change events.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously. This convenience overload supports the use case\n of non-", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously. This convenience overload supports the use case\n of non-"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "BsonValue", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonValue"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonValue"}], "label": "", "referencedClassName": "BsonValue"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instances of"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ObjectId", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}], "label": "", "referencedClassName": "ObjectId"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " by wrapping them in\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " by wrapping them in\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "by wrapping them in"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "BsonObjectId", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonObjectId"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonObjectId"}], "label": "", "referencedClassName": "BsonObjectId"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances for the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances for the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instances for the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches specified IDs in a collection asynchronously."}]}], "name": "watchAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 965, "column": 49, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.watchAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "Type", "asString": "ObjectId[]", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "ids", "typeName": "ObjectId[]", "asString": "ObjectId[] ids", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "ids unique object identifiers of the IDs to watch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "unique object identifiers of the IDs to watch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ids unique object identifiers of the IDs to watch."}], "parameterName": "ids", "parameterComment": "unique object identifiers of the IDs to watch.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(ObjectId...)", "flatSignature": "(ObjectId...)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmEventStreamAsyncTask<DocumentT>", "typeName": "RealmEventStreamAsyncTask", "qualifiedTypeName": "io.realm.mongodb.RealmEventStreamAsyncTask", "simpleTypeName": "RealmEventStreamAsyncTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Watches a collection asynchronously. The provided document will be used as a match expression filter on\n the change events coming from the stream. This convenience overload supports the use of\n non-{@link BsonDocument} instances for the user.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "matchFilter the $match filter to apply to incoming change events", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the $match filter to apply to incoming change events"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "matchFilter the $match filter to apply to incoming change events"}], "parameterName": "matchFilter", "parameterComment": "the $match filter to apply to incoming change events", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task that provides access to the stream of change events.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously. The provided document will be used as a match expression filter on\n the change events coming from the stream. This convenience overload supports the use of\n non-", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously. The provided document will be used as a match expression filter on\n the change events coming from the stream. This convenience overload supports the use of\n non-"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "BsonDocument", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonDocument"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BsonDocument"}], "label": "", "referencedClassName": "BsonDocument"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances for the user.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instances for the user.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instances for the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously."}]}], "name": "watchWithFilterAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 988, "column": 49, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.watchWithFilterAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "Document", "typeName": "Document", "qualifiedTypeName": "Document", "simpleTypeName": "Document", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "matchFilter", "typeName": "Document", "asString": "Document matchFilter", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "matchFilter the $match filter to apply to incoming change events", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the $match filter to apply to incoming change events"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "matchFilter the $match filter to apply to incoming change events"}], "parameterName": "matchFilter", "parameterComment": "the $match filter to apply to incoming change events", "isTypeParameter": false}], "typeParamTags": [], "signature": "(Document)", "flatSignature": "(Document)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmEventStreamAsyncTask<DocumentT>", "typeName": "RealmEventStreamAsyncTask", "qualifiedTypeName": "io.realm.mongodb.RealmEventStreamAsyncTask", "simpleTypeName": "RealmEventStreamAsyncTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}, {"commentText": "Watches a collection asynchronously. The provided BSON document will be used as a match expression filter on\n the change events coming from the stream.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "matchFilter the $match filter to apply to incoming change events", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the $match filter to apply to incoming change events"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "matchFilter the $match filter to apply to incoming change events"}], "parameterName": "matchFilter", "parameterComment": "the $match filter to apply to incoming change events", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a task that provides access to the stream of change events.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a task that provides access to the stream of change events."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously. The provided BSON document will be used as a match expression filter on\n the change events coming from the stream.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously. The provided BSON document will be used as a match expression filter on\n the change events coming from the stream.\n <p>\n See <a href=\"https://docs.mongodb.com/manual/reference/operator/aggregation/match/\" target=\"_blank\">how to define a match filter</a>.\n <p>\n Defining the match expression to filter ChangeEvents is similar to\n <a href=\"https://docs.mongodb.com/realm/triggers/database-triggers/\" target=\"_blank\">how to define the match expression for triggers</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Watches a collection asynchronously."}]}], "name": "watchWithFilterAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1010, "column": 49, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoCollection<DocumentT>", "typeName": "MongoCollection", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoCollection", "simpleTypeName": "MongoCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.mongo"}, "qualifiedName": "io.realm.mongodb.mongo.MongoCollection.watchWithFilterAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "BsonDocument", "typeName": "BsonDocument", "qualifiedTypeName": "BsonDocument", "simpleTypeName": "BsonDocument", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "matchFilter", "typeName": "BsonDocument", "asString": "BsonDocument matchFilter", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "matchFilter the $match filter to apply to incoming change events", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the $match filter to apply to incoming change events"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "matchFilter the $match filter to apply to incoming change events"}], "parameterName": "matchFilter", "parameterComment": "the $match filter to apply to incoming change events", "isTypeParameter": false}], "typeParamTags": [], "signature": "(BsonDocument)", "flatSignature": "(BsonDocument)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.RealmEventStreamAsyncTask<DocumentT>", "typeName": "RealmEventStreamAsyncTask", "qualifiedTypeName": "io.realm.mongodb.RealmEventStreamAsyncTask", "simpleTypeName": "RealmEventStreamAsyncTask", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "DocumentT", "typeName": "DocumentT", "qualifiedTypeName": "DocumentT", "simpleTypeName": "DocumentT", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}]}}], "constructors": [], "innerClasses": []}