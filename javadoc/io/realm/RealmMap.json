{"commentText": "RealmMap is used to map keys to values. A RealmMap cannot contain duplicate keys and each key can\n map to at most one value. A RealmMap cannot have {@code null} keys but can have {@code null}\n values.\n <p>\n Similarly to {@link RealmList}s, a RealmDictionary can operate in managed and unmanaged modes. In\n managed mode a RealmDictionary persists all its contents inside a Realm whereas in unmanaged mode\n it functions like a {@link HashMap}.\n <p>\n Managed RealmDictionaries can only be created by Realm and will automatically update its content\n whenever the underlying Realm is updated. Managed RealmDictionaries can only be accessed using\n the getter that points to a RealmDictionary field of a {@link RealmObject}.\n <p>\n Unmanaged RealmDictionaries can be created by the user and can contain both managed and unmanaged\n RealmObjects. This is useful when dealing with JSON deserializers like GSON or other frameworks\n that inject values into a class. Unmanaged RealmMaps can be added to a Realm using the\n {@link Realm#copyToRealm(Iterable, ImportFlag...)} method.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<K> the type of the keys stored in this map", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the type of the keys stored in this map"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<K> the type of the keys stored in this map"}], "parameterName": "K", "parameterComment": "the type of the keys stored in this map", "isTypeParameter": true}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<V> the type of the values stored in this map", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the type of the values stored in this map"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<V> the type of the values stored in this map"}], "parameterName": "V", "parameterComment": "the type of the values stored in this map", "isTypeParameter": true}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap is used to map keys to values. A RealmMap cannot contain duplicate keys and each key can\n map to at most one value. A RealmMap cannot have ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap is used to map keys to values. A RealmMap cannot contain duplicate keys and each key can\n map to at most one value. A RealmMap cannot have "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap is used to map keys to values."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " keys but can have ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " keys but can have "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "keys but can have"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n values.\n <p>\n Similarly to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n values.\n <p>\n Similarly to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "values."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s, a RealmDictionary can operate in managed and unmanaged modes. In\n managed mode a RealmDictionary persists all its contents inside a Realm whereas in unmanaged mode\n it functions like a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s, a RealmDictionary can operate in managed and unmanaged modes. In\n managed mode a RealmDictionary persists all its contents inside a Realm whereas in unmanaged mode\n it functions like a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s, a RealmDictionary can operate in managed and unmanaged modes."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "HashMap", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "HashMap"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "HashMap"}], "label": "", "referencedClassName": "java.util.HashMap", "referencedClass": {"_class": "ClassDoc", "asString": "java.util.HashMap<K, V>", "typeName": "HashMap", "qualifiedTypeName": "java.util.HashMap", "simpleTypeName": "HashMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Managed RealmDictionaries can only be created by Realm and will automatically update its content\n whenever the underlying Realm is updated. Managed RealmDictionaries can only be accessed using\n the getter that points to a RealmDictionary field of a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Managed RealmDictionaries can only be created by Realm and will automatically update its content\n whenever the underlying Realm is updated. Managed RealmDictionaries can only be accessed using\n the getter that points to a RealmDictionary field of a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Unmanaged RealmDictionaries can be created by the user and can contain both managed and unmanaged\n RealmObjects. This is useful when dealing with JSON deserializers like GSON or other frameworks\n that inject values into a class. Unmanaged RealmMaps can be added to a Realm using the\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Unmanaged RealmDictionaries can be created by the user and can contain both managed and unmanaged\n RealmObjects. This is useful when dealing with JSON deserializers like GSON or other frameworks\n that inject values into a class. Unmanaged RealmMaps can be added to a Realm using the\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#copyToRealm(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(Iterable, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "method."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap is used to map keys to values.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap is used to map keys to values."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap is used to map keys to values."}]}], "name": "RealmMap", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 51, "column": 17, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isAbstract": true, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"], "java.util.Map": ["size", "isEmpty", "containsKey", "containsValue", "get", "put", "remove", "putAll", "clear", "keySet", "values", "entrySet", "equals", "hashCode", "getOrDefault", "forEach", "replaceAll", "putIfAbsent", "remove", "replace", "replace", "computeIfAbsent", "computeIfPresent", "compute", "merge"], "io.realm.internal.ManageableObject": ["isManaged", "isValid", "isFrozen"], "io.realm.internal.Freezable": ["freeze"]}, "interfaceTypes": [{"_class": "ParameterizedType", "asString": "java.util.Map<K, V>", "typeName": "Map", "qualifiedTypeName": "java.util.Map", "simpleTypeName": "Map", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": []}, {"_class": "ClassDoc", "asString": "io.realm.internal.ManageableObject", "typeName": "ManageableObject", "qualifiedTypeName": "io.realm.internal.ManageableObject", "simpleTypeName": "ManageableObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ParameterizedType", "asString": "io.realm.internal.Freezable<io.realm.RealmMap<K, V>>", "typeName": "Freezable", "qualifiedTypeName": "io.realm.internal.Freezable", "simpleTypeName": "Freezable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ParameterizedType", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Map", "io.realm.internal.ManageableObject", "io.realm.internal.Freezable"]}], "interfaceTypes": []}], "typeParameters": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<K> the type of the keys stored in this map", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the type of the keys stored in this map"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<K> the type of the keys stored in this map"}], "parameterName": "K", "parameterComment": "the type of the keys stored in this map", "isTypeParameter": true}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<V> the type of the values stored in this map", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the type of the values stored in this map"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<V> the type of the values stored in this map"}], "parameterName": "V", "parameterComment": "the type of the values stored in this map", "isTypeParameter": true}], "fields": [{"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "mapStrategy", "isField": true, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 53, "column": 39, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "FieldDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.mapStrategy", "modifierSpecifier": 20, "modifiers": "protected final", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": true, "isSynthetic": false, "type": {"_class": "ParameterizedType", "asString": "io.realm.RealmMap.MapStrategy<K, V>", "typeName": "RealmMap.MapStrategy", "qualifiedTypeName": "io.realm.RealmMap.MapStrategy", "simpleTypeName": "MapStrategy", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Map", "io.realm.internal.ManageableObject", "io.realm.internal.Freezable"], "containingType": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "isTransient": false, "isVolatile": false, "serialFieldTags": []}], "enumConstants": [], "methods": [{"commentText": "{@inheritDoc}", "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "name": "isManaged", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 93, "column": 20, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.isManaged", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "name": "isValid", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 101, "column": 20, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.isValid", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "name": "isFrozen", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 109, "column": 20, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.isFrozen", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "size", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 118, "column": 16, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.size", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "isEmpty", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 123, "column": 20, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.isEmpty", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "containsKey", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 128, "column": 20, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.containsKey", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "key", "typeName": "Object", "asString": "Object key", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "containsValue", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 133, "column": 20, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.containsValue", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "value", "typeName": "Object", "asString": "Object value", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "get", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 138, "column": 14, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.get", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "key", "typeName": "Object", "asString": "Object key", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "put", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 143, "column": 14, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.put", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "name": "key", "typeName": "K", "asString": "K key", "annotations": []}, {"type": {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "name": "value", "typeName": "V", "asString": "V value", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(K, V)", "flatSignature": "(K, V)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "remove", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 148, "column": 14, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.remove", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "key", "typeName": "Object", "asString": "Object key", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "putAll", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 153, "column": 17, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.putAll", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.util.Map<? extends K, ? extends V>", "typeName": "Map", "qualifiedTypeName": "java.util.Map", "simpleTypeName": "Map", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends K", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superBounds": []}, {"_class": "WildcardType", "asString": "? extends V", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superBounds": []}], "interfaceTypes": []}, "name": "m", "typeName": "java.util.Map<? extends K, ? extends V>", "asString": "java.util.Map<? extends K, ? extends V> m", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.util.Map<? extends K, ? extends V>)", "flatSignature": "(Map<? extends K, ? extends V>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "clear", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 158, "column": 17, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.clear", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "keySet", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 163, "column": 19, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.keySet", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.Set<K>", "typeName": "Set", "qualifiedTypeName": "java.util.Set", "simpleTypeName": "Set", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.util.Collection"]}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "values", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 168, "column": 26, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.values", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.Collection<V>", "typeName": "Collection", "qualifiedTypeName": "java.util.Collection", "simpleTypeName": "Collection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.lang.Iterable"]}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "entrySet", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 173, "column": 29, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.entrySet", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.Set<java.util.Map.Entry<K, V>>", "typeName": "Set", "qualifiedTypeName": "java.util.Set", "simpleTypeName": "Set", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ParameterizedType", "asString": "java.util.Map.Entry<K, V>", "typeName": "Map.Entry", "qualifiedTypeName": "java.util.Map.Entry", "simpleTypeName": "Entry", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "java.util.Map<K, V>", "typeName": "Map", "qualifiedTypeName": "java.util.Map", "simpleTypeName": "Map", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "interfaceTypes": ["java.util.Collection"]}}, {"commentText": "", "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "name": "freeze", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 182, "column": 27, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.freeze", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Map", "io.realm.internal.ManageableObject", "io.realm.internal.Freezable"]}}, {"commentText": "Adds a change listener to this {@link RealmMap}.\n <p>\n Registering a change listener will not prevent the underlying RealmMap from being garbage\n collected. If the RealmMap is garbage collected, the change listener will stop being\n triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class\n variable.\n <p>\n <pre>\n {@code\n public class MyActivity extends Activity {\n\n     private RealmMap<String, Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new MapChangeListener<String, Dog>() {\n           \\@Override\n           public void onChange(RealmMap<String, Dog> map, MapChangeSet<String> changeSet) {\n               // React to change\n           }\n       });\n     }\n }\n }\n </pre>", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be notified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be notified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be notified."}], "parameterName": "listener", "parameterComment": "the change listener to be notified.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException    if you try to add a listener from a non-Looper or\n                                  {@link android.app.IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to add a listener from a non-Looper or\n                                  "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException    if you try to add a listener from a non-Looper or\n                                  "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to add a listener from a non-Looper or\n                                  {@link android.app.IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmMap", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap"}], "label": "", "referencedClassName": "io.realm.RealmMap", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Registering a change listener will not prevent the underlying RealmMap from being garbage\n collected. If the RealmMap is garbage collected, the change listener will stop being\n triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class\n variable.\n <p>\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Registering a change listener will not prevent the underlying RealmMap from being garbage\n collected. If the RealmMap is garbage collected, the change listener will stop being\n triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class\n variable.\n <p>\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n public class MyActivity extends Activity {\n\n     private RealmMap<String, Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new MapChangeListener<String, Dog>() {\n           \\@Override\n           public void onChange(RealmMap<String, Dog> map, MapChangeSet<String> changeSet) {\n               // React to change\n           }\n       });\n     }\n }\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n public class MyActivity extends Activity {\n\n     private RealmMap<String, Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new MapChangeListener<String, Dog>() {\n           \\@Override\n           public void onChange(RealmMap<String, Dog> map, MapChangeSet<String> changeSet) {\n               // React to change\n           }\n       });\n     }\n }\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "public class MyActivity extends Activity {\n\n     private RealmMap<String, Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new MapChangeListener<String, Dog>() {\n           \\@Override\n           public void onChange(RealmMap<String, Dog> map, MapChangeSet<String> changeSet) {\n               // React to change\n           }\n       });\n     }\n }"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmMap", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap"}], "label": "", "referencedClassName": "io.realm.RealmMap", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "name": "addChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 224, "column": 17, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.addChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.MapChangeListener<K, V>", "typeName": "MapChangeListener", "qualifiedTypeName": "io.realm.MapChangeListener", "simpleTypeName": "MapChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.MapChangeListener<K, V>", "asString": "io.realm.MapChangeListener<K, V> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException    if you try to add a listener from a non-Looper or\n                                  {@link android.app.IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to add a listener from a non-Looper or\n                                  "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException    if you try to add a listener from a non-Looper or\n                                  "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to add a listener from a non-Looper or\n                                  {@link android.app.IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be notified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be notified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be notified."}], "parameterName": "listener", "parameterComment": "the change listener to be notified.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.MapChangeListener<K, V>)", "flatSignature": "(MapChangeListener<K, V>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Adds a change listener to this {@link RealmMap}.\n <p>\n Registering a change listener will not prevent the underlying RealmMap from being garbage\n collected. If the RealmMap is garbage collected, the change listener will stop being\n triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class\n variable.\n <p>\n <pre>\n {@code\n public class MyActivity extends Activity {\n\n     private RealmMap<String, Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new RealmChangeListener<RealmMap<String, Dog>>() {\n           \\@Override\n           public void onChange(RealmMap<String, Dog> map) {\n               // React to change\n           }\n       });\n     }\n }\n }\n </pre>", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be notified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be notified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be notified."}], "parameterName": "listener", "parameterComment": "the change listener to be notified.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException    if you try to add a listener from a non-Looper or\n                                  {@link android.app.IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to add a listener from a non-Looper or\n                                  "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException    if you try to add a listener from a non-Looper or\n                                  "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to add a listener from a non-Looper or\n                                  {@link android.app.IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmMap", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap"}], "label": "", "referencedClassName": "io.realm.RealmMap", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Registering a change listener will not prevent the underlying RealmMap from being garbage\n collected. If the RealmMap is garbage collected, the change listener will stop being\n triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class\n variable.\n <p>\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Registering a change listener will not prevent the underlying RealmMap from being garbage\n collected. If the RealmMap is garbage collected, the change listener will stop being\n triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class\n variable.\n <p>\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n public class MyActivity extends Activity {\n\n     private RealmMap<String, Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new RealmChangeListener<RealmMap<String, Dog>>() {\n           \\@Override\n           public void onChange(RealmMap<String, Dog> map) {\n               // React to change\n           }\n       });\n     }\n }\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n public class MyActivity extends Activity {\n\n     private RealmMap<String, Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new RealmChangeListener<RealmMap<String, Dog>>() {\n           \\@Override\n           public void onChange(RealmMap<String, Dog> map) {\n               // React to change\n           }\n       });\n     }\n }\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "public class MyActivity extends Activity {\n\n     private RealmMap<String, Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new RealmChangeListener<RealmMap<String, Dog>>() {\n           \\@Override\n           public void onChange(RealmMap<String, Dog> map) {\n               // React to change\n           }\n       });\n     }\n }"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmMap", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMap"}], "label": "", "referencedClassName": "io.realm.RealmMap", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "name": "addChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 263, "column": 17, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.addChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.RealmChangeListener<io.realm.RealmMap<K, V>>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ParameterizedType", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Map", "io.realm.internal.ManageableObject", "io.realm.internal.Freezable"]}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.RealmChangeListener<io.realm.RealmMap<K, V>>", "asString": "io.realm.RealmChangeListener<io.realm.RealmMap<K, V>> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException    if you try to add a listener from a non-Looper or\n                                  {@link android.app.IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to add a listener from a non-Looper or\n                                  "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException    if you try to add a listener from a non-Looper or\n                                  "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to add a listener from a non-Looper or\n                                  {@link android.app.IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be notified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be notified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be notified."}], "parameterName": "listener", "parameterComment": "the change listener to be notified.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmChangeListener<io.realm.RealmMap<K, V>>)", "flatSignature": "(RealmChangeListener<RealmMap<K, V>>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes the specified change listener.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException    if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException    if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "name": "removeChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 274, "column": 17, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.removeChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.MapChangeListener<K, V>", "typeName": "MapChangeListener", "qualifiedTypeName": "io.realm.MapChangeListener", "simpleTypeName": "MapChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.MapChangeListener<K, V>", "asString": "io.realm.MapChangeListener<K, V> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException    if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException    if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.MapChangeListener<K, V>)", "flatSignature": "(MapChangeListener<K, V>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes the specified change listener.", "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException    if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException    if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "name": "removeChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 286, "column": 17, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.removeChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.RealmChangeListener<io.realm.RealmMap<K, V>>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ParameterizedType", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "K", "typeName": "K", "qualifiedTypeName": "K", "simpleTypeName": "K", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, {"_class": "TypeVariable", "asString": "V", "typeName": "V", "qualifiedTypeName": "V", "simpleTypeName": "V", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Map", "io.realm.internal.ManageableObject", "io.realm.internal.Freezable"]}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.RealmChangeListener<io.realm.RealmMap<K, V>>", "asString": "io.realm.RealmChangeListener<io.realm.RealmMap<K, V>> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException    if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException    if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmChangeListener<io.realm.RealmMap<K, V>>)", "flatSignature": "(RealmChangeListener<RealmMap<K, V>>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes all user-defined change listeners.", "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove listeners from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove listeners from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}]}], "name": "removeAllChangeListeners", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 296, "column": 17, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap.removeAllChangeListeners", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove listeners from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove listeners from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}], "constructors": [{"commentText": "Instantiates a RealmMap in unmanaged mode.", "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates a RealmMap in unmanaged mode.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates a RealmMap in unmanaged mode."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates a RealmMap in unmanaged mode."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates a RealmMap in unmanaged mode.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates a RealmMap in unmanaged mode."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates a RealmMap in unmanaged mode."}]}], "name": "RealmMap", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 62, "column": 15, "file": "realm/realm-library/src/main/java/io/realm/RealmMap.java"}, "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMap<K, V>", "typeName": "RealmMap", "qualifiedTypeName": "io.realm.RealmMap", "simpleTypeName": "RealmMap", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmMap", "modifierSpecifier": 4, "modifiers": "protected", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": []}], "innerClasses": []}