{"commentText": "Interface for marking classes as RealmObjects, it can be used instead of extending {@link RealmObject}.\n <p>\n All helper methods available to classes that extend RealmObject are instead available as static methods:\n <p>\n <pre>\n {@code\n   Person p = realm.createObject(Person.class);\n\n   // With the RealmModel interface\n   RealmObject.isValid(p);\n\n   // With the RealmObject base class\n   p.isValid();\n }\n </pre>\n <p>\n Note: Object implementing this interface needs also to be annotated with {@link RealmClass}, so the annotation\n processor can generate the underlining proxy class.", "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Interface for marking classes as RealmObjects, it can be used instead of extending ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Interface for marking classes as RealmObjects, it can be used instead of extending "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Interface for marking classes as RealmObjects, it can be used instead of extending"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n All helper methods available to classes that extend RealmObject are instead available as static methods:\n <p>\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n All helper methods available to classes that extend RealmObject are instead available as static methods:\n <p>\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n   Person p = realm.createObject(Person.class);\n\n   // With the RealmModel interface\n   RealmObject.isValid(p);\n\n   // With the RealmObject base class\n   p.isValid();\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n   Person p = realm.createObject(Person.class);\n\n   // With the RealmModel interface\n   RealmObject.isValid(p);\n\n   // With the RealmObject base class\n   p.isValid();\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Person p = realm.createObject(Person.class);\n\n   // With the RealmModel interface\n   RealmObject.isValid(p);\n\n   // With the RealmObject base class\n   p.isValid();"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n Note: Object implementing this interface needs also to be annotated with ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n Note: Object implementing this interface needs also to be annotated with "}], "firstSentenceTags": []}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmClass", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass"}], "label": "", "referencedClassName": "io.realm.annotations.RealmClass", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmClass", "typeName": "RealmClass", "qualifiedTypeName": "io.realm.annotations.RealmClass", "simpleTypeName": "RealmClass", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", so the annotation\n processor can generate the underlining proxy class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", so the annotation\n processor can generate the underlining proxy class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", so the annotation\n processor can generate the underlining proxy class."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Interface for marking classes as RealmObjects, it can be used instead of extending ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Interface for marking classes as RealmObjects, it can be used instead of extending "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Interface for marking classes as RealmObjects, it can be used instead of extending"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "name": "RealmModel", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": true, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": true, "isIncluded": true, "position": {"line": 45, "column": 8, "file": "./realm/realm-library/src/main/java/io/realm/RealmModel.java"}, "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmModel", "modifierSpecifier": 513, "modifiers": "public interface", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isAbstract": true, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [], "inheritedMethods": {}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [], "constructors": [], "innerClasses": []}